commit 17fae8cee663e5833072ec0c892d6fa6c3e98de3
Author: Yi Situ <yisitu@google.com>
Date:   Wed Oct 28 15:04:09 2020 -0700

    Removed a flaky test.
    
    PiperOrigin-RevId: 339545685
    Change-Id: Ife8a0ee6a91825e094f3fdea5a3779da083b751b

commit 861d3e482bd2ab7e449a2aed54f70fb9ea145d61
Author: Yi Situ <yisitu@google.com>
Date:   Wed Oct 28 15:04:09 2020 -0700

    Removed a flaky test.
    
    PiperOrigin-RevId: 339545685
    Change-Id: Ife8a0ee6a91825e094f3fdea5a3779da083b751b

commit 1b49ab758fb350487d2d2c109222fa6b619f4dc9
Author: Jiri Simsa <jsimsa@google.com>
Date:   Thu Oct 22 16:57:37 2020 -0700

    [tf.data] Disabling flaky test in OSS.
    
    PiperOrigin-RevId: 338576858
    Change-Id: Ieaedad89afeb8e3dfd5206bbed0fa7250965c230

commit 5bb2dc8ef9b16ceeba882ecf95f06681b5f1c84f
Author: Chenkai Kuang <chenkai@google.com>
Date:   Wed Oct 21 17:18:54 2020 -0700

    Disable flaky test.
    
    PiperOrigin-RevId: 338372286
    Change-Id: I16fc53b6bfa5e221a1c74ce321207de02fd0fe42

commit 84967b39fa98d27f5984648f9ec47a159206cfda
Author: Eugene Brevdo <ebrevdo@google.com>
Date:   Tue Oct 20 12:29:23 2020 -0700

    [TF] [saved_model_cli] Add support for multithreaded cpu service.  Off by default.
    
    This change allows the linkage of multithreaded XLA AOT CPU backend objects,
    such as multithreaded matmul, conv2d, etc.  These are not enabled by default.
    
    New unit tests confirm that the objects are emitted and linked correctly,
    and the resulting computations are numerically correct.
    
    MKL service backend objects are not included.
    
    Other changes:
    * C++ Unit tests now use arg_feed_{x,y} instead of arg0/arg1, since the names
      are flaky (they may swap from the signature)
    * Add argument "multithreading=" to the bzl file and saved_model_cli.
    * Add unit tests using "nm" to ensure that the proper symbols are used when
      enabling or disabling multithreading (not sure if they are windows-friendly).
    * Use a simpler and more unique string for the entry_point string.
    
    PiperOrigin-RevId: 338112208
    Change-Id: Id734e75e63e72db93a743f451ddb7eb6f489c1c7

commit df6e81b0b369f6c7441457614a3faac58191f58a
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Fri Oct 16 11:47:09 2020 -0700

    Disable broken flaky test
    
    PiperOrigin-RevId: 337548608
    Change-Id: I7450feaf858c59a31247313c3c08c69f6520c1c5

commit 46c34d1d13120f3b9122f2e4d727b87c4e6fed0d
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Fri Oct 16 08:41:19 2020 -0700

    Disable flaky TSAN test
    
    PiperOrigin-RevId: 337511949
    Change-Id: I53b334bcef37b98466c8b03813da35764fc36bcb

commit 65ec9250e26dac8f27a1d2c361a4725b59c3f1bd
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Thu Oct 15 11:29:22 2020 -0700

    Disable broken flaky test
    
    PiperOrigin-RevId: 337348661
    Change-Id: Ibd83dadbc6a4c5c84e3692f4861e50a1e208f1ff

commit 78408ea44affec370b5b20cd7bb50d420d199dc4
Author: Andrew Audibert <aaudibert@google.com>
Date:   Wed Oct 14 18:16:31 2020 -0700

    [tf.data service] Disable flaky tests
    
    PiperOrigin-RevId: 337215129
    Change-Id: I61a618b47a83a5cb4f92f9ca41a65fc4e85d5529

commit 2ed5ba8387424a1b57c35bd85d5fc295ac3f6e91
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Wed Oct 14 17:31:27 2020 -0700

    Disable flaky TAP test
    
    PiperOrigin-RevId: 337208761
    Change-Id: If1edd26bbfe0c758c1f05144b0673fff56edb614

commit dc7e041a336d9890aff543058047b797348754a7
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Wed Oct 14 16:44:36 2020 -0700

    Disable flaky ASAN test
    
    PiperOrigin-RevId: 337200311
    Change-Id: Ibdb64ff4d21715681e4c0059a989a665ceb390c3

commit 1668b32e7741a79ae105560be521519cefed7e9e
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Wed Oct 14 16:23:57 2020 -0700

    Disable flaky TSAN test
    
    PiperOrigin-RevId: 337196436
    Change-Id: I7ab2f0529b4fcf7ce9f50b522d0a8d270407b307

commit 162e0e02b88788cbaaff5f28446833033fb56dba
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Wed Oct 14 16:06:02 2020 -0700

    Disable flaky TSAN test
    
    PiperOrigin-RevId: 337193042
    Change-Id: Ia7e4573d1d6aa2e739a6e000902335140d6b142e

commit 8601477de262af6d80a99cded79ffae1a14d5702
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Wed Oct 14 16:03:03 2020 -0700

    Disable flaky TSAN test
    
    PiperOrigin-RevId: 337192418
    Change-Id: I10ab55e7048394059f88865a17cb7508ca289aa1

commit 86d5f9d26c47d33fc117189050759a7a5e7c0ebb
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Wed Oct 14 12:13:18 2020 -0700

    Disable broken/flaky TSAN test
    
    PiperOrigin-RevId: 337143782
    Change-Id: I46ab677a83678fc37561769f789e74397adea274

commit cf7b1c2d71909e2768946ea013bfbd0d1d8b7a46
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Wed Oct 14 12:06:18 2020 -0700

    Disable broken/flaky TSAN test
    
    PiperOrigin-RevId: 337142196
    Change-Id: I44172ecb184ea2efd0685b16b924c91608e26964

commit 229d51cd96f387dc710b81aa0ef20d243ad8e0a5
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Wed Oct 14 11:57:26 2020 -0700

    Disable broken/flaky TSAN test
    
    PiperOrigin-RevId: 337139985
    Change-Id: I3066f3357f01a1c378269d4c6fc6cdc1d5ace5b1

commit 6358ad35c879014b7b3c557e4f3cb8646ed6d2bb
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Wed Oct 14 10:27:32 2020 -0700

    Disable broken flaky TSAN MLIR/TFR test.
    
    PiperOrigin-RevId: 337118470
    Change-Id: I237b9c8f66867ab1850126fc87aad22161d5c6d8

commit da8e7314544aa39d85d9bb111645077d1692ae05
Author: Yi Situ <yisitu@google.com>
Date:   Mon Oct 5 17:27:44 2020 -0700

    Fixed flaky test by increasing grace duration.
    
    PiperOrigin-RevId: 335535674
    Change-Id: Idff0caaedf9585f19ab15d51ecaa5a0495bf337c

commit 0ea0e6d434bdbb787aa2dbaed53c277131c327d5
Merge: 6a0eb6f bbf2a5d
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Thu Sep 17 16:59:51 2020 -0700

    Merge pull request #43321 from tensorflow/mm-disable-flaky-test
    
    Disable a flaky test on mac py38

commit bbf2a5d4b700097fbf286332f22bb9a0c8d79374
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Thu Sep 17 16:58:44 2020 -0700

    Disable a flaky test on mac py38

commit 34b7331467c2f2124b460a3de03a63070b130155
Author: Akshay Modi <nareshmodi@google.com>
Date:   Fri Sep 11 12:49:49 2020 -0700

    Disable c_api_distributed_test in OSS since it seems flaky
    
    PiperOrigin-RevId: 331204141
    Change-Id: Idaae784b31758631a0e32e5aec29161bb7d38bb5

commit 0f8656631d0445f46b6c06e1f66831b7426b5a08
Author: Andrew Audibert <aaudibert@google.com>
Date:   Fri Sep 11 12:48:29 2020 -0700

    [tf.data service] Fix flaky GcUnusedJob test.
    
    The dataset needs more than 10 elements because by default we prefetch 16, creating a race condition where the job may finish before being garbage collected, resulting in self.assertEqual(worker._num_tasks(), 1) failing because there are 0 tasks.
    
    PiperOrigin-RevId: 331203813
    Change-Id: Iaaff7ac1e1c199c3606a3e51910dc6a704aa1664

commit 2dae6b39672362ad86da11754feba0b02af9d2bc
Author: Mehdi Amini <aminim@google.com>
Date:   Thu Aug 20 21:39:46 2020 -0700

    Disable flaky test: //third_party/tensorflow/python/keras/distribute:multi_worker_tutorial_test
    
    PiperOrigin-RevId: 327753644
    Change-Id: I36498f8677e890cb3146f7f2bf43aa0029bdaf99

commit cb4191a2067d61f23267ae493ab3e5e32185b3ae
Author: Mehdi Amini <aminim@google.com>
Date:   Thu Aug 20 15:06:33 2020 -0700

    Disable flaky test //tensorflow/python/keras/distribute:parameter_server_training_test
    
    PiperOrigin-RevId: 327705903
    Change-Id: I8f4a170ad14f458a537e1169b10724d68107080c

commit 5f392207bb31c4fb381900bc4239b30a39a326ef
Author: Andrew Audibert <aaudibert@google.com>
Date:   Thu Aug 6 17:57:23 2020 -0700

    Disable flaky test
    
    PiperOrigin-RevId: 325348505
    Change-Id: I534aedd5f980915aa41f00b333d6ae25826319d8

commit 660c0e77d82962fd8d02a4b993320c348c99e960
Author: Anna R <annarev@google.com>
Date:   Tue Jul 28 16:04:04 2020 -0700

    Disable tensorflow/c/eager:c_api_distributed_test since it is flaky.
    
    PiperOrigin-RevId: 323672949
    Change-Id: Ib4210df2f41a79ca5f75986fc3678595a96bf88a

commit 7a1ae0a1611ed77b52c35a6a2469600330620586
Author: Anna R <annarev@google.com>
Date:   Fri Jul 24 11:29:35 2020 -0700

    Disable tensordot_op_test_xla_gpu since it is flaky.
    
    PiperOrigin-RevId: 323035752
    Change-Id: I30ebe6e15bba96ce35dc38912f2656ec433afe77

commit f112d4bd7dc60a1582ab3de8ce12f2f92c5f806a
Author: Anna R <annarev@google.com>
Date:   Wed Jul 22 18:56:35 2020 -0700

    Disable collective ops abort tests on windows since they seem to be flaky.
    
    PiperOrigin-RevId: 322702070
    Change-Id: I490a411be4bba5b112bdb3bf748297edbe41e02e

commit c9db66374c611722683e27520ed29c66e1540359
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Wed Jul 15 09:05:30 2020 -0700

    Increase number of shards to prevent flaky timeouts
    
    PiperOrigin-RevId: 321371211
    Change-Id: I3508bd5ffc367edec5bad81c19f2ae4219841c47

commit 16c746192d3a28a498e2ab2dae8df8f4555b9dd5
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Tue Jul 14 09:19:02 2020 -0700

    Disable flaky ASAN test.
    
    Fails due to gRPC timeout
    
    PiperOrigin-RevId: 321171451
    Change-Id: I9f38d3dec54dbe46c47251cc44a4e65ff7dc2f58

commit 6ffe7a2ecd7f275723eebc406ac6498c0632d5e9
Author: Kibeom Kim <kkb@google.com>
Date:   Fri Jul 10 17:32:11 2020 -0700

    Disable flaky test //third_party/tensorflow/core/grappler/optimizers:remapper_test_gpu FuseConv2DWithBiasAndActivationOnGPU
    
    PiperOrigin-RevId: 320706567
    Change-Id: I7cd8c82204a07f84ca0f65dfa22568944b3c8e07

commit 99e19f6cf5b98fc5a5ddbd54ebf4a4d499ac1dae
Author: Kibeom Kim <kkb@google.com>
Date:   Thu Jul 9 09:12:45 2020 -0700

    Disable flaky //third_party/tensorflow/lite/python:tflite_convert_test test
    
    PiperOrigin-RevId: 320408784
    Change-Id: I5e307b98eabc977981511a2087f470ab30df85c2

commit 112a49004434fb77f6752221db246242477a2d8f
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Wed Jul 8 16:56:56 2020 -0700

    Disable test which has flaky timeouts and breaks build
    
    PiperOrigin-RevId: 320294143
    Change-Id: I21b1aee398fda5282f815fc84a8e65baa2a8541a

commit 683c3eb5fc955a60e80c4f7bb1898a33fd08852a
Author: Sanjoy Das <sanjoy@google.com>
Date:   Tue Jul 7 15:20:54 2020 -0700

    Disable some flaky tests
    
    This CL disables some reduction vectorization tests because they have a couple of problems:
    
      1. The test tests different things depending on the GPU present on the machine
         that the test is run on.  This makes test failures non-reproducible.
      2. The test also tests the equivalent of the output of `opt -O3`.  This makes
         it difficult to root cause failures when they do happen.
    
    I will fix the tests separately as a follow-up.
    
    PiperOrigin-RevId: 320071954
    Change-Id: I3e3b6df2d23c48fa18fc4ebd23035919c1a4592d

commit 74314054167ea5bbcb18c4b6a3bb2bd21c5c48e6
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Mon Jul 6 14:21:54 2020 -0700

    Disable flaky runtime test
    
    PiperOrigin-RevId: 319854753
    Change-Id: Id28546b963a90b0451c678262ce139cc64f54b4e

commit c42314ef70f9e093e53cb85d0dac19535bd677ae
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Tue Jun 16 10:29:33 2020 -0700

    fix flaky test multi_process_runner_test on tensorflow msan TAP. allow more margin of errors.
    
    PiperOrigin-RevId: 316708284
    Change-Id: I3ab912bd7a546bbedf5ed7825fa4b345e92880d8

commit e665a737f90564cd143fdc1b15420720596d17e1
Author: Marat Dukhan <maratek@google.com>
Date:   Fri Jun 12 14:22:28 2020 -0700

    Avoid numerical stability issues in MEAN test
    
    Fix flaky test in XNNPACK delegate
    
    PiperOrigin-RevId: 316176756
    Change-Id: I24ca84f807708f58971f3e29251734e5db8505fc

commit d7da550fc7b1f9ab3394c927c5078c22f75b8eca
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Mon Jun 8 14:36:42 2020 -0700

    Make eager/monitoring_test.py less flaky.
    
    MonitoredTimer measures wall time, so we're susceptible to the process being
    interrupted. To measure time intervals of different lengths, wrap them inside
    each other, that way guaranteeing that the inner one is shorter than the
    outer one.
    
    PiperOrigin-RevId: 315355335
    Change-Id: I6eb136f221f4b96917ad8f6708f4a9bad18841c9

commit 21715bfb30784c7bec7c1c57efabfea2de3be47d
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Fri Jun 5 12:50:22 2020 -0700

    Disable flaky tests on windows.
    
    The tests are failing potentially due to issues shutting down rpc servers
    
    PiperOrigin-RevId: 314979132
    Change-Id: Ie1fa76a1d8f096ddb09491d3ace4319bc0d5565b

commit 5e3932ce780cb2eae1549bf93481a1d6d181f00b
Author: Yujing Zhang <yujingzhang@google.com>
Date:   Thu Jun 4 17:36:41 2020 -0700

    Disable a flaky test test_group_conv
    
    PiperOrigin-RevId: 314837253
    Change-Id: I4deceead7a8a5b82a45b30025819a961dbdb5bb9

commit 5e79dc4e633ae0e70f739ce6f0e49389f0db519e
Author: Ran Chen <crccw@google.com>
Date:   Thu Jun 4 13:43:53 2020 -0700

    Fix flakyness in multi_worker_callback_tf2_test
    
    Add a barrier since worker-1 may get to the assertions before worker-0
    writes/deletes the checkpoints/backups.
    
    PiperOrigin-RevId: 314795675
    Change-Id: I16c56a21db152543b40d6021b796afe265d16e6b

commit a7d8140e60d351d25ee3ba8236d8badf975dcada
Author: Gaurav Jain <gjn@google.com>
Date:   Wed Jun 3 15:17:11 2020 -0700

    Disable flaky test
    
    PiperOrigin-RevId: 314614530
    Change-Id: I9b2667deb0565a7162af0e8a2b556893e6722b93

commit 1a13e3c8234d9040c26010af7ba4193a970b52b4
Author: Sanjoy Das <sanjoy@google.com>
Date:   Thu May 28 00:10:31 2020 -0700

    Re-land "Make the tf2xla "tensor list size not set" error message a bit more ergonomic"
    
    The CL was rolled back due to a flaky test.
    
    PiperOrigin-RevId: 313537542
    Change-Id: I4a60e924e53178802f70cb041a384f625e278b80

commit 7315b275c05154c6e2701e0c934d11788e671d62
Author: Scott Zhu <scottzhu@google.com>
Date:   Thu May 21 14:14:42 2020 -0700

    Disable flaky test.
    
    PiperOrigin-RevId: 312739001
    Change-Id: I7a7a9ad5cc7cf8ad63919d6473c15eb7c274692a

commit cd0322fa0ea8954901ad2f1a47a4fd869d79b8e6
Author: Kibeom Kim <kkb@google.com>
Date:   Tue May 19 21:38:42 2020 -0700

    Disable flaky TFRT tests.
    
    PiperOrigin-RevId: 312415958
    Change-Id: I5cdaab0a4c5c2e9cf09bcee61df3b008a98eac22

commit 81f379b0f4d6f89a5faa3c43d81f0fa36fbbd200
Author: Yifei Feng <yifeif@google.com>
Date:   Tue May 19 19:41:11 2020 -0700

    Disable flaky tensorflow/c/eager:c_api_remote_test on asan
    
    PiperOrigin-RevId: 312403791
    Change-Id: Ide29a0e661c6dcb44abb0d39657d1e97fecf04d6

commit 714092f36095ec762a5806fbe3c0fad7ec162e8e
Author: Yifei Feng <yifeif@google.com>
Date:   Mon May 18 18:36:37 2020 -0700

    Disable flaky tensorflow/c/eager:c_api_test
    
    PiperOrigin-RevId: 312195494
    Change-Id: I7cbd78f2142ef586e6ca78da73c2cf53304ae3b6

commit 843f3da02df95e95593af625091646e3ed49b8d6
Author: Gaurav Jain <gjn@google.com>
Date:   Tue May 12 23:26:08 2020 -0700

    Disable flaky test
    
    PiperOrigin-RevId: 311272834
    Change-Id: Id8af3ac197f65dde4ae50c9b5ad63d2d328652f6

commit 06b9206d647e7ccf87eb7dbc95885ed99a7692fc
Merge: b8e808a f173922
Author: Andrew Cavanaugh <andrewc@xmos.com>
Date:   Wed May 6 16:14:26 2020 -0400

    Merge branch 'master' of github.com:tensorflow/tensorflow
    
    * 'master' of github.com:tensorflow/tensorflow: (931 commits)
      Update make_tensor_proto to support nested nparray values when dtype is specified.
      Add a script to install patchelf on docker containers and add it to multipython. Install auditwheel as well.
      Expose disable_per_channel in MLIR to be used experimentally by tflite tooling
      Improve TensorFlow arithmatic op folders
      Raises a more meaningful error when fdef is missing
      Fix layout_optimizer_test on Windows.
      [PropagatorState] Use `IterationState*` instead of `int64` iteration ID in `TaggedNode`.
      Disable only the TPU version of distribute_strategy_test
      Some tests fixes.
      Go: Update generated wrapper functions for TensorFlow ops.
      Replace safeguard against aliasing cond variables with a dynamic check. It is more verbose but more robust in the presence of exception-driven control flow.
      Internal change
      Include new op EnqueueTPUEmbeddingRaggedTensorBatch in the list of TPUEmbedding enqueue ops don't get auto control edges created so that they can be used in TF2/eager mode in tf.functions.
      Disable flaky test
      [WhileOp] Support forwarded inputs in the `ComputeAsync()` path.
      [ArgOp] Use `CanConsumeArg()` and `ConsumeArg()` when possible.
      Improve TensorFlow arithmatic op folders
      [tfdbg2] Implement the to_json() methods of two data classes
      Go: Update generated wrapper functions for TensorFlow ops.
      Disable flaky XLA test on GPU
      ...

commit dd00d506b334c53fc912d2a8866af2ded2538b6c
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Wed May 6 09:32:44 2020 -0700

    Disable flaky test
    
    PiperOrigin-RevId: 310167666
    Change-Id: I5e97c9c51323643bcd75465e39ef7690868695e0

commit e2542d4a35963b58aae89a865ebc88062e86fe28
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Wed May 6 07:39:28 2020 -0700

    Disable flaky XLA test on GPU
    
    PiperOrigin-RevId: 310148400
    Change-Id: Ic9ed5636967652d53e315fabf2f2cbc53ef013a0

commit 30bdba67cc15c67883663b4e24c626afd97b4b5f
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Tue May 5 09:24:31 2020 -0700

    Disable flaky test
    
    PiperOrigin-RevId: 309960128
    Change-Id: I9a65669fd3b30c06d58ef82e5c4db397053d4189

commit eb44e1a63d3c03245cff2319a7392f336df848e0
Author: Priya Gupta <priyag@google.com>
Date:   Fri May 1 11:31:53 2020 -0700

    Re-enable keras_dnn_correctness_test as it appears no longer flaky.
    
    PiperOrigin-RevId: 309442596
    Change-Id: Ib4e001c4fa5595e6ecff7ee275a1b2a030aaf974

commit ac54b6e7f15131c1256324dc01ef3d1f3d69c499
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Thu Apr 30 19:42:45 2020 -0700

    Disable flaky guitar test
    
    PiperOrigin-RevId: 309346828
    Change-Id: I13b7651af2532e7cab78bfbefc61d69ea7b2de5b

commit fa5194b3b5d7f12d29e7d33697456e9655eb4352
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Thu Apr 30 19:09:00 2020 -0700

    Disable flaky test on TSAN
    
    PiperOrigin-RevId: 309344029
    Change-Id: I2aab1976de7d95f05c07869be1bae6fae70fc7d1

commit afa06187b908b86b09be35b41a50a53a05360115
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Thu Apr 30 17:57:23 2020 -0700

    Typo fix: tsan should have been asan as the test is flaky on ASAN
    
    PiperOrigin-RevId: 309335238
    Change-Id: I9e5ff07469620d00564009d3702d267cf989fe64

commit 51ec68ae070d5fa9bb300382201199a3550e5eaf
Author: Christopher Suter <cgs@google.com>
Date:   Thu Apr 30 13:03:26 2020 -0700

    Re-enable multinomial_test, no longer flaky.
    
    PiperOrigin-RevId: 309284030
    Change-Id: I6805cf3e02fe1bed6016ed68e7233c1aeb1989f8

commit f69af82c3d12dc176cdd6498584635b80904e814
Author: Priya Gupta <priyag@google.com>
Date:   Thu Apr 30 12:25:28 2020 -0700

    Enable a disable test as it no longer seems flaky.
    
    PiperOrigin-RevId: 309276529
    Change-Id: I6df64c5dee7efbf6843a3da5838cb15d42e92a6c

commit 7148ced9511f4c4dceacd4b819ae76346428167c
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Thu Apr 30 11:23:12 2020 -0700

    Disable flaky test on TAP
    
    PiperOrigin-RevId: 309264308
    Change-Id: I2ff491eb28627d1da723a737763a14b37885fb71

commit 614c73e266fe03499f3189a5dd9d69c56da605b2
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Thu Apr 30 11:16:37 2020 -0700

    Disable flaky ASAN test
    
    PiperOrigin-RevId: 309263028
    Change-Id: I7726bc763c7630c5c513fceb19e240161c376bc4

commit 3fe0a527bab363a346058c817ded7a2843921254
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Thu Apr 30 11:11:28 2020 -0700

    Disable flaky ASAN test
    
    PiperOrigin-RevId: 309262013
    Change-Id: I10559a0ce2516f7bf0059c9e0c2ba5058e8ccc8f

commit 86a600513679a671d041cbf414b44a3445ed877f
Author: Reed Wanderman-Milne <reedwm@google.com>
Date:   Tue Apr 28 15:54:18 2020 -0700

    Fix flaky loss_scale_optimizer_test.
    
    The test would timeout about 2% of the time.
    
    PiperOrigin-RevId: 308914241
    Change-Id: Ic24402ef3f87152f94b96eddf76bc2372d7a5d27

commit 1e5d6adc006fcaff521b0a2b0fd3bcf6165b97c6
Author: Akshay Modi <nareshmodi@google.com>
Date:   Thu Apr 16 14:26:58 2020 -0700

    Reenable flaky input_lib_test.
    
    PiperOrigin-RevId: 306921423
    Change-Id: Ife5fdf8ed785fceac5df2d11e161a64dc69f8c2e

commit a595304f559a66d7dde2dd982a1883bc7d3be1af
Author: Anjali Sridhar <anjalisridhar@google.com>
Date:   Thu Apr 16 11:32:50 2020 -0700

    Reenable flaky input_lib_test.
    
    PiperOrigin-RevId: 306888018
    Change-Id: I1553272290f93e13f7f27f02f6dd9aef56796531

commit 4ab0fd6f42444259155ad4ecddda2649dfebb10d
Author: Haoyu Zhang <haoyuzhang@google.com>
Date:   Wed Apr 15 11:38:13 2020 -0700

    Run test on TAP except one flaky test case.
    
    PiperOrigin-RevId: 306685667
    Change-Id: I084ed50e0b3a019468da929324bc0ea2b62a6560

commit fb09b7611aff9c2fecd384e05d40d66bb762e447
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Tue Apr 14 18:22:33 2020 -0700

    Disable flaky XLA test
    
    PiperOrigin-RevId: 306554609
    Change-Id: I932c5109f50d27ee3c0a9c101a1b36d8898eb19f

commit baf2513d4d6ba588e9009d4eb41e870138d6a118
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Tue Apr 14 18:22:05 2020 -0700

    Fix typo in tag for disabled flaky test
    
    PiperOrigin-RevId: 306554548
    Change-Id: I68d5aa0d212e5062224e389a893648621d198808

commit 496be7c37547d6a59add81d3fa45bc7d02ebe607
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Mon Apr 13 14:38:38 2020 -0700

    Disable flaky test
    
    PiperOrigin-RevId: 306311793
    Change-Id: I467e510316979c3af905464050e4a1393692527a

commit c7d0948b92330a1d771dc193a9cd15010d4f0347
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Mon Apr 13 14:26:00 2020 -0700

    Disable flaky test
    
    PiperOrigin-RevId: 306309137
    Change-Id: Icd4c28aa18b03492379ced02232bb1dbe4b0f833

commit 0468c45d3496ec45c2a2cd109599a46975ffc158
Author: Frank Chen <frankchn@google.com>
Date:   Mon Apr 13 08:54:59 2020 -0700

    Roll-forward for snapshot_util::Writer (internal test was flaky)
    
    PiperOrigin-RevId: 306241081
    Change-Id: Iecae08936fa327bae1f9fd2d9c2199ef45af8bbd

commit 9a9a4bfec64cec8a12d31809404ece94a4f55771
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Fri Apr 10 18:54:17 2020 -0700

    Disable flaky test on GPU
    
    PiperOrigin-RevId: 305984429
    Change-Id: I73fd812385a6a7f87a9a0b8419b98c63d93994e2

commit f7a63abf4c65649f86e507e4685c56675bc9e9d7
Author: Shanqing Cai <cais@google.com>
Date:   Fri Apr 10 11:05:59 2020 -0700

    [tfdbg2] Separate keras-dependent tests from dumping_callback_test
    
    Also re-enables tensorflow/python/debug:dumping_callback_test as a whole
    while disabling `testMultiThreadedDumpingWithDifferentSettings` which is
    flaky on GPU.
    
    PiperOrigin-RevId: 305907532
    Change-Id: I35080c775b9a8c23324a6a0081f6a43e6c1d6d57

commit fbfb7e412c88174141549d3be78003645d91fae3
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Fri Apr 10 10:19:47 2020 -0700

    Disable flaky test
    
    PiperOrigin-RevId: 305897991
    Change-Id: Iee5d4f7838702547b18e84579f6e816fad6b4b2d

commit aa15cad52c141688b0fc6b97002af110ff576681
Author: Jacques Pienaar <jpienaar@google.com>
Date:   Thu Apr 9 18:05:47 2020 -0700

    Disable another flaky on Mac test
    
    Likely this failure is related to previous one.
    
    PiperOrigin-RevId: 305799628
    Change-Id: I4c2a695a347ee86e350d318adb5a9ecd1a5d3fdc

commit 896efbf1570568d02e2a171da361a529c6562379
Author: Akshay Modi <nareshmodi@google.com>
Date:   Tue Apr 7 16:09:50 2020 -0700

    Remove use of multiprocessing in testFlush
    
    The test was disabled in a variety of places due to multiprocessing being
    flaky, so this seemed like an improvement.
    
    PiperOrigin-RevId: 305360413
    Change-Id: I5e383bebec23c8546d1b58cd7524e020d975591b

commit b32ac01a82c7b15d5a0a09f98fb13b38b2fef150
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Wed Apr 1 11:40:59 2020 -0700

    Disable flaky preprocessing_stage_test
    
    PiperOrigin-RevId: 304228866
    Change-Id: I71271c931013190110da70f95eb0358730485cde

commit a96ed21f75e9972d9bcc623f9d3b9863b446f7b6
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Wed Apr 1 11:36:30 2020 -0700

    Disable flaky training_test
    
    PiperOrigin-RevId: 304227925
    Change-Id: Ifcf55f7f485fa0a4a6026ef82750f8b898c3e046

commit 26fdbf9b7c293292feebc888f573be690d107797
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu Mar 26 13:35:34 2020 -0700

    Fix flaky test. Sometimes the model.fit finishes too fast, and ran 10 epochs within a second.
    
    PiperOrigin-RevId: 303183728
    Change-Id: I3009dc4f5177f71d8896083ab4dcf79304e317c7

commit f68e082e2be3b843f69f965e5d0e47d50901f1b0
Author: Haoyu Zhang <haoyuzhang@google.com>
Date:   Mon Mar 23 17:13:59 2020 -0700

    Disable flaky eager:remote_test
    
    PiperOrigin-RevId: 302552940
    Change-Id: Iebabdccbf3adf831deb64242d2e56d647f146f60

commit a58b1026bd971e63dddf72b931a4b1575b277b3b
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Mon Mar 23 16:04:41 2020 -0700

    Disable flaky eager:remote_test
    
    PiperOrigin-RevId: 302539025
    Change-Id: Ie8a95813a2c2eb2bc15bdcdef4c89c7c4d22fe06

commit 8e19ad854a69dcd98a8b5661990bf1f2613e0fe5
Author: Haoyu Zhang <haoyuzhang@google.com>
Date:   Mon Mar 23 14:12:47 2020 -0700

    Temporarily disable flaky tests.
    
    PiperOrigin-RevId: 302514325
    Change-Id: Ic23fe1dfcd62f6afda1947bdcc7bfafcdb6adb82

commit c6ec2565db03ff3a02e696ca889bf0cef104eed7
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Mon Mar 23 11:49:54 2020 -0700

    Disable flaky rebatch_dataset_test
    
    PiperOrigin-RevId: 302483379
    Change-Id: I1cd480ab6917f58899568d5ded8c07fb5625e22b

commit 6dffcddea9a5d5d1aa45213c09c6d6424a93938f
Author: Jose Baiocchi <jbaiocchi@google.com>
Date:   Tue Mar 17 15:19:28 2020 -0700

    Fix flaky host_tracer_test
    
    PiperOrigin-RevId: 301464254
    Change-Id: I7f36d5a0c7b21c69e94a40cc6c62c11ed9cf0e5b

commit e27d8bbe49b67407e0bf63c5b7f511224d2e0daa
Author: Renjie Liu <renjieliu@google.com>
Date:   Mon Mar 16 16:34:16 2020 -0700

    Disable flaky unidirectional_sequence_lstm_test
    
    PiperOrigin-RevId: 301261722
    Change-Id: I211e0bc86ceadd80e2e672dacc85835e0777daea

commit 3ba639f091ea7cdde4e9207844560042052f8cbe
Author: Renjie Liu <renjieliu@google.com>
Date:   Fri Mar 13 21:19:25 2020 -0700

    Fix flaky lstm test. The cell_clip should be 0.
    
    PiperOrigin-RevId: 300879739
    Change-Id: I775318fee765bef06b5636220754070db272ad93

commit f57361179f91be5531c9708c08d639b2d29be3e8
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Fri Mar 13 15:25:52 2020 -0700

    Disable flaky input_lib_test
    
    PiperOrigin-RevId: 300837653
    Change-Id: Ifdb1519440e878547ffb187d05ea261b0d3a9524

commit 0f7ed58c084cefc0585989965d4391718f9fa994
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Fri Mar 13 13:30:50 2020 -0700

    Disable flaky cpu:host_tracer_test in open source.
    
    PiperOrigin-RevId: 300816933
    Change-Id: I5abb7c8384cd5e24750ff267ae5b9ea74b448ddc

commit 4c182506f0040b48eed63388d31349af5591cfbb
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Fri Mar 13 12:28:00 2020 -0700

    Disable flaky unidirectional_sequence_lstm_test
    
    PiperOrigin-RevId: 300805613
    Change-Id: I6a52eb8f2f2c0f76adcb11b6a1e16a88f2a7f58e

commit 0d8f1f3fca339986f3995d95835da0e833fc19cc
Author: Smit Hinsu <hinsu@google.com>
Date:   Sun Mar 8 00:45:38 2020 -0800

    Temporarily disable flaky test distribute:cross_device_ops_test
    
    PiperOrigin-RevId: 299651916
    Change-Id: I74a09c7ad9eca29fbc314a68a0ce1144eadee7a3

commit e21667ae7371e32aefb6f8c67877e30cf668c852
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed Mar 4 14:16:56 2020 -0800

    Temporarily whitelist an unexpected 'builtins.function' in testNewPythonObjectBelowThreshold test which was flaky due to this.
    
    PiperOrigin-RevId: 298938696
    Change-Id: Iaedb6fa508170a512031467ae7fcf93472769e76

commit 0b0432ae2d7519aa3f8f9e9569429685024fa823
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed Mar 4 11:20:53 2020 -0800

    Disable flaky test.
    
    PiperOrigin-RevId: 298895822
    Change-Id: I8643b3068c9f463883e4f978585f0ad5e17c28f8

commit bc28c80cd071f37b8e25eaf7c79b67c399fa8162
Author: Katherine Wu <kathywu@google.com>
Date:   Thu Feb 27 11:51:32 2020 -0800

    Disable flaky test.
    
    PiperOrigin-RevId: 297651926
    Change-Id: Ib614d2ac9424fd7f8cf6515a8f106231021924ec

commit dba16b1aaac7246976b53b9f16451b1b2dee9501
Author: Scott Zhu <scottzhu@google.com>
Date:   Wed Feb 26 11:22:08 2020 -0800

    Disable flaky test.
    
    PiperOrigin-RevId: 297405706
    Change-Id: Ie5818fd1facf75c6662ae7b06585a7b29a1b1ebc

commit 049867522eaaf844f366d09cfe7e73d4ce6b0460
Author: George Karpenkov <cheshire@google.com>
Date:   Fri Feb 21 10:38:57 2020 -0800

    Disable a flaky test
    
    PiperOrigin-RevId: 296464897
    Change-Id: Ic15088d64e5219839b9929c7aa78119f25f986b0

commit c51929f2d80bacc9c125f3745bf9a0748e41a42e
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Fri Feb 14 15:10:51 2020 -0800

    Disable flaky test.
    
    PiperOrigin-RevId: 295236880
    Change-Id: I04475f22af48921f1e8d9f5e8d7a6d3ae910b7dc

commit b2a1f1889528eeb6be805fff83d4340bee78c3eb
Author: George Karpenkov <cheshire@google.com>
Date:   Fri Feb 14 10:29:55 2020 -0800

    Disable a test which is flaky with XLA auto-clustering
    
    PiperOrigin-RevId: 295174669
    Change-Id: I396a351db2a8baa4b519afa43eca98900c0cf565

commit 21a7c41fd1e00f4e630831749c30093d378f1c95
Author: Ian Langmore <langmore@google.com>
Date:   Tue Feb 11 18:53:06 2020 -0800

    linear_operator_toeplitz_test:  Reduce flakes by increasing tolerance.  Test
    has recently been flaky.
    PiperOrigin-RevId: 294571109
    Change-Id: Id9be7b954d97a7a040909f080859793d48e19bba

commit edcebf35c9003c5f0cbe7101320c403de8fa489e
Author: Ran Chen <crccw@google.com>
Date:   Fri Feb 7 10:57:58 2020 -0800

    Enable optimizer_v2_test except for flaky and broken ones
    
    Let the good tests running.
    
    PiperOrigin-RevId: 293849209
    Change-Id: I59091ec7fc47f09d536629b4dae830c4ca7186ea

commit 4fc8e2cd8a9ff28aba131295cbc8853466e4e079
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Mon Feb 3 12:11:17 2020 -0800

    Disable flaky keras/distribute:multi_worker_callback_test
    
    PiperOrigin-RevId: 292974875
    Change-Id: I4067f019c8ba63090a971fd7d32840d883ab34f6

commit c1b04f14ba8f84d36d08d2468efe498041c40778
Author: Adrian Kuegel <akuegel@google.com>
Date:   Thu Jan 30 01:26:00 2020 -0800

    Disable flaky test.
    
    PiperOrigin-RevId: 292300471
    Change-Id: Ifc349d16ad6db42645cd4bbca8bbae4b45a5dee6

commit a34091e538540aad57a7a941575538944f38db24
Author: Anna R <annarev@google.com>
Date:   Wed Jan 29 15:49:45 2020 -0800

    Disable //tensorflow/python/debug:check_numerics_callback_test since it is flaky.
    
    PiperOrigin-RevId: 292235166
    Change-Id: Iaa6ec79f4699cd43e424b6c97f441f243a761a6a

commit 8db452ea5db4672859d5a4c7723a44a572f33f78
Author: Anna R <annarev@google.com>
Date:   Tue Jan 28 16:00:12 2020 -0800

    Disable
    compiler/mlir/tensorflow/tests/mlir2graphdef:preserve-entry-func-names.mlir.test
    on mac since it is flaky.
    
    PiperOrigin-RevId: 292032687
    Change-Id: I2ddd178aecec5ec9447394c8fb876fba07b2d285

commit b527487d19c1f07a65ca038a302d81630da71769
Author: Andrew Audibert <aaudibert@google.com>
Date:   Fri Jan 17 13:46:01 2020 -0800

    Skip flaky thread_utilization stats test
    
    PiperOrigin-RevId: 290334009
    Change-Id: Ie8a7e1b24606288dc274ef34081d3b8731da6990

commit 777628a212e77782f06aab2766834527cb2ee5c2
Author: Reed Wanderman-Milne <reedwm@google.com>
Date:   Mon Dec 23 16:47:23 2019 -0800

    Fix flaky conv_ops_test.
    
    The test uses assertAllEqual instead of assertAllClose for testing integer convolutions. However, the "expected" value for the convolution was still a float and sometimes had a small numeric error, despite the actual result being an integer tensor. Now, the "expected" value is rounded to the nearest integer.
    
    Also increase tolerance of a test since it was flaky.
    
    PiperOrigin-RevId: 286959150
    Change-Id: I39327adde377c886c3b5ecade078abbc40167ed4

commit 9b8cbbc233c35e7c2f4653412c505bf44db61a01
Author: Ayush Dubey <ayushd@google.com>
Date:   Tue Dec 17 11:41:31 2019 -0800

    Remove `device_set` check from collective param resolution.
    
    This change fixes a subtle bug in `CompleteGroupLocal`, described below.  After
    this change, `collective_ops_gpu_test_gpu` is no longer flaky.
    
    During group resolution, the first device to be resolved creates a `GroupRec`
    in `group_table_`, and initializes this `GroupRec` with the group's key, size,
    and device type.  Subsequent devices access this group rec and check that the
    group attributes match.
    
    Because of the way mutexes are locked, before this change it was possible to
    skip the device type check as illustrated in the following example.  Imagine a
    group with 2 devices, CPU:0 and GPU:0.  CPU:0 creates the `gr` and initializes
    its type to CPU.  It releases `group_mu_` but before it can lock `gr->mu` GPU:0
    locks it first.  GPU:0 then skips the device type check because `device_set` is
    empty.  This is incorrect, and the desired behavior is to return an internal
    error for a collective group with different device types.
    
    This change removes the `device_set` is empty check because it is not needed.
    
    PiperOrigin-RevId: 286024716
    Change-Id: Ib54defe5326426ab5cd1b692067b2b207f7a1d7e

commit 1f3fa0d852e1cf662721e508857e2e9fabf5bcae
Author: Reed Wanderman-Milne <reedwm@google.com>
Date:   Wed Dec 4 14:56:20 2019 -0800

    Fix flaky normalization test.
    
    Before test_batchnorm_mixed_precision would fail ~0.3% of the time.
    
    PiperOrigin-RevId: 283842177
    Change-Id: I918576a96be7533a5e0fb8ab96015b8ff0de7ab6

commit 9411012315fe0c610da83025225df9f7056b3496
Merge: 89487ef b22b9c9
Author: Goldie Gadde <ggadde@google.com>
Date:   Mon Nov 11 20:57:22 2019 -0800

    Merge pull request #34175 from geetachavan1/cherrypicks_ZLL35
    
    [r2.1:Cherrypick] Fix flaky doctest.

commit b22b9c9e0c52aece222282c50ca412701e4b826f
Author: Andrew Audibert <aaudibert@google.com>
Date:   Fri Nov 8 11:47:40 2019 -0800

    Fix flaky doctest.
    
    The doctest was using dictionary output to exhibit structured
    element usage. This caused a problem since dictionary key order
    is undefined. This changes the example to use a tuple instead.
    
    PiperOrigin-RevId: 279359482
    Change-Id: Ideb9970935079b156f88f48672dea2d375d497ae

commit 005d3470f869311fe0223159430a76a293b5e4fd
Author: Andrew Audibert <aaudibert@google.com>
Date:   Fri Nov 8 11:47:40 2019 -0800

    Fix flaky doctest.
    
    The doctest was using dictionary output to exhibit structured
    element usage. This caused a problem since dictionary key order
    is undefined. This changes the example to use a tuple instead.
    
    PiperOrigin-RevId: 279359482
    Change-Id: Ideb9970935079b156f88f48672dea2d375d497ae

commit abf3efdec0bb593240b932f423a2dc66ee950e30
Author: Berkin Ilbeyi <berkin@google.com>
Date:   Thu Oct 31 12:07:08 2019 -0700

    [XLA:GPU] Disable flaky test.
    
    PiperOrigin-RevId: 277773524
    Change-Id: If19a6a782be271bb640424fe5290478e789ce03e

commit 1bfaa1c4283ce64d384660ee5bc14fc9274b2d3d
Author: Zhuo Peng <zhuo@google.com>
Date:   Tue Oct 29 12:07:23 2019 -0700

    Fixed flaky StructuredTensor tests.
    
    PiperOrigin-RevId: 277335659
    Change-Id: If7e589c1056e96e9e65a67fd71345fce01aa76a8

commit 1c2fa3dd267d38cb37e795c7c887452ccd79a940
Author: Rick Chao <rchao@google.com>
Date:   Tue Oct 22 11:35:26 2019 -0700

    Disable //third_party/tensorflow/python/debug:dumping_callback_test on TAP as it's flaky.
    
    PiperOrigin-RevId: 276108889
    Change-Id: I8c2f5e8ea9da393e2608c9441434c53db801c373

commit cc94ef005df7498939c2ed0a9a6ca9a6c1ed6a22
Author: Shanqing Cai <cais@google.com>
Date:   Fri Oct 18 09:01:32 2019 -0700

    [tfdbg] Add FULL_TENSOR dumping mode.
    
    Also in this CL:
    - Reduce the size of the non-trivial convnet (MobileNetV2) used
      in the unit test to prevent test timeouts. This is achieved through
      reducing the input_shape of the model from (224, 224, 3) to
      (32, 32, 3) and by truncating the model at layers[22].
      This fixes the flaky timeout in dumping_callback_test.
    - Make repeated calls to `enable_dumping()` with different values
      of circular_buffer_size throw an error, instead of simply printing
      a warning.
    - Register the gradient function for DebugIdentityV2 in dumping_callback.py.
    
    PiperOrigin-RevId: 275482635
    Change-Id: Ia7a30d91e5d71b283dec557c7e18bcfdec4a311f

commit fd0ba22c25322a709f9a691b18ceffd114857197
Author: Reed Wanderman-Milne <reedwm@google.com>
Date:   Thu Oct 17 11:11:23 2019 -0700

    Fix flaky auto_mixed_precision_test.cc.
    
    AutoMixedPrecisionTest.SoftmaxOp would fail ~1% of the time, and AutoMixedPrecisionTest.LogSoftmaxOp would fail ~0.1% of the time.
    
    PiperOrigin-RevId: 275297545
    Change-Id: I02e9a6b4cb88077e2a8fd601a27e71d5bde3bfed

commit 2ae940249f0e5eda7cb4ec33437ba77831e642e6
Author: Ayush Dubey <ayushd@google.com>
Date:   Tue Oct 15 10:53:01 2019 -0700

    Disable flaky `c_api_test_gpu`.
    
    PiperOrigin-RevId: 274840717
    Change-Id: I27208fc4fc0adbc0ea25ce5e6a11a2ad2c6a6ea8

commit f1760a62ace1002b975715bdb645948d3d9d548c
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Wed Oct 2 10:03:56 2019 -0700

    Increase relative tolerance and maximum error to fix flaky tests.
    
    PiperOrigin-RevId: 272461894

commit beeea26e6688b3a64e2cd9d6f233000dab52de5e
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Tue Oct 1 13:37:17 2019 -0700

    Disable flaky optimizer_v2_test
    
    PiperOrigin-RevId: 272283258

commit 8025f6fd6b07ddff3119c2ec5bc808fdce36fba1
Author: Benoit Jacob <benoitjacob@google.com>
Date:   Fri Sep 27 13:04:50 2019 -0700

    Rewrite RUY_CHECK family of macros:
     - Drop unwanted dependency on TFLite macros (prereq ahead of future move out of tflite).
     - There doesn't seem to be a compelling flavor of Google logging macros that we could use here, without adding a large dependency and/or a large increase to binary size. We only need the most basic assertion functionality, this implementation achieves minimal binary size impact by using only snprintf, fprintf and abort.
     - Still have decent logging of compared values, and support for C++11 enum classes for now by logging numerical values (will be possible to improve when C++20 reflection becomes available).
    
    Also bump the threshold for the found_distinct_values check which was being flaky (could give false negatives based on pseudorandom values).
    
    PiperOrigin-RevId: 271631262

commit 733c349b63784ec5dd223262088033bb25ee9f96
Author: Smit Hinsu <hinsu@google.com>
Date:   Thu Sep 26 10:50:31 2019 -0700

    Disable flaky test tensorflow/python/debug:analyzer_cli_test on OSS macos
    
    PiperOrigin-RevId: 271384034

commit 25620bfc21c01994fba5ec10693b64ff5aa5d398
Author: Shanqing Cai <cais@google.com>
Date:   Thu Sep 26 07:54:39 2019 -0700

    [tfdbg] Fix some failing and flaky tests
    
    - Disable XLA auto-JIT for a test in check_numerics_callback_test
      There was a small inconsistency regarding how many step
      it takes for the float value to overflow to inf (127 vs. 128)
    - Increase test size of examples_v2_test from small to medium.
    
    PiperOrigin-RevId: 271349251

commit 4ad44aa18155a1b62cafa8b3807a1cce854728bc
Author: Brian Zhao <bmzhao@google.com>
Date:   Wed Sep 18 12:55:31 2019 -0700

    Disabling flaky test until fix is landed.
    
    PiperOrigin-RevId: 269870395

commit 3067e0b8a1f9fc9bbc02e8059ca057d5d26575c0
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Mon Sep 16 10:32:14 2019 -0700

    Disable flaky multi_worker_optimizer_comparison_test everywhere.
    
    PiperOrigin-RevId: 269366388

commit 2417ede33d43b45f00807e194b3d8b8c259c43d4
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Mon Sep 9 14:45:04 2019 -0700

    Disable flaky memory_test everywhere.
    
    PiperOrigin-RevId: 268081532

commit abaf7ecd910abc80f3330af5f297409943e36eff
Author: Mehdi Amini <aminim@google.com>
Date:   Mon Sep 9 12:37:18 2019 -0700

    Exclude python/eager/memory_tests:memory_tests_gpu from continuous integration: it is flaky at the moment
    
    PiperOrigin-RevId: 268053311

commit a8e04d04d293be9bef20df0fa5e06fb41de3f744
Author: Xiao Yu <fishx@google.com>
Date:   Fri Sep 6 13:06:19 2019 -0700

    Fix flaky test: third_party/tensorflow/c/eager:c_api_test
    
    1. Race condition in Execute_MatMul_CPU_Runtime_Error. The executor probably hasn't been poisoned when scheduling the next matmul2.
    2. Deadlock: avoid holding remote_state_mu_ when cleaning up EagerClientCache.
    3. Possible use after delete in streaming enqueue handler and remote_copy_node.
    
    PiperOrigin-RevId: 267656988

commit a42c0ed8d2ddb6ea60553989cfece9a263735f82
Author: Yifei Feng <yifeif@google.com>
Date:   Thu Sep 5 14:26:27 2019 -0700

    Disable flaky test //third_party/tensorflow/python/eager/memory_tests:remote_memory_test_xla_gpu
    
    PiperOrigin-RevId: 267453483

commit 8ba40bd9d4f4dd885b564fcbd09bf8208d976d66
Author: Yifei Feng <yifeif@google.com>
Date:   Wed Sep 4 07:47:03 2019 -0700

    Disable flaky target under tensorflow/python/compiler/tensorrt:
    
    PiperOrigin-RevId: 267151171

commit 484def6ea0fc2798b7c6ef8f62182ef873049025
Author: Yifei Feng <yifeif@google.com>
Date:   Thu Aug 29 11:28:35 2019 -0700

    Disable flaky test tensorflow/python/keras/optimizer_v2:optimizer_v2_test.
    
    PiperOrigin-RevId: 266186843

commit 3562d6de4e6872272ed66e2f6833d6d0b0656819
Author: Yifei Feng <yifeif@google.com>
Date:   Thu Aug 29 11:25:20 2019 -0700

    Disable flaky (timing out) target tensorflow/compiler/tests:random_ops_test_cpu on tsan.
    
    PiperOrigin-RevId: 266186086

commit aba46a95e04368bc402c93ed52ecfc4896730315
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Fri Aug 23 13:17:42 2019 -0700

    Disable flaky training_generator_test
    
    PiperOrigin-RevId: 265120363

commit 305ecc6ed541227484405ea5a5a87f8316d97fb4
Merge: b12998c 12af54e
Author: Goldie Gadde <ggadde@google.com>
Date:   Wed Aug 21 22:11:41 2019 -0700

    Merge pull request #31878 from tensorflow/ggadde-cp14
    
    Revert skipping EIGEN_FORCE_INLINE change & potential fix for windows flaky build

commit 3d303343daa9be2ddbd8aa64303be17ce854da8e
Author: Smit Hinsu <hinsu@google.com>
Date:   Thu Aug 15 17:00:26 2019 -0700

    Disable flaky test distribute:ctl_correctness_test_xla_gpu
    
    PiperOrigin-RevId: 263672538

commit 0a27dbf2a69fbe5db95ee2875242d281b1aef582
Author: Philip Pham <phillypham@google.com>
Date:   Mon Aug 12 17:40:39 2019 -0700

    Re-enable flaky TPU tests
    
    Made one test deterministic by setting the random seed. Increased the shard
    count to deal with timeouts.
    
    PiperOrigin-RevId: 263041722

commit 0ac337163b767eeb1f5c1affc27975771fbe85a5
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Tue Aug 6 17:23:15 2019 -0700

    Use incompatible_windows_native_test_wrapper instead of experimental_windows_native_test_wrapper
    
    Based on comment in 259986109.
    
    With experimental_windows_native_test_wrapper, we get all windows jobs
    failing with
    
    ```
    + Tue, Aug  6, 2019 10:21:51 PM + bazel test --announce_rc --config=opt -k --test_output=errors --experimental_windows_native_test_wrapper --define=no_tensorflow_py_deps=true --test_lang_filters=py --test_tag_filters=-no_pip,-no_windows,-no_oss,-gpu --build_tag_filters=-no_pip,-no_windows,-no_oss,-gpu --build_tests_only --test_size_filters=small,medium --jobs=32 --test_timeout=300,450,1200,3600 --flaky_test_attempts=3 //py_test_dir/tensorflow/python/...
    ERROR: Unrecognized option: --experimental_windows_native_test_wrapper
    ```

commit 4efee1aec7f28b5028ca564eb4d855055114f10f
Author: Scott Zhu <scottzhu@google.com>
Date:   Fri Aug 2 10:12:46 2019 -0700

    Increase rtol and atol for flaky test.
    
    PiperOrigin-RevId: 261342723

commit 77bd717414abd9d3566bc0057d37503b71f3abfa
Author: Ayush Dubey <ayushd@google.com>
Date:   Thu Aug 1 17:17:22 2019 -0700

    Temporarily disable flaky test.
    
    PiperOrigin-RevId: 261230283

commit 217fb66a0bd72e7a42324a4cc6af3ab5fb11b55a
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Tue Jul 30 22:03:16 2019 -0700

    Disable flaky multi_device_iterator_test in open source builds.
    
    PiperOrigin-RevId: 260860511

commit 8d9769d4438c4577c715ef862af6f5de0b0c3a53
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Tue Jul 30 22:01:28 2019 -0700

    Disable flaky meta_optimizer_test on GPU builds
    
    PiperOrigin-RevId: 260860066

commit 9b75b2ce17a38f5508364dabc63d793ec4a1e7fb
Author: Sanjoy Das <sanjoy@google.com>
Date:   Mon Jul 29 09:27:08 2019 -0700

    Re-enable tensordot_op_test for XLA GPU
    
    The test is no longer flaky.
    
    PiperOrigin-RevId: 260515536

commit f8c2d15c52181eade6c1daa1e8e7960b38264e6a
Author: Igor Saprykin <isaprykin@google.com>
Date:   Fri Jul 26 15:54:54 2019 -0700

    keras_dnn_correctness_test_gpu doesn't seem flaky.
    
    $ bazel test --config=cuda --runs_per_test=167 //third_party/tensorflow/python/keras/distribute:keras_dnn_correctness_test_gpu
    //third_party/tensorflow/python/keras/distribute:keras_dnn_correctness_test_gpu PASSED in 840.3s
      Stats over 3173 runs: max = 840.3s, min = 64.5s, avg = 636.3s, dev = 139.8s
    
    Executed 1 out of 1 test: 1 test passes.
    
    PiperOrigin-RevId: 260229842

commit d0181e13c89cd5429a59bd90e436c513c024db0f
Author: Priya Gupta <priyag@google.com>
Date:   Fri Jul 26 11:27:34 2019 -0700

    Disable some Keras + TPUStrategy tests because they are flaky.
    
    PiperOrigin-RevId: 260180753

commit e81526aea0b85b9fb75efed25768f660d72ebd46
Author: Yuefeng Zhou <yuefengz@google.com>
Date:   Wed Jul 17 11:49:20 2019 -0700

    Remove no_windows tab for fixed flaky tests.
    
    PiperOrigin-RevId: 258612058

commit b9d106e7ccd9003f39192a77c326fb4ac3e973dd
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Fri Jul 12 15:44:50 2019 -0700

    Disable GWP-asan for flaky test. The root-cause is third-party library that we used for tracing, This should be fixed in CUDA 10.1.
    
    PiperOrigin-RevId: 257882918

commit c8b448518ffa90cd0866f422f0ad0706a7db8804
Merge: 91f7a7d 034c8d5
Author: Yifei Feng <1192265+yifeif@users.noreply.github.com>
Date:   Wed Jul 10 15:13:46 2019 -0700

    Merge pull request #30573 from tensorflow/r1.13-disable-flaky-tests
    
    Disable a bunch of tests to unblock patch release

commit 16fe7ea5db40d09be4d013910ca60668d0234525
Author: Akshay Modi <nareshmodi@google.com>
Date:   Mon Jul 8 22:45:32 2019 -0700

    Also disable flaky test in OSS tests
    
    PiperOrigin-RevId: 257125134

commit 5add9adce2b2740241f88ee33c698a2acde0c927
Author: Akshay Modi <nareshmodi@google.com>
Date:   Mon Jul 8 14:33:06 2019 -0700

    Disable flaky test on cuda_on_cpu tap as well
    
    PiperOrigin-RevId: 257057057

commit e6dda7def8c2a88a7d1fee9fb4f439bf86841e41
Author: Scott Zhu <scottzhu@google.com>
Date:   Mon Jul 8 12:59:28 2019 -0700

    Reenable LSTM test which were disabled because of flaky.
    
    PiperOrigin-RevId: 257038325

commit 7c5b1779f8ecb79c7da8049094fb3f40b0b064f1
Author: Akshay Modi <nareshmodi@google.com>
Date:   Wed Jul 3 14:34:31 2019 -0700

    Actually disable the flaky test
    
    PiperOrigin-RevId: 256439799

commit ceebd4f373e50704e3aa2527a7dcf47d6e83f4cd
Author: Akshay Modi <nareshmodi@google.com>
Date:   Wed Jul 3 10:20:01 2019 -0700

    Disable testing of flaky keras_lstm_model_correctness_test in OSS
    
    PiperOrigin-RevId: 256392101

commit 0d6c6332066bcab36f696baee488c3047533ad5f
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Tue Jul 2 11:35:47 2019 -0700

    Completely disable flaky tensorflow/compiler/tests:random_ops_test_cpu
    
    PiperOrigin-RevId: 256206425

commit 7eb39699ad942e7d198c7b7fce904a10ac0946a4
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Tue Jul 2 10:53:44 2019 -0700

    Disable flaky test tensorflow/compiler/tests:random_ops_test_cpu for asan
    
    PiperOrigin-RevId: 256197322

commit 291377fca108dd6f8fde26b29c28092759d83967
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Tue Jul 2 10:29:30 2019 -0700

    Disable flaky test tensorflow/python/saved_model/load_test_xla_gpu.
    
    Bazel test times out so just disable it on GPU, requiring it to run on other configs.
    
    PiperOrigin-RevId: 256191705

commit 6163599cbe573eb9d417dee608d1e7965c713add
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Mon Jul 1 14:32:55 2019 -0700

    Disable flaky kernel_tests:transpose_op_test
    
    PiperOrigin-RevId: 256034420

commit f53e0d350223dc7ef75382bf92dc7f627862e62f
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Fri Jun 28 10:44:47 2019 -0700

    As c/eager:c_api_test_gpu became flaky, disable it and wait for quick fix
    
    PiperOrigin-RevId: 255628319

commit 712968e97d2403a3d2541926916ae7d5327dbed2
Author: Scott Zhu <scottzhu@google.com>
Date:   Wed Jun 26 15:03:42 2019 -0700

    Add atol in the layer_test to reduce the flakiness.
    
    Currently the atol for np is 0, and it will raise error if "target - got >= rtol * got + atol". If both target and got is very small number, than the fault tolerance is very small based on rtol. Add a small atol should mitigate most of the flaky test here.
    
    PiperOrigin-RevId: 255272364

commit 4e40e863abc64d7d80c448c392a8871eb5de6630
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Tue Jun 25 21:57:18 2019 -0700

    Disable flaky gru_v2_test
    
    PiperOrigin-RevId: 255115077

commit 34759e697f2cb2d3fb579c554fb0293d2ab5d389
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Tue Jun 25 21:55:50 2019 -0700

    Disable flaky multi_worker_callback_test everywhere.
    
    PiperOrigin-RevId: 255114955

commit b74c2ac658492c000afb1ebf7db621e2e570b716
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Tue Jun 25 21:55:21 2019 -0700

    Disable the flaky test case in image_ops_test
    
    PiperOrigin-RevId: 255114909

commit d774de85d0c32c88a4c914ba2b196168099822af
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Tue Jun 25 21:55:10 2019 -0700

    Disable flaky conv2d tensorrt test.
    
    PiperOrigin-RevId: 255114888

commit 064e9d76d46816f7f91aa03a7212fd469c2bfe4c
Author: Gaurav Jain <gjn@google.com>
Date:   Tue Jun 25 19:00:24 2019 -0700

    Disable testMemoryLeakInSimpleModelForwardOnly
    
    Seems to be flaky with memory sometimes hitting up to 19 MB.
    
    PiperOrigin-RevId: 255096991

commit 54bbc6297fc450cb648e00aaa0597e54725f28b0
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Tue Jun 25 16:32:25 2019 -0700

    Disable flaky unary_op_test
    
    PiperOrigin-RevId: 255074241

commit eb1833ccd573bd6e24d02ad09ef37d160c24a30a
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Tue Jun 25 16:25:43 2019 -0700

    Disable flaky model_analyzer_test
    
    PiperOrigin-RevId: 255073006

commit 6ef355326b65d251302921b6d7ed7e79632f4a3e
Author: Amit Patankar <amitpatankar@google.com>
Date:   Tue Jun 25 15:40:18 2019 -0700

    Disable the linear_operator_toeplitz_test on GPUs as it is flaky.
    
    PiperOrigin-RevId: 255063022

commit 304dcbf5cbf02bef78f4ee8685431a083f67c3ea
Author: Ayush Dubey <ayushd@google.com>
Date:   Tue Jun 25 08:42:14 2019 -0700

    Disable flaky tensorflow/tools/docs:generate2_test.
    
    PiperOrigin-RevId: 254976613

commit aa996dd99baef2322241caefd213f9ffefeb24b3
Author: Ayush Dubey <ayushd@google.com>
Date:   Mon Jun 24 10:59:03 2019 -0700

    Disable flaky //third_party/tensorflow/python:cluster_test_gpu.
    
    PiperOrigin-RevId: 254792351

commit 155207e65fd0eec6a28f522870a6d58f41204cd1
Author: Jonathan Hseu <jhseu@google.com>
Date:   Thu Jun 20 18:03:57 2019 -0700

    Disable flaky test.
    
    PiperOrigin-RevId: 254310218

commit a6825e00a2a55f403d3e57cf71ac269d682acf30
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Mon Jun 17 12:29:19 2019 -0700

    Disable flaky multi_worker_fault_tolerance_test
    
    PiperOrigin-RevId: 253636394

commit 0a72f0a31cf3afe2bcf4d5e76101b799f6ae2965
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Sat Jun 15 08:35:59 2019 -0700

    Delete test that depends on the relative timing of two things,
    which appears to make it sensitive to the load on the machine
    it is running on, and therefore quite flaky.
    
    PiperOrigin-RevId: 253384917

commit 5d863fba901d8a081bfdbe9fe00379a5b913b067
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Wed Jun 12 15:40:39 2019 -0700

    Disable flaky keras_multi_worker_correctness_test
    
    PiperOrigin-RevId: 252915158

commit 67d2bb80aea3f8e793df4e06cd0b61df53b13aa6
Author: Scott Zhu <scottzhu@google.com>
Date:   Wed Jun 12 10:08:19 2019 -0700

    Disable flaky tests in OSS.
    
    PiperOrigin-RevId: 252846797

commit 300d9c7181a7a256c733564ec3aeb33a8b76b2bc
Author: Eugene Zhulenev <ezhulenev@google.com>
Date:   Fri May 24 10:14:49 2019 -0700

    Fix flaky eigen_mkldnn_contraction_kernel test
    
    PiperOrigin-RevId: 249853404

commit ba197746641559719349dcc269e24ca4a235cc53
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Fri May 24 00:34:26 2019 -0700

    [TF:XLA] Enable more TF python tests for XLA:GPU
    
    Additionally increase tolerances in the flaky multi_worker_callback_test.py assertions.
    Fix typo in matmul assertions.
    
    PiperOrigin-RevId: 249787704

commit 6fcf520ae0935d96250e26ccbe89ca4bf20d6174
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Thu May 23 03:43:14 2019 -0700

    Disable flaky backend_test
    
    PiperOrigin-RevId: 249614942

commit 0872da7ce94ec6acc24d3629755088241592ef09
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Wed May 22 10:27:04 2019 -0700

    Disable flaky tf distribute tests on windows
    
    PiperOrigin-RevId: 249473559

commit 45d1a978418b1afcad5cf8d8f03a5bc35b355d68
Author: Xiao Yu <fishx@google.com>
Date:   Wed May 15 13:20:01 2019 -0700

    Fix a flaky test
    
    PiperOrigin-RevId: 248391995

commit 59f2c9aa19990fd8c0ad55cf67251b978bee017f
Author: Smit Hinsu <hinsu@google.com>
Date:   Tue May 7 19:25:21 2019 -0700

    Temporarily disable flaky test control_flow_ops_py_test with tsan
    
    PiperOrigin-RevId: 247136325

commit 9f8c43846d6fb989a4bae0f437773fff4b02a59e
Author: Smit Hinsu <hinsu@google.com>
Date:   Tue May 7 14:34:51 2019 -0700

    Temporarily disable flaky test keras:training_generator_test under asan
    
    PiperOrigin-RevId: 247092039

commit de3e26b431eb710340eef12d635c3a4c85150845
Author: Ayush Dubey <ayushd@google.com>
Date:   Tue May 7 13:30:37 2019 -0700

    Disable flaky //tensorflow/python/kernel_tests:map_stage_op_test_gpu.
    
    PiperOrigin-RevId: 247079868

commit 4caf8b10bb87ff3cef3ab039e63c18b8c058ed03
Author: Smit Hinsu <hinsu@google.com>
Date:   Tue May 7 09:15:43 2019 -0700

    Temporarily disable flaky test grappler/clusters:single_machine_test on msan
    
    PiperOrigin-RevId: 247031736

commit bf7bfabc2d3706cf7a023f62f3523b2e780d3fa3
Author: Smit Hinsu <hinsu@google.com>
Date:   Mon May 6 07:21:39 2019 -0700

    Temporarily disable flaky test keras_lstm_model_correctness_test_tpu
    
    PiperOrigin-RevId: 246821640

commit 2491bad46f9b5ea79f6d29721f2f8ab18f1413cc
Author: Akshay Modi <nareshmodi@google.com>
Date:   Fri May 3 12:32:19 2019 -0700

    Disable flaky test in eager c api
    
    PiperOrigin-RevId: 246554540

commit cc3490f51c1070a0fe8bc7179d7d862978d74424
Author: Smit Hinsu <hinsu@google.com>
Date:   Wed May 1 22:15:03 2019 -0700

    Disable flaky test linear_operator_toeplitz_test
    
    PiperOrigin-RevId: 246257553

commit 636a905fccd8108e931918cba32d01ac29c75c0d
Author: Jiri Simsa <jsimsa@google.com>
Date:   Mon Apr 29 10:55:42 2019 -0700

    [tf.data] Disable flaky test.
    
    PiperOrigin-RevId: 245779478

commit cb0c9a61bf079f33e06041129c347de99af82ba8
Author: Reed Wanderman-Milne <reedwm@google.com>
Date:   Thu Apr 25 15:50:44 2019 -0700

    Fix flaky mixed_precision/experimental:keras_test.
    
    PiperOrigin-RevId: 245322306

commit 5947e1dda4906f94282d4062c5599f2788705dad
Author: River Riddle <riverriddle@google.com>
Date:   Tue Apr 23 17:02:06 2019 -0700

        Fix flaky Linalg roundtrip test. This removes an invalid "%s" from the second mlir-opt command.
    
    --
    
    PiperOrigin-RevId: 244953230

commit 034c17c8629a871e3ef04e890b51ac9cd9686389
Author: Fei Hu <hufei68@gmail.com>
Date:   Fri Apr 12 16:45:37 2019 -0700

    Fix the flaky issue in ParallelInterleaveDatasetOpTest

commit 9a5375c5ba4fb222074ea1c873cf6aa1f3b93bd9
Author: Rick Chao <rchao@google.com>
Date:   Fri Apr 12 10:46:39 2019 -0700

    Add 'notap' tag to //third_party/tensorflow/contrib/distributions:moving_stats_test as it's been flaky recently.
    
    PiperOrigin-RevId: 243291575

commit ee93974fa43d55995202d7c0695971f57874de1f
Merge: b1c6c64 cf28f2f
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Thu Apr 11 09:19:48 2019 -0700

    Merge pull request #27755 from tensorflow/more_flaky_tests_disabled
    
    Disable one more flaky test

commit cf28f2f8ac5ab0f0052ce456885cb9fe2bd890d4
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Thu Apr 11 08:32:21 2019 -0700

    Disable one more flaky test

commit 32ff91cf4284861994b6bba2cfb8deeb2f840b7c
Author: Jiri Simsa <jsimsa@google.com>
Date:   Thu Apr 11 07:25:56 2019 -0700

    [tf.data] Disabling a flaky unit test.
    
    PiperOrigin-RevId: 243064483

commit fe58efbc2eaa4b9e3f7fbc1909457da8462380dc
Author: Akshay Modi <nareshmodi@google.com>
Date:   Tue Apr 9 13:39:50 2019 -0700

    Check if the keep alive thread can shutdown before sleeping.
    
    Without this, we can have long timeouts till the keep alive thread wakes up again (which can makes test flaky).
    
    PiperOrigin-RevId: 242730656

commit 7115a6f2fd69ae9c0154e55d5e57e00e6d025346
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed Apr 3 18:16:44 2019 -0700

    Disable input forwarding in tridiagonal op and fix a flaky test.
    
    PiperOrigin-RevId: 241845781

commit fad7651026efb5dcbfe42a6b0c146118432cf340
Author: Jared Duke <jdduke@google.com>
Date:   Mon Apr 1 09:10:20 2019 -0700

    Disable flaky NNAPI NNAPIDelegate.SqueezeSimpleTest
    
    PiperOrigin-RevId: 241336295

commit e94bc1459c6cde27c7cdb84ee09a28afca3eb71e
Author: Nicolas Vasilache <ntv@google.com>
Date:   Mon Jan 7 07:15:13 2019 -0800

    Iterate on vector rather than DenseMap during AffineMap normalization
    
    This CL removes a flakyness associated to a spurious iteration on DenseMap
    iterators when normalizing AffineMap.
    
    PiperOrigin-RevId: 228160074

commit ad2e814522c054e2a50a56ebc0a3a2c3a6145a07
Author: Taylor Robie <taylorrobie@google.com>
Date:   Tue Mar 19 08:08:21 2019 -0700

    Fix flaky test.
    
    PiperOrigin-RevId: 239191111

commit e7f508844eab13927f32abdb5d7f0eb4e91caee0
Author: Scott Zhu <scottzhu@google.com>
Date:   Tue Mar 12 16:43:25 2019 -0700

    Disable the flaky test while troubleshooting.
    
    PiperOrigin-RevId: 238125075

commit 6da2d24cd5e658bd52efa0a392f83a99f4520465
Author: Smit Hinsu <hinsu@google.com>
Date:   Fri Mar 8 16:31:50 2019 -0800

    Disable flaky test keras:convolutional_test_xla_gpu temporarily
    
    PiperOrigin-RevId: 237541815

commit 0bece764eafa661f977deabb2d1dddc0b9887421
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Mon Mar 4 16:22:48 2019 -0800

    Disable some v2 py36 pip flaky tests
    
    PiperOrigin-RevId: 236747310

commit b778c033234946e9d46bfaad1ece7eba3727be93
Author: Mihai Maruseac <mihaimaruseac@google.com>
Date:   Mon Mar 4 16:22:48 2019 -0800

    Disable some v2 py36 pip flaky tests
    
    PiperOrigin-RevId: 236747310

commit 254950d2dbdea91804255411334d3466685b1b03
Author: Pavithra Vijay <psv@google.com>
Date:   Fri Mar 1 10:57:49 2019 -0800

    Fix flaky callbacks test.
    
    PiperOrigin-RevId: 236341105

commit 571e140e13577624c71f16ba7101680f8fbe70dd
Author: Zhenyu Tan <tanzheny@google.com>
Date:   Tue Feb 26 21:21:55 2019 -0800

    fix flaky test for callbacks.
    
    PiperOrigin-RevId: 235850218

commit 461b64c6e694cbcc2ee666247d74f28ac4d9c5c5
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Tue Feb 26 15:10:30 2019 -0800

    Disable flaky memory_cleanup_test in tsan mode.
    
    PiperOrigin-RevId: 235802336

commit 6338cc61ab62f3eba7f2465cc2dc100a39c55035
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Tue Feb 26 11:58:18 2019 -0800

    Disable flaky asan tests.
    
    PiperOrigin-RevId: 235764998

commit 9611d2b3c90c12c7a520c85d278160f6bb532a13
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Fri Feb 22 15:07:15 2019 -0800

    Disable flaky tensorflow/python/saved_model:load_test on MacOS.
    
    PiperOrigin-RevId: 235266596

commit 4a1d3bad15a9fb5280e5d9cf11ae23491a5bb7e5
Author: Priya Gupta <priyag@google.com>
Date:   Fri Feb 15 17:44:38 2019 -0800

    Disable flaky dist strat input tests with callable input.
    
    PiperOrigin-RevId: 234245019

commit 21a83324df6f33ccb9c276d4a28f83902d990899
Author: Jeff Poznanovic <jeffrey.poznanovic@amd.com>
Date:   Wed Feb 13 18:04:49 2019 -0700

    Add no_rocm tag to self_adjoint_eig_op_test_gpu
    
    The kernel_tests:self_adjoint_eig_op_test_gpu unit test fails occasionally on ROCm.  Disabling / tagging as "no_rocm" (and flaky).

commit 71e62242b58e03bcc566bce6f46374dec0f00dc4
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed Feb 13 12:31:46 2019 -0800

    Disable flaky test.
    
    PiperOrigin-RevId: 233807324

commit 142bd9fc372e0f33af738ce01cf38c8757176465
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed Feb 13 12:26:26 2019 -0800

    Disable flaky test.
    
    PiperOrigin-RevId: 233806315

commit 7d659b81fbe57d121f840519a89af5b8a56eb001
Author: Scott Zhu <scottzhu@google.com>
Date:   Thu Feb 7 11:20:36 2019 -0800

    Disable flaky test.
    
    PiperOrigin-RevId: 232910820

commit 78840bb8646aed747e9bf643a11ed2fa77b4bbf6
Author: Thomas O'Malley <omalleyt@google.com>
Date:   Wed Feb 6 12:01:19 2019 -0800

    Remove flaky timing check.
    
    PiperOrigin-RevId: 232718485

commit f395dbf81347e22608d691657b3674ad347d76dd
Author: Scott Zhu <scottzhu@google.com>
Date:   Tue Feb 5 18:12:00 2019 -0800

    Disable flaky tests for OSS build.
    
    PiperOrigin-RevId: 232596390

commit c8d5380fa36ba12f6a30439b8d8401b05beb0d67
Author: Jiri Simsa <jsimsa@google.com>
Date:   Wed Jan 30 19:09:40 2019 -0800

    [tf.data] Disabling a flaky test.
    
    PiperOrigin-RevId: 231712475

commit 82812551bd02474c8de10ac92fd34abb71afd257
Author: Eugene Brevdo <ebrevdo@google.com>
Date:   Fri Jan 25 14:20:30 2019 -0800

    Disable flaky test method in stage_op_test_gpu.
    
    PiperOrigin-RevId: 230967998

commit 8a9c9c8f8fcd9b7857db5efd913ad693ee730e89
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Fri Jan 25 04:50:30 2019 -0800

    [TF:XLA] Increase tolerance of ResizeImage test.
    
    This test was flaky over 10% of the time with GPUs due to auto tuning.
    
    PiperOrigin-RevId: 230883941

commit 331a1196b38253869d975e7380bac08e22db4cbe
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu Jan 24 12:59:40 2019 -0800

    Fix flaky keras DNN correctness test.
    
    PiperOrigin-RevId: 230774541

commit 799ec6e59608762d98009db256844ed589b4d6dd
Author: Reed Wanderman-Milne <reedwm@google.com>
Date:   Thu Jan 17 17:38:34 2019 -0800

    Fix flaky conv_ops_test
    
    PiperOrigin-RevId: 229849889

commit 1757ebeaa21b356b954fa8f54e1d0796a8e60dc6
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Thu Jan 17 13:01:06 2019 -0800

    Add oss-serial tag to elastic_optimizer_test
    
    This requires allocating many ports, and attaching to them later.
    Even with portserver, this is a flaky action when multiple tests execute on the same environment.
    
    PiperOrigin-RevId: 229802480

commit bc246800912b450cf5ee7a485a95a0b77a3d9f53
Author: Francois Chollet <fchollet@google.com>
Date:   Tue Jan 15 17:40:10 2019 -0800

    Reduce flakyness of integration test.
    
    Tested by trying a range of random seeds.
    
    PiperOrigin-RevId: 229473610

commit 2d58c2502f8971bc9af65c4f8270512f7c53fd2a
Author: Thomas O'Malley <omalleyt@google.com>
Date:   Mon Jan 14 11:19:51 2019 -0800

    Modify flaky topology_test
    
    PiperOrigin-RevId: 229218301

commit de671e716c1341bb9eaf8fbb1805ce61c2c78dbc
Merge: 9c4dacf 830d67e
Author: Andrew Selle <aselle@andyselle.com>
Date:   Wed Jan 9 02:54:33 2019 -0800

    Merge pull request #24797 from aselle/cherrypick-20180109a
    
    Fix TENSORRT docker image and flaky test.

commit 8ac8b9c98cc34f25adfdc230989db6b82eb9d4d6
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Tue Jan 8 12:18:59 2019 -0800

    Fixing flaky test in quantile regression
    
    PiperOrigin-RevId: 228376536

commit 67d8a0330b5bacc0bb45675b1e3f211bd930ec7f
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Tue Jan 8 12:18:59 2019 -0800

    Fixing flaky test in quantile regression
    
    PiperOrigin-RevId: 228376536

commit 058bb7c3512455d2d83d2094a6f6e60b0ca6ee05
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Fri Jan 4 22:49:14 2019 -0800

    Rollback flaky test
    
    PiperOrigin-RevId: 227959516

commit adf1585f5299fe81c853afab8dc8851bd1229a57
Author: Andrew Selle <aselle@google.com>
Date:   Thu Jan 3 14:05:20 2019 -0800

    Disable on mac a flaky test.
    
    PiperOrigin-RevId: 227746737

commit 6f4410f580ff48078f33c343b72d742095535fae
Author: Andrew Selle <aselle@google.com>
Date:   Thu Jan 3 14:05:20 2019 -0800

    Disable on mac a flaky test.
    
    PiperOrigin-RevId: 227746737

commit 78acbc6ee7fa557504599d7847bcd96a9a977d40
Author: Allen Lavoie <allenl@google.com>
Date:   Thu Jan 3 09:21:25 2019 -0800

    TFTS: Remove flaky assertions
    
    PiperOrigin-RevId: 227699591

commit fbc072b45d4a64e8fcc13783fa6047144a8ace2d
Author: Rachel Lim <rachelim@google.com>
Date:   Fri Dec 14 09:31:12 2018 -0800

    Fix flaky test by increasing sleep timer
    
    PiperOrigin-RevId: 225554476

commit 3ae0654d41b74538920d1d1cf812f83e35895fc6
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed Dec 12 11:08:26 2018 -0800

    Fix and re-enable three tests under LossWeightingTest in training_test.py.
    
    These tests share the same assertion: that weighting a particular class's loss over other classes (by passing in `sample_weight` into `model.fit`) leads to a lower evaluation loss when evaluating test data limited to that class compared to evaluating all test data. My theory is that the models in these tests are not trained enough for that assumption to always hold true, which is why they are flaky. Increased the weight from 2 to 10 and the training epochs from 5 to 10.
    
    PiperOrigin-RevId: 225218063

commit d6074a1afb8dc7dff25cea759f5249898cf1affe
Author: Shashi Shekhar <shashishekhar@google.com>
Date:   Thu Dec 6 16:01:40 2018 -0800

    Fix a flaky test.
    
    Move from absolute time measurement to relative.
    
    PiperOrigin-RevId: 224424896

commit 2bf928bcbbd51d31b817360a34d6b2b9881f7539
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu Dec 6 10:52:09 2018 -0800

    Disabling flaky tests in LossWeightingTest.
    
    PiperOrigin-RevId: 224367330

commit 21e223fb76cef1bcaedfcd1eac44df646da66abb
Author: Frank Chen <frankchn@google.com>
Date:   Wed Dec 5 21:10:56 2018 -0800

    Disabling flaky //tensorflow/python/keras:training_test
    
    PiperOrigin-RevId: 224271996

commit 1b5189b732536db66528cb29eed88874d713cdea
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed Dec 5 13:53:23 2018 -0800

    Disabling flaky rate_test.
    
    PiperOrigin-RevId: 224215488

commit 97ffac50fe31f99a64983b1947b22589df15dbc6
Author: Scott Zhu <scottzhu@google.com>
Date:   Mon Dec 3 10:07:45 2018 -0800

    Split the flaky test_implementation_mode into 3 tests.
    
    This test case usually took too long to execute, and cause that test shard to time out. Use paramsterized test so that each implementation mode are now split into separate test case.
    
    PiperOrigin-RevId: 223815273

commit 78ef03f348fa4005890693f51349e714d9aeef5a
Author: Scott Zhu <scottzhu@google.com>
Date:   Wed Nov 21 14:36:21 2018 -0800

    Disable flaky performance test.
    
    PiperOrigin-RevId: 222461831

commit 777039302d52565ef838082cde12bdfa6a1e38e1
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Wed Nov 21 00:27:16 2018 -0800

    Disable flaky stats_dataset_ops_test in tsan.
    
    PiperOrigin-RevId: 222364901

commit 7d0afad9925cd7b00d12db3c4f6f16646e7ef27d
Author: Priya Gupta <priyag@google.com>
Date:   Mon Nov 19 14:18:21 2018 -0800

    Distribution Strategy: Make values test non flaky.
    
    PiperOrigin-RevId: 222137537

commit 32a54c9f4fc2e66c7982291be2eab7a321c6234e
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Fri Nov 16 18:37:48 2018 -0800

    Disable flaky values_test
    
    PiperOrigin-RevId: 221883979

commit df74b804064bd16e1fe4aed2940c5f536c993dfc
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Wed Nov 14 17:25:18 2018 -0800

    Disable flaky testRunMetadata
    
    PiperOrigin-RevId: 221542805

commit 665bd7a2ce8ab64917cd47caa15e4c6d2b620e7b
Author: Katherine Wu <kathywu@google.com>
Date:   Wed Nov 7 15:17:32 2018 -0800

    Fix flaky test -- when testing the metric value, make sure that the updated value is reflected by re-running the value instead of update_op
    
    PiperOrigin-RevId: 220538414

commit 98f7a6760aab4c40c7eb2aebc14b2a9e96f9269a
Author: Sourabh Bajaj <sourabhbajaj@google.com>
Date:   Mon Nov 5 10:03:38 2018 -0800

    Fix the flaky interleaved eval test
    
    PiperOrigin-RevId: 220122757

commit 341c95baca57ddc1bbb7a53b5f6c52cee46dbabf
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu Nov 1 10:46:36 2018 -0700

    Restore input_test.
    Just disable the part of the tests that were flaky instead of the whole test.
    
    PiperOrigin-RevId: 219660130

commit 15d50e3808f4313b9479d10f05dd05032c82b35d
Author: Rachel Lim <rachelim@google.com>
Date:   Tue Oct 30 13:26:33 2018 -0700

    [tf.data] Fix flaky test from comparing floats
    
    PiperOrigin-RevId: 219355162

commit 1fc1fa290634c1c57b940aa2f57edda13da15a00
Author: Tim Shen <timshen@google.com>
Date:   Tue Oct 23 10:54:41 2018 -0700

    Increase the tolerance for XLA GPU conv3d.
    
    Currently it's flaky with P100. The error slightly exceeds the threshold (0.000529 vs 0.0005).
    
    PiperOrigin-RevId: 218370242

commit bad63b23d03cbe5718d09add991881b565cab0dc
Author: Frank Chen <frankchn@google.com>
Date:   Sat Oct 20 22:33:49 2018 -0700

    Fix flaky `slurm_cluster_resolver_test` by making the job list an ordered dictionary.
    
    PiperOrigin-RevId: 218045119

commit 89769c0f691c489a2e43f81650bbf2216d1fe03a
Author: Justin Lebar <jlebar@google.com>
Date:   Fri Oct 19 15:34:12 2018 -0700

    Disable contrib/cluster_resolver:slurm_cluster_resolver_py_test; it is flaky.
    
    PiperOrigin-RevId: 217942503

commit cee6187a7d8aec61655546b6df6f84fecf21cc0a
Author: Todd Wang <toddwang@gmail.com>
Date:   Sat Oct 6 14:08:08 2018 -0700

    Mark tensorflow/contrib/tpu:datasets_test flaky (#22799)
    
    It fails 1/1000 runs in OSS builds.
    
    PiperOrigin-RevId: 216050192

commit e93a18954689b6d522560f5273f6d3320d545b2e
Author: Todd Wang <toddw@google.com>
Date:   Sat Oct 6 13:49:25 2018 -0700

    Mark tensorflow/contrib/tpu:datasets_test flaky
    
    It fails 1/1000 runs in OSS builds.
    
    PiperOrigin-RevId: 216050192

commit ebe769f166c35c16637cb919ea3ddd096e04befa
Author: Anjali Sridhar <anjalisridhar@google.com>
Date:   Wed Sep 19 11:43:04 2018 -0700

    Re-enable flaky keras_test
    
    PiperOrigin-RevId: 213665390

commit 838d9c859583717a151395ef9c28374e124f1408
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Mon Sep 17 13:32:33 2018 -0700

    Tweak test tolerance in segment_reduction_ops_test.py, which is otherwise flaky.
    
    PiperOrigin-RevId: 213327863

commit 98342d8bea440c960a3a08bf3f27df737b2b2b11
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Fri Sep 14 15:23:31 2018 -0700

    Disable flaky keras_test.
    
    PiperOrigin-RevId: 213053512

commit 19d66a950e2091bb598c6a2d375e14208f5773b2
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Fri Sep 14 14:07:14 2018 -0700

    Disable flaky gpu_base_test
    
    PiperOrigin-RevId: 213040362

commit 0981b26dd4f5d1b9b3baaecbb61533a658a95c2a
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Fri Sep 14 13:31:24 2018 -0700

    Disable the flaky test case in timeline_test
    
    PiperOrigin-RevId: 213034078

commit ce73fa866f421ca9da4763b3d6128a0724265e8c
Author: Francois Chollet <fchollet@google.com>
Date:   Wed Sep 12 14:42:47 2018 -0700

    Disable flaky test.
    
    PiperOrigin-RevId: 212706610

commit de284aecef2ce73c0236a223c1df1995c23395b9
Author: Olivia Nordquist <nolivia@google.com>
Date:   Thu Sep 6 11:49:33 2018 -0700

    disabling a flaky test in py3
    
    PiperOrigin-RevId: 211843398

commit efe922e25f30af02d02ecfff0e4f207245e642d7
Author: Nupur Garg <nupurgarg@google.com>
Date:   Thu Aug 30 18:00:59 2018 -0700

    Fix flaky tests in lite_test.py.
    
    PiperOrigin-RevId: 211015230

commit c74d0aeecac3f969f07d67763de6a48755db1844
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Wed Aug 29 23:39:07 2018 -0700

    Bump test size for pruning_utils_test to avoid flaky timeouts.
    
    PiperOrigin-RevId: 210857377

commit fb9a2fbfe461020b7ae167f97832c8a2f060319d
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Mon Aug 27 14:27:48 2018 -0700

    Disable flaky estimator_training_test
    
    PiperOrigin-RevId: 210431699

commit f468d9a4d9a551601a74edf0564bd6274513be9f
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Mon Aug 27 12:56:00 2018 -0700

    Disable flaky boosted_trees_test.
    
    PiperOrigin-RevId: 210415730

commit 632e3d66334ac3718a0fd41524c7dfc499363cab
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Sun Aug 26 23:15:48 2018 -0700

    Disable flaky coordinator_test.
    
    PiperOrigin-RevId: 210320269

commit 5817d58b4a0228656389829ff13350b95911d75d
Author: Scott Zhu <scottzhu@google.com>
Date:   Tue Aug 14 14:20:58 2018 -0700

    Update flaky test.
    
    PiperOrigin-RevId: 208712150

commit 430dd8d1c14cd665aafdcdee82c76ec304f51ef1
Author: Akshay Agrawal <akshayka@google.com>
Date:   Fri Aug 10 14:36:47 2018 -0700

    Fix flaky layers test.
    
    PiperOrigin-RevId: 208269820

commit f48928939d1e882e8a03f15be67e59405a1ddbc9
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Mon Jul 30 11:35:29 2018 -0700

    Disable flaky test case in conv_ops_test
    
    PiperOrigin-RevId: 206618103

commit 646c179b2ca8e3366d2b0d27f5f14839aa49e658
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Mon Jul 16 14:02:31 2018 -0700

    Re-enable some flaky tests that were affected by low
    precision of fused winograd implementation of convolution backprop.
    
    PiperOrigin-RevId: 204803121

commit 3d949e2016a967e303b8ddbd3cbe3bd3408320e8
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Fri Jul 13 14:16:02 2018 -0700

    Disable flaky tests on windows.
    
    PiperOrigin-RevId: 204527084

commit 4555d63e01f66e241359660de39148eaab2a0dd2
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Fri Jul 13 14:05:49 2018 -0700

    Disable flaky random seed test
    
    PiperOrigin-RevId: 204525365

commit 413254661c6c6f69bf435cf0cf5c5ddba3e49831
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Mon Jul 9 13:48:03 2018 -0700

    Disable flaky xla_hlo_profile_test
    
    PiperOrigin-RevId: 203822716

commit 1579446141a4d421cc34e92d68bf104056d184ed
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Fri Jun 22 12:06:03 2018 -0700

    Fix flaky serial_device_batch_scheduler_test.
    
    PiperOrigin-RevId: 201721119

commit 18921a5d96610b703338431c0563f14754363a0a
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Fri Jun 22 08:02:38 2018 -0700

    Reduce flakiness of tf.distributions tests by tweaking the tolerances.
    
    tf.distributions.DirichletMultinomial test was flaky.
    
    PiperOrigin-RevId: 201685575

commit d9774ba1cda55c5710fb434cadbcfdfbfcf49653
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed Jun 20 16:45:46 2018 -0700

    Disable flaky dirichlet_multinomial_test_gpu
    
    PiperOrigin-RevId: 201440233

commit 89045abeddfa4afc9089c8d93d9d22e33d7fe369
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed Jun 20 15:39:41 2018 -0700

    Disable flaky serial_device_batch_scheduler_test
    
    PiperOrigin-RevId: 201429850

commit 2c4535c489124b71eac73ec120ca08d5d976a7b9
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Sun Jun 17 20:52:11 2018 -0700

    Disable flaky random_ops_test
    
    PiperOrigin-RevId: 200934420

commit 73c3a8a5217a6b105acffe62165071f8aa740e9b
Author: Skye Wanderman-Milne <skyewm@google.com>
Date:   Tue Jun 5 15:59:04 2018 -0700

    Disable flaky test for now.
    
    PiperOrigin-RevId: 199373124

commit 1a9f69583876c50c98fc3ccd9ded1f81731a9492
Author: Peter Hawkins <phawkins@google.com>
Date:   Mon Jun 4 09:00:06 2018 -0700

    Disable flaky test tensorflow/contrib/distribute/python:minimize_loss_test_gpu from continuous builds.
    
    PiperOrigin-RevId: 199140117

commit 217d73ceba3248c3570be72300a7234d2cef142b
Author: Peter Hawkins <phawkins@google.com>
Date:   Thu May 31 17:17:13 2018 -0700

    Mark tensorflow/contrib/learn:estimator_test as optonly because it is flaky due to timeouts without optimization.
    
    PiperOrigin-RevId: 198804880

commit 2bb9fe8d202b2400219d45a8a2185a02dd070fb5
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Wed May 30 10:35:57 2018 -0700

    Disable flaky fused_rnn_cell_test
    
    PiperOrigin-RevId: 198582181

commit 564fcf1e48224f518fa5b62bbc5e80f84270d0fb
Author: Jiri Simsa <jsimsa@google.com>
Date:   Mon May 21 15:32:45 2018 -0700

    Disable flaky batch_dataset_op_test
    
    PiperOrigin-RevId: 197471172

commit 6f76e5c985246484c95ce48776685ebe3d40f74f
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed May 16 12:04:13 2018 -0700

    Turn off MirroredStrategy Dataset prefetching in tests when using the
    combinations library. It adds some small non-determinism to the input
    batches which can make tests flaky.
    
    Also add a default DistributionStrategy combination.
    
    PiperOrigin-RevId: 196866569

commit 9bde1e0f9edf643e6ec322c79e649b672a86d54e
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Mon May 14 14:16:09 2018 -0700

    Disable flaky cudnn_recurrent test
    
    PiperOrigin-RevId: 196565296

commit 0043a0eb7280fe0f0f5a06d9d59ed517b7a189a4
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Thu May 10 20:55:55 2018 -0700

    Disable flaky batch_dataset_op_test
    
    PiperOrigin-RevId: 196212027

commit 48e436c091bad11a9a146a280a1cefbeff3ffc8e
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu May 10 13:56:34 2018 -0700

    Increase size of test //third_party/tensorflow/contrib/distributions:distribution_test to avoid flaky timeouts
    
    PiperOrigin-RevId: 196166582

commit c4d8097bcd4203d68ee0911ae3476304d6ce65d6
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu May 10 09:50:54 2018 -0700

    Increase shard count yet more for tensorflow/contrib/metrics:metric_ops_test to avoid flaky timeouts
    
    PiperOrigin-RevId: 196129385

commit 8c747a1a8f8c78475c5d5d99d95509c836684dcf
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed May 9 20:32:13 2018 -0700

    Increase size of test tensorflow/contrib/learn:graph_io_test to medium to avoid flaky timeouts
    
    PiperOrigin-RevId: 196068593

commit 901035bbe15d8a20cf619a2dca6c46fa4f6e8a76
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed May 9 18:35:50 2018 -0700

    Increase shard count for //third_party/tensorflow/contrib/learn:kmeans_test to avoid flaky timeouts
    
    PiperOrigin-RevId: 196061508

commit 1bb72f944663a4bcad19f4241bf76f0c70fda356
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed May 9 18:14:41 2018 -0700

    Increase size of test tensorflow/contrib/distributions:mvn_tril_test to medium to avoid flaky timeouts
    
    PiperOrigin-RevId: 196059863

commit b348209171a2fac38def122d2ee43bd2fc3d9b1d
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed May 9 16:18:45 2018 -0700

    Increase shard count for tensorflow/contrib/distributions:vector_diffeomixture_test to avoid flaky timeouts
    
    PiperOrigin-RevId: 196046333

commit 294e9a1ba1916933b1f932381f082a7d20482ddb
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed May 9 14:41:23 2018 -0700

    Run tensorflow/python/kernel_tests:conv2d_backprop_filter_grad_test only when omptimzing to avoid flaky timeouts
    
    PiperOrigin-RevId: 196031762

commit a4afe20fb4663c0f3b7f1b0086fe1c97557fea7b
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed May 9 13:06:50 2018 -0700

    Increase size of test tensorflow/python:basic_session_run_hooks_test to avoid flaky timeouts
    
    PiperOrigin-RevId: 196016436

commit 5e7ff39791d18e67f6f4baac8f190d44d796851e
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed May 9 11:45:52 2018 -0700

    Increase size of tensorflow/contrib/sparsemax:sparsemax_test to medium to avoid flaky timeouts
    
    PiperOrigin-RevId: 196004443

commit 80ec58f7d6f59618aaf7da7e0465441c7c83bc1d
Author: Allen Lavoie <allenl@google.com>
Date:   Wed May 9 11:28:30 2018 -0700

    TFTS: Make estimators_test non-flaky
    
    Replaces a "loss decreased" check with basic shape checking (it should have been seeded already, so there's likely some race condition which I should track down...).
    
    PiperOrigin-RevId: 196001526

commit 37e48e870c9f431dd10fd838ba066c8d6c7bd9dd
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed May 9 11:11:32 2018 -0700

    Increase the shard count of tensorflow/python/keras:wrappers_test to avoid flaky timeouts
    
    PiperOrigin-RevId: 195998578

commit d8d0be5bd371096403684a03e8bc3b386a59fddb
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed May 9 10:47:06 2018 -0700

    Test tensorflow/contrib/timeseries/python/timeseries:estimators_test only in opt mode to avoid flaky timeouts
    
    PiperOrigin-RevId: 195993828

commit ee1b43f69d7a7aeb517e54150a3fff30f51933c4
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed May 9 05:22:36 2018 -0700

    Run test tensorflow/python/kernel_tests:array_ops_test only when optimizing to avoid flaky timeouts
    
    PiperOrigin-RevId: 195955576

commit 79b773a4395caf7f0b17ce9ac84a1f34dd277bb9
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Tue May 8 16:23:27 2018 -0700

    Set size of tensorflow/python/keras:normalization_test to medium to avoid flaky timeouts
    
    PiperOrigin-RevId: 195894737

commit d4d97591d036bed4ddedc48d66b55500a31b4ab5
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Tue May 8 15:34:40 2018 -0700

    Increase shard count of tensorflow/contrib/learn:state_saving_rnn_estimator_test to avoid flaky timeouts
    
    PiperOrigin-RevId: 195887546

commit 8039c947c3a2e0f3d780d0a1458bd40c6acd2145
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Tue May 8 15:33:37 2018 -0700

    Increase size of tensorflow/contrib/distributions:batch_reshape_test to medium to avoid flaky timeouts
    
    PiperOrigin-RevId: 195887374

commit 71387153307a7df94bcdc5307de95e6e228a95a9
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Tue May 8 15:26:44 2018 -0700

    Increase shard count of tensorflow/python/keras:lstm_test to avoid flaky timeouts
    
    PiperOrigin-RevId: 195886372

commit 96fa17d853149f9bdf33c09b89abdd8c6521044d
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Tue May 8 14:45:01 2018 -0700

    Increase shard_count of tensorflow/python/estimator:estimator_test to avoid flaky asan timeouts
    
    PiperOrigin-RevId: 195879364

commit d3f3fb5b5f2db18f890838b29cac94ba88335f0a
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Tue May 8 14:41:48 2018 -0700

    Increase shard count of tensorflow/contrib/distributions:mixture_test to avoid flaky timeouts in asan mode
    
    PiperOrigin-RevId: 195878809

commit 1d94ed775417bad963a91cd6831a51e7538d797b
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Tue May 8 14:00:48 2018 -0700

    Increase size of test tensorflow/contrib/layers:rev_block_lib_test to medium
    to avoid flaky timeouts.
    
    PiperOrigin-RevId: 195871947

commit 4ca46dd6dda433e622e4a382123f9a81487aeef5
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Tue May 8 11:12:07 2018 -0700

    Increase size of test //third_party/tensorflow/python:saver_large_variable_test
    from "small" to "medium" to prevent flaky timeouts.
    
    PiperOrigin-RevId: 195846802

commit 80c7ebc32324d689ae3feb17a0cb4cf32d736f19
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Mon May 7 14:55:26 2018 -0700

    Disable automated testing of tensorflow/compiler/tests:extract_image_patches_op_test_cpu_ondemand
    
    A recent change has made this test flaky.
    
    PiperOrigin-RevId: 195726647

commit a0496a1646fd13188cc985889ca325c004674a17
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Mon May 7 12:41:07 2018 -0700

    Make test tensorflow/python/keras:resnet50_test be size "medium"
    
    This test sometimes runs longer than 60s, and has been getting flaky timeouts
    as a result.  With a longer timeout, it succeeds reliably.
    
    PiperOrigin-RevId: 195704998

commit 4a74a5058f7cb3ac096fa582941d9ab801ba6d65
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu May 3 16:34:11 2018 -0700

    Fix flaky test time-outs for dnn_test and rnn_test.
    
    PiperOrigin-RevId: 195331183

commit 7715b7b0650c2f20b47189a060580a45e510acd8
Author: Mark Heffernan <meheff@google.com>
Date:   Tue May 1 20:14:29 2018 -0700

    Add missing colocated element in test in buffer_assignment_test.
    This was resulting in a flaky test because sometimes the live set would include this missing colocated element perhaps because the buffers in the allocation has some nondeterministic order (read from a map?).
    
    PiperOrigin-RevId: 195039311

commit 5dd3d19818193be9bc59a5e802a3d70853a73df4
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu Apr 26 15:07:43 2018 -0700

    Disable triangular_solve_test on ASAN due to flaky time outs.
    
    PiperOrigin-RevId: 194460641

commit f67a78c69ab301bdc34005a884a9dd0e56b10446
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu Apr 26 14:53:19 2018 -0700

    Disable densenet_test on MSAN due to flaky time outs.
    
    PiperOrigin-RevId: 194458270

commit b75655fc3be17d3b35d28cd649ab0dc14d00009c
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed Apr 25 14:59:57 2018 -0700

    Disable factorization_ops_test on ASAN due to flaky timeouts.
    
    PiperOrigin-RevId: 194303178

commit 3563165fb8328fd0fd6eba88557c25209453339f
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed Apr 25 11:48:34 2018 -0700

    Disable nasnet_test on MSAN due to flaky timeout.
    
    PiperOrigin-RevId: 194274190

commit d85610e5d25b4a9150446841d659a17ae1673ddd
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Tue Apr 24 15:49:53 2018 -0700

    Fix flaky timeouts in metric_ops_test by sharding more.
    
    PiperOrigin-RevId: 194159328

commit 26ff316f49e613a7f9cba02dd5e7d6cd5aa78623
Author: Pavithra Vijay <psv@google.com>
Date:   Mon Apr 23 11:03:13 2018 -0700

    Fix flaky stateful metrics test
    
    PiperOrigin-RevId: 193951580

commit d964834a922e77198fd387aac6c6cc5970a31e7d
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed Apr 18 15:02:26 2018 -0700

    Merged commit includes the following changes:
    193422827  by yifeif:
    
        Fix buildifier error.
    
    --
    193421691  by skyewm:
    
        Make GraphModeFunctions work with _USE_C_SHAPES=True.
    
        Tensor._handle_data is going away. This change adds special hooks for
        propagating the resource handle shape information through
        EagerTensors.
    
    --
    193421473  by A. Unique TensorFlower:
    
        Register dynamic_stitch for DT_VARIANT type.
    
    --
    193421175  by nolivia:
    
        disabling flaky tsan test
    
    --
    193420117  by nolivia:
    
        disabling flaky test in tensorflow that has no apparent culprit
    
    --
    
    PiperOrigin-RevId: 193422827

commit bcfe946780034f2ff757e82c758cf8075f1132df
Author: Olivia Nordquist <nolivia@google.com>
Date:   Mon Apr 16 16:24:19 2018 -0700

    disabling flaky asan test
    
    PiperOrigin-RevId: 193117611

commit b52b5a47148b6f05ed9439840dff9e3f189b3b19
Author: Jonathan Hseu <jhseu@google.com>
Date:   Wed Apr 11 18:57:49 2018 -0700

    Switch to WaitForNotification to fix the flaky test.
    
    See:
    https://source.cloud.google.com/results/invocations/31632a30-3728-4635-a456-f89b9e8b9dfe/log
    PiperOrigin-RevId: 192544848

commit b59d7b52bf119e07a1682e898e06d20356936a5d
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Mon Apr 9 15:00:17 2018 -0700

    Don't run test flaky under TSAN.
    
    PiperOrigin-RevId: 192193350

commit e98c13c55e519cb70ede110cd8941f8cb75ab718
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed Apr 4 16:17:05 2018 -0700

    Running sparse_ops_test only in opt mode since the test is flaky (times out) in fastbuild mode.
    
    PiperOrigin-RevId: 191665014

commit f270e43f886cc39bc4c0fb11e147b9c38853b3a4
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Fri Mar 30 12:26:21 2018 -0700

    Disable tsan for tensorflow/python/estimator:replicate_model_fn_test
    
    It gets flaky failures.
    
    PiperOrigin-RevId: 191100692

commit c3436d6757a77ab1fefd3f6000a1e961a9ab9881
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Sun Mar 25 22:02:09 2018 -0700

    Disable flaky prefetching_ops_test.
    
    PiperOrigin-RevId: 190416108

commit b57af1577f4a6e4181227d105c68463538b8f9ef
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu Mar 22 13:05:30 2018 -0700

    Disable testing flaky tensorflow/contrib/eager/python/examples/spinn:spinn_test under py3
    
    PiperOrigin-RevId: 190112748

commit aeb9f62e237ae1274482acca2fa09db34aef42d4
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu Mar 22 10:17:18 2018 -0700

    Omit tensorflow/python/estimator:replicate_model_fn_test from asan builds.
    It gets flaky timeouts.
    
    PiperOrigin-RevId: 190084932

commit 326bfa618a86c9fd604b8b98be6baff46337b6c6
Author: Justin Lebar <jlebar@google.com>
Date:   Wed Mar 21 09:20:28 2018 -0700

    Don't run tensorflow/python:function_test under fastbuild.
    
    It gets flaky timeouts.
    
    PiperOrigin-RevId: 189918276

commit 6a1ec9deeb2b04dc698db385ea582f6949b4f8bc
Merge: cd6b5ec 52f9166
Author: Amit Patankar <amitpatankar@google.com>
Date:   Tue Mar 20 12:51:33 2018 -0700

    Merge pull request #17865 from av8ramit/fix_mac2
    
    Disable one more flaky test on mac.

commit 52f91669165eba750b89864394db797d26790700
Author: Amit Patankar <amitpatankar@google.com>
Date:   Tue Mar 20 12:46:19 2018 -0700

    Disable one more flaky test on mac.

commit f57f7d09eeb7402f2455564fafbcebf7ac4b8fe3
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Tue Mar 20 11:36:07 2018 -0700

    Don't run tensorflow/python:function_test under asan.
    
    It gets flaky timeouts.
    
    PiperOrigin-RevId: 189777986

commit 4ff81a7d891c2affadb9c9068cf37fdb109c0e77
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed Mar 14 13:46:57 2018 -0700

    Set shard count to 4 for tensorflow/contrib/linalg:linear_operator_block_diag_test to avoid timeouts
    
    This was getting flaky timeouts because it was taking over 300s about 25% of the time.
    This change increases the shard count to 4 to reduce the total elapsed time.
    With 4 shards, the maximum time per shard is about 180s.
    
    PiperOrigin-RevId: 189079453

commit 8f0c30b88017e883c09da640422588804546b8fc
Author: Olivia Nordquist <nolivia@google.com>
Date:   Sun Mar 11 19:35:34 2018 -0700

    disable flaky asan test
    
    PiperOrigin-RevId: 188670616

commit b006115403f4a6592dee630132b0cf9c6519a922
Author: Yifei Feng <1192265+yifeif@users.noreply.github.com>
Date:   Thu Mar 8 19:54:14 2018 -0800

    Make spinn_test less flaky (#17580)

commit ca59422fe1f463ef89255b73b77cc08821b74b44
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Thu Mar 8 10:38:34 2018 -0800

    Disable flaky checkpoint_utils_test everywhere
    
    PiperOrigin-RevId: 188353354

commit 77e20d1b1912febfba568cb2ea3f9df7d3066e5c
Author: Olivia Nordquist <nolivia@google.com>
Date:   Tue Mar 6 13:08:34 2018 -0800

    disabling flaky test in msan
    
    PiperOrigin-RevId: 188069046

commit 80f3080cd87997dd87f2c6ca84bce6525dca92fe
Author: Olivia Nordquist <nolivia@google.com>
Date:   Mon Mar 5 17:37:29 2018 -0800

    disabling flaky test in msan
    
    PiperOrigin-RevId: 187951549

commit 413a22f8ca594b01d78ea5970d454629a438bab3
Author: Olivia Nordquist <nolivia@google.com>
Date:   Mon Mar 5 16:24:49 2018 -0800

    disabling msan flaky test
    
    PiperOrigin-RevId: 187942643

commit 85daa2e4553e49ca6ab2fbb412b18c23b5399524
Author: Allen Lavoie <allenl@google.com>
Date:   Fri Mar 2 12:43:22 2018 -0800

    TFTS: Switch more variables to ResourceVariables to avoid race conditions
    
    The LSTM example test was a bit flaky.
    
    PiperOrigin-RevId: 187655714

commit faab0cf5407dcf11967371b51b97f8eef6964a35
Author: Guangda Lai <laigd@google.com>
Date:   Fri Mar 2 12:33:40 2018 -0800

    Exclude flaky tests for cuda_on_cpu.
    
    PiperOrigin-RevId: 187654568

commit 7a2ba8edbaa6491ff33ae1412d9ba45e80c2cc3c
Author: Suharsh Sivakumar <suharshs@google.com>
Date:   Mon Feb 26 18:04:55 2018 -0800

    Modify retrain script to output TFLite compatible quantized models.
    
    -Also fix flaky input name selection introduced by last PR.
    -Also rely on tf.contrib.quantize to do graph transformations.
    -Also, update retrain script to use new float mobilenet_v1 and quantized mobilenet_v1 models.
    
    PiperOrigin-RevId: 187111533

commit 19f18e377d8ee2f624406527b21444128da344df
Author: Suharsh Sivakumar <suharshs@google.com>
Date:   Mon Feb 26 18:04:55 2018 -0800

    Modify retrain script to output TFLite compatible quantized models.
    
    -Also fix flaky input name selection introduced by last PR.
    -Also rely on tf.contrib.quantize to do graph transformations.
    -Also, update retrain script to use new float mobilenet_v1 and quantized mobilenet_v1 models.
    
    PiperOrigin-RevId: 187111533

commit 1b00edea4688111396683b967f0ad5f5848d2ece
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Wed Feb 21 23:33:44 2018 -0800

    Disable flaky keras:metrics_test.
    
    PiperOrigin-RevId: 186573303

commit 6e7df7bd8c0d5aaf70b3fc5c2b180b6bcb53629a
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Wed Feb 21 21:06:54 2018 -0800

    Disable flaky moving_average test.
    
    PiperOrigin-RevId: 186563841

commit 1051fcb74fd6763382ccc83dda34ae5376ce34c9
Author: Yifei Feng <yifeif@google.com>
Date:   Wed Feb 21 15:13:03 2018 -0800

    Disable flaky test tensorflow/contrib/opt:moving_average_optimizer_test
    
    PiperOrigin-RevId: 186527039

commit 23feb7a180288cd3bc0b2afb4d65afdac1fbbf7e
Author: Yifei Feng <1192265+yifeif@users.noreply.github.com>
Date:   Tue Feb 20 11:48:43 2018 -0800

    Disable flaky test
    
    tensorflow/contrib/opt:moving_average_optimizer_test

commit 075aa8aa5a73113935e5a0962166bfb012e1a86e
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Tue Feb 20 11:40:04 2018 -0800

    Temporarily disable flaky test.
    
    PiperOrigin-RevId: 186336341

commit 695ae5a3de96069c58a4041faa05fc4f68825035
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Sun Feb 11 03:44:24 2018 -0800

    Disable flaky halton_sequence_test
    
    PiperOrigin-RevId: 185294455

commit 8ced9faa028ec050516f89f4f542f5aa25f6f3d0
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Fri Feb 9 16:10:34 2018 -0800

    Disable flaky spinn_test
    
    PiperOrigin-RevId: 185207742

commit 8fc47fa3af0e7bc1652e7180c699a270bcc71bbd
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Fri Jan 26 17:18:16 2018 -0800

    Raise to 4 the shard counts of //third_party/tensorflow/contrib/{factorization:kmeans_test,linear_optimizer:sdca_estimator_test}
    
    These tests were getting flaky timeouts when run under asan, sometimes taking
    longer than the 5 minute timeout.  Increasing the shard count to 4 seems to be
    sufficient to cause them not to time out.
    
    PiperOrigin-RevId: 183470183

commit 83ea281804d90f5487b18f6af5eb9dd30b14d9fb
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Thu Jan 25 22:32:15 2018 -0800

    For windows cmake build turn on CMAKE_SUPPRESS_REGENERATION to avoid flaky
    build failures.
    
    PiperOrigin-RevId: 183341561

commit c2ea7a710c5ec478fcc0150ec0117250c54e601e
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu Jan 25 18:46:51 2018 -0800

    Set size of test //third_party/tensorflow/python/data/kernel_tests:dataset_from_generator_op_test to medium
    
    It sometimes takes longer than a minute, and thus gets flaky timeouts.
    
    PiperOrigin-RevId: 183326334

commit c89c452cd7a1675a6e2332d09379469320197a8c
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu Jan 25 17:08:50 2018 -0800

    [XLA] Disable half_test_cpu as it is flaky
    
    PiperOrigin-RevId: 183315762

commit a8c4e8d96de7c0978851a5f9718bbd6b8056d862
Author: Sanjoy Das <sanjoy@google.com>
Date:   Thu Jan 25 11:17:08 2018 -0800

    [XLA] Make xla_hlo_profile_test less flaky
    
    Instead of relying on some oeprations always taking longer than others (and this
    appearing in a specific order in the rendered HLO profile), pick them out by
    opcode.
    
    PiperOrigin-RevId: 183268593

commit 11429a5e25cf7bf9b45a564283a35e1495de6741
Author: Shivani Agrawal <shivaniagrawal@google.com>
Date:   Tue Jan 23 20:09:58 2018 -0800

    [tf.data] Fixes flaky timeouts of stats_dataset_ops_test.
    
    PiperOrigin-RevId: 183033139

commit 0bcbe479b4adaaa5b16000df4e703dd1389eaea2
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Tue Jan 23 10:19:19 2018 -0800

    Increase shard count of tensorflow/contrib/learn:linear_test to avoid test timeouts.
    
    The test tensorflow/contrib/learn:linear_test has been getting flaky timeouts t
    a low rate for some time, but they increased greatly under the address
    sanitizer due to a recent change there.
    
    This CL increases the test's shard count to bring the time for each shard
    well under the 5 minute timeout.
    
    PiperOrigin-RevId: 182953078

commit 94bdd184edb386d7a2682b4f5f4048785c48afeb
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu Jan 18 11:42:09 2018 -0800

    Enable a no longer flaky test.
    
    PiperOrigin-RevId: 182412902

commit b10a711720b3048619058dedc56480dbc65030cd
Author: Allen Lavoie <allenl@google.com>
Date:   Thu Jan 18 11:09:26 2018 -0800

    Disable flaky test
    
    Due to a known input function issue.
    
    PiperOrigin-RevId: 182407471

commit 09a6446b4e61f5fc8aa8fcf3f5824ef6660e7fc2
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu Jan 18 11:42:09 2018 -0800

    Enable a no longer flaky test.
    
    PiperOrigin-RevId: 182412902

commit 32827caf64b06eed15aac5f8f74067de9ee21425
Author: Allen Lavoie <allenl@google.com>
Date:   Thu Jan 18 11:09:26 2018 -0800

    Disable flaky test
    
    Due to a known input function issue.
    
    PiperOrigin-RevId: 182407471

commit a41f21a6701a77327e66bfec70cb97ecad636070
Author: Amit Patankar <amitpatankar@google.com>
Date:   Wed Jan 17 14:44:17 2018 -0800

    Disabling flaky replicate_model_fn_test.py for cmake.
    
    PiperOrigin-RevId: 182273024

commit b1f157f4d2d871f7a6d8eeb21fddf97b5216608a
Author: Amit Patankar <amitpatankar@google.com>
Date:   Fri Jan 12 16:29:30 2018 -0800

    Disable flaky model_analyzer_test on windows. (#16089)
    
    PiperOrigin-RevId: 180599588

commit 0003892b62cadfa207316ac49ac40ff14d74412e
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu Jan 11 14:58:20 2018 -0800

    Fixes flaky step counting test in dnn_linear_combined_test
    
    PiperOrigin-RevId: 181666917

commit d2082810c4e6fdcd501fce7abc86e9be4c36cb3a
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed Jan 10 12:58:02 2018 -0800

    Fix flaky training tests. Reenable the tests.
    
    PiperOrigin-RevId: 181505090

commit 79226b6682d17a39b9b9a21a172f6d79b5f6a162
Author: Amit Patankar <amitpatankar@google.com>
Date:   Wed Jan 10 11:29:21 2018 -0800

    The gan training test is flaky. Disabling it.
    
    PiperOrigin-RevId: 181493377

commit d6a9ea3dc2e91e9520f42c3b8cb66ad47bd4694d
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Thu Jan 4 15:50:24 2018 -0800

    Bump the size of interleave_dataset_op_test to avoid flaky timeouts.
    
    PiperOrigin-RevId: 180856860

commit 425a71083fddcbdeaf415443e9c5bec2eb356a4b
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Tue Jan 2 15:12:56 2018 -0800

    Disable flaky model_analyzer_test on windows.
    
    PiperOrigin-RevId: 180599588

commit 12d82a1f53fd57b0ca0990a266121ec29d0d42b7
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Mon Jan 1 21:48:15 2018 -0800

    Disable flaky replicate_model_fn_test.
    
    PiperOrigin-RevId: 180512413

commit 0543cf17187f6d3b178717bd528af28c754aaf94
Author: Jingyue Wu <jingyue@google.com>
Date:   Wed Dec 20 08:34:54 2017 -0800

    Fix a flaky test.
    
    In the old code, `a` can be freed before bytes_in_use, making the result of
    `bytes_in_use` unstable. In the new code, `b` uses `a` and control-depends on
    `bytes_in_use`, so `a` cannot be freed before `bytes_in_use`.
    
    PiperOrigin-RevId: 179690026

commit a7c11aa3cafea286947a8131523fe1c6dc0b7174
Author: Olivia Nordquist <nolivia@google.com>
Date:   Tue Dec 12 11:17:00 2017 -0800

    disabling flaky test
    
    PiperOrigin-RevId: 178787158

commit 3d4aa4eacd4beca250ed52cc284e9caa7fb45e22
Author: Yifei Feng <yifeif@google.com>
Date:   Tue Dec 12 02:02:28 2017 -0800

    Disable flaky //tensorflow/contrib/learn:dnn_linear_combined_test
    
    PiperOrigin-RevId: 178734940

commit fcca16c5e3d8168ea95616956fdcf777798b164b
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Mon Dec 11 23:26:35 2017 -0800

    Disable flaky random ops test.
    
    PiperOrigin-RevId: 178723108

commit e02be0161393d255d8e1ade54c2a885b9695beab
Author: Jonathan Hseu <jhseu@google.com>
Date:   Mon Nov 27 19:40:45 2017 -0800

    Fix the flaky file_block_cache_test.
    
    PiperOrigin-RevId: 177106823

commit 34a69568752ef8badbe6aab5d1f568821c19e19c
Author: Saurabh Saxena <srbs@google.com>
Date:   Wed Nov 22 19:13:54 2017 -0800

    Fix flaky test.
    
    PiperOrigin-RevId: 176725659

commit d76632ae7367cd67e9a54999a8788b27a803bbb0
Author: Derek Murray <mrry@google.com>
Date:   Fri Nov 10 12:30:03 2017 -0800

    [CMake] Add missing framework dependency to `tf_c_python_api`.
    
    This was occasionally causing flaky failures due to the module being compiled
    before the proto_text headers had been generated.
    
    PiperOrigin-RevId: 175322168

commit 9e6d4d4426a86a675dcdfdb26bd9de6d5a12196c
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Thu Nov 9 16:26:07 2017 -0800

    Increase tolerance in flaky multinomial test.
    
    PiperOrigin-RevId: 175230217

commit aeb1d81c6a1e71d5ae5862f281e8f6f9770066a4
Author: Igor Saprykin <isaprykin@google.com>
Date:   Thu Nov 9 13:10:02 2017 -0800

    Disable flaky tests in replicate_model_fn_test.py.
    
    I suspect that reducing local variables for eval metrics over more than one tower is flaky, but I haven't figured out why yet.
    
    PiperOrigin-RevId: 175201241

commit 0719d26b1e61d13af1754b28ae855ba094d944ea
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Thu Nov 9 16:26:07 2017 -0800

    Increase tolerance in flaky multinomial test.
    
    PiperOrigin-RevId: 175230217

commit 73b7d47031dc53ef52ef028dc0a830de8ec18238
Author: Igor Saprykin <isaprykin@google.com>
Date:   Thu Nov 9 13:10:02 2017 -0800

    Disable flaky tests in replicate_model_fn_test.py.
    
    I suspect that reducing local variables for eval metrics over more than one tower is flaky, but I haven't figured out why yet.
    
    PiperOrigin-RevId: 175201241

commit 36dce3f7c3eede3c539b58ad9fca1f4dcf0b9c81
Author: Martin Wicke <martin.wicke@gmail.com>
Date:   Wed Nov 8 09:21:09 2017 -0800

    Disable flaky multinomial_test (#14336)

commit 318e071f7cb9fd51ddf0dda1e285e140167b4b56
Author: gunan <gunan@google.com>
Date:   Fri Nov 3 22:13:40 2017 -0700

    Disable flaky prefetching_ops_test (#14239)
    
    * Disable flaky prefetching_ops_test
    
    * Remove duplicated com_google_absl workspace object (#14238) (#14240)

commit 88917888f509e3e61ffe632534476e7b09d3326a
Author: Andrew Harp <andrewharp@google.com>
Date:   Thu Nov 2 15:22:08 2017 -0700

    Merge changes from github.
    END_PUBLIC
    
    ---
    Commit d77b99809 authored by Yong Tang<yong.tang.github@outlook.com>
    Committed by gunan<gunan@google.com>:
    Update docs for `begin_params_axis` (#13979)
    
    This fix fixes the issue raised in 13975 where `begin_shift_axis`
    is actually `begin_params_axis`.
    
    This fix fixes 13975.
    
    Signed-off-by: Yong Tang <yong.tang.github@outlook.com>
    ---
    Commit e6a242b4e authored by Yifei Feng<fengyifei2026@gmail.com>
    Committed by gunan<gunan@google.com>:
    Add GCC/Compiler version to issue template. (#14113)
    
    As suggested in #13930
    ---
    Commit 7ece1c0b8 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Moving model_pruning library to tf.contrib
    
    PiperOrigin-RevId: 174214419
    
    ---
    Commit 693325c83 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Log the full traceback in Coordinator.request_stop if it's available
    
    PiperOrigin-RevId: 174213375
    
    ---
    Commit 6c4a769ab authored by Mark Daoust<markdaoust@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Delete duplicate label_image script.
    
    The version in examples/label_image is more complete (with image size and normalization options), so it can be used with `mobilenets`.
    
    Also: removed bazel from main tutorial instructions.
    PiperOrigin-RevId: 174212674
    
    ---
    Commit 7a5b81c29 authored by Yao Zhang<yaozhang@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Materialize shape for ShapeN.
    
    PiperOrigin-RevId: 174211500
    
    ---
    Commit 78041b1dd authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    internal change
    
    PiperOrigin-RevId: 174211190
    
    ---
    Commit 2118fcf62 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    BUILD cleanup in contrib/tensor_forest/...
    
    PiperOrigin-RevId: 174201884
    
    ---
    Commit 6849ef8f6 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    internal change.
    
    PiperOrigin-RevId: 174197506
    
    ---
    Commit 37370d98f authored by resec<resec0109@gmail.com>
    Committed by gunan<gunan@google.com>:
    Support more Android arch in Makefile build (#12806)
    
    * Support more Android arch in Makefile build
    
    * update Makefile
    
    * fix MARCH_OPTION
    
    * persist multiple architectures across builds
    
    * persist multiple architectures across builds
    
    * persist multiple architectures across builds
    
    * persistence bug fix
    
    * persistence bug fix
    
    * persistence bug fix
    
    * add -latomic to linker flags for benchmark
    
    * Change ANDROID_OS_ARCH to ANDROID_HOST_OS_ARCH
    
    ---
    Commit c40d54173 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Exposes recall_at_top_k under tf.metrics.
    
    PiperOrigin-RevId: 174189641
    
    ---
    Commit 18bf5b2d9 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Return a classifier score of the same type as the logits.
    
    PiperOrigin-RevId: 174184871
    
    ---
    Commit 9da02be11 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Make 'collections' a list, as documented and expected by downstream custom getters.
    
    PiperOrigin-RevId: 174184867
    
    ---
    Commit 16b0bb095 authored by loki der quaeler<quaeler@users.noreply.github.com>
    Committed by gunan<gunan@google.com>:
    Adding a feed for boolean tensors to TensorFlowInferenceInterface (#14059)
    
    * Sublime Text index-ignore file (a copy of .gitignore)
    
    * Adding the requested implementation to TensorFlowInferenceInterface
    
    * Removing Sublime Text .ignore file from remote repository
    
    * indeed there was
    
    ---
    Commit fa9d8aab4 authored by Urs K?ster<ursk@users.noreply.github.com>
    Committed by gunan<gunan@google.com>:
    Add  'log_progress' argument for tf.estimator.Estimator's evaluate function (#13695)
    
    * Add  argument for tf.estimator.Estimator's evaluate function
    
    * add log_progress argument to ._convert_eval_steps_to_hooks for TPU estimator
    
    * log only every 10th step if more than 100 iterations in _StopAfterNEvalsHook
    
    * ensure last step is logged and aim for 10 outputs total
    
    ---
    Commit 07a91dac5 authored by nolan liu<nolan.liou@gmail.com>
    Committed by gunan<gunan@google.com>:
    make `gather` cpu kernel to be multiple threads. (#12246)
    
    * Change the gather op to multi-thread.
    
    * Modify the gather kernel of xla compiler in order to be compatible with multi-threads cpu kernel.
    
    * Add prefetch logic to gather op kernel.
    
    * Update the indention of gather op kernel code.
    
    * Update the gather kernel code for multiple thread.
    
    * Remove reference to ealier version of code in gather functor.
    
    * Change the framework_lite dep of gather_functor to framework.
    
    * Remove mutex guard in gather functor.
    
    ---
    Commit a956486be authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove an erronous __attribute__((...)) tag.
    
    There is no __attribute__((guarded)) or __attribute__((pt_guarded)) attribute in Clang, and if we turn on warnings for unknown attributes (which are currently turned off), this causes build failures.  This means that, when the warnings are turned off, this is simply a no-op.
    
    PiperOrigin-RevId: 174134252
    
    ---
    Commit 27412f3b6 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add compiler/tf2xla/sharding_util.h with utilities for getting the core device from
    a Node.
    
    PiperOrigin-RevId: 174133602
    
    ---
    Commit ab4349a26 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    BUILD cleanup in selected packages in contrib/...
    
    PiperOrigin-RevId: 174115744
    
    ---
    Commit 4aa90bfd3 authored by Justin Lebar<jlebar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Add HLO matchers that check parameter numbers and GTE indices.
    
    This lets you do
    
      EXPECT_THAT(foo, op::Parameter(42));
    
    and
    
      EXPECT_THAT(bar, op::GetTupleElement(baz, 8));
    
    PiperOrigin-RevId: 174113597
    
    ---
    Commit f97e7c69b authored by Olivia Nordquist<nolivia@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    partially exposing the _set_attr and _get_attr method in python
    
    PiperOrigin-RevId: 174113043
    
    ---
    Commit 8e732a312 authored by Artem Belevich<tra@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Prefer cubin over PTX when we launch CUDA kernels.
    
    Native GPU code, if we have it, should be preferred over JIT compilation of PTX.
    
    PiperOrigin-RevId: 174110646
    
    ---
    Commit 2ccf3aba4 authored by Eugene Brevdo<ebrevdo@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Permanently remove several modules from tf.contrib.bayesflow.
    
    These modules are very infrequently used and will not be developed moving forward.
    Removing this code paves the way for remaining modules in tf.contrib.bayesflow
    to move to their own repo.
    
    PiperOrigin-RevId: 174110067
    
    ---
    Commit ef7052fbd authored by Andrew Selle<aselle@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Open source build support for TensorFlow Lite Toco.
    
    - Handle proto incompatibilities
    - Mixed bazel compatibility fixes.
    - Add link to absl libraries
    
    PiperOrigin-RevId: 174103981
    
    ---
    Commit d6a9cd40c authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix "hides overloaded virtual function" error in default/gpu_tracer.cc when compiled with -Werror,-Woverloaded-virtual.
    
    PiperOrigin-RevId: 174101519
    
    ---
    Commit b242a7988 authored by Mustafa Ispir<ispir@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Set metric variable initializers as lambda.
    
    PiperOrigin-RevId: 174100686
    
    ---
    Commit 57b1c5621 authored by Alan Yee<alyee@ucsd.edu>
    Committed by drpngx<drpngx@users.noreply.github.com>:
    Add deprecation notes (#12614)
    
    * Update lookup_ops.py
    
    Minor comment fix
    
    * Update metrics_ops.py
    
    Add deprecated notes
    
    * Update tensor_util.py
    
    Update deprecated note on remove_squeezable_dimensions
    
    * Update metric_ops.py
    
    Add deprecated notes
    
    ---
    Commit 453dd5848 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    K-FAC: Support for tf.AUTO_REUSE when re-using registrations. Multi-tower support for FullFB, NaiveDiagonalFB. Removal of LayerCollection.generic_registrations.
    
    PiperOrigin-RevId: 174092003
    
    ---
    Commit 0a7be5a2f authored by Sanjoy Das<sanjoy@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Rename (Add|Get)ProfileResult to something more specific; NFC
    
    PiperOrigin-RevId: 174084570
    
    ---
    Commit f1916f8f6 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    - Remove slice hack to properly initialize missing entries in weight matrices
      - Add real support for EmbeddingColumns / input_layer()
    - Fix warmstarting for non-PartitionedVariables
    
    PiperOrigin-RevId: 174083777
    
    ---
    Commit f567ddf87 authored by Alex Sergeev<alexander.sergeev@live.com>
    Committed by drpngx<drpngx@users.noreply.github.com>:
    Add tf.sysconfig.get_compile_flags() & tf.sysconfig.get_link_flags() for custom operators (#13496)
    
    * Add flags for custom op compilation
    
    * Move ABI logic into version_info.cc
    
    * Add #include <string> to be able to read _GLIBCXX_USE_CXX11_ABI value.
    
    * Make flags to be lists
    
    * Add _flag to cxx11_abi
    
    * Address review comment.
    
    * Move CXX import to the top level.
    
    * Add goldens update
    
    ---
    Commit 0cddb9bca authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Go: Update generated wrapper functions for TensorFlow ops.
    
    PiperOrigin-RevId: 174074499
    
    ---
    Commit ba8c38959 authored by Neal Wu<wun@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Change wide_deep.md and wide.md to reference the TensorFlow official models version rather than the tf.contrib.learn version
    
    PiperOrigin-RevId: 174074112
    
    ---
    Commit f3006422c authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Make `RunTrainOpsHook` public.
    
    PiperOrigin-RevId: 174073925
    
    ---
    Commit 21dafd6d2 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update ops-related pbtxt files.
    
    PiperOrigin-RevId: 174073569
    
    ---
    Commit 66fc99a3b authored by Artem Belevich<tra@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA:GPU] Short-circuit compilation of no-op IR -> empty PTX.
    
    There's no point constructing/running LLVM pipeline if we know that we have no
    kernels in the IR we've generated for the given HLO op. This is often the case
    for ops we can optimize away at the HLO level.
    
    PiperOrigin-RevId: 174072540
    
    ---
    Commit c911d0f16 authored by Dhananjay Nakrani<dhananjayn@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Switch over python calls to RandomPoissonV2.
    
    Part 2 of Support int32/64 in tf.random_poisson().
    
    PiperOrigin-RevId: 174071745
    
    ---
    Commit b5d5326c6 authored by Justin Lebar<jlebar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA:GPU] Fix race condition in gpu_compiler.cc.
    
    We were racing on libdevice_dir_.
    
    PiperOrigin-RevId: 174070334
    
    ---
    Commit 35939d2d3 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [TF:XLA] Fix string to HLO opcode conversion for atan2, complex, imag and real.
    
    Make sure that we can't forget opcodes by auto-generating the conversion
    functions.
    
    Add auto-generated functions to test HLOs for properties (like IsVariadic,
    IsComparison, etc.)
    
    This makes changing HLO more robust and easier because there are fewer places
    to update when adding or removing an HLO opcode.
    
    Also:
    * Fix IsElementwiseBinary for atan2.
    * Add a unit test for HLO opcode helpers.
    * Express IsElementwiseBinary in terms of IsElementwise() and operand_count()
      to avoid having to keep the two in sync manually.
    PiperOrigin-RevId: 174069664
    
    ---
    Commit 3b845c80d authored by Allen Lavoie<allenl@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Disable resnet50_graph_test under TSAN due to timeouts.
    
    PiperOrigin-RevId: 174066937
    
    ---
    Commit 8a09bbc4a authored by Igor Ganichev<iga@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add TFE_Py_TensorShapeSlice function
    
    TFE_Py_TensorShapeSlice takes a list of EagerTensors and returns a list
    of their i'th dimensions. This utility is fairly niche but it is simple
    and reduces SPINN training time by over 12%.
    
    PiperOrigin-RevId: 174065044
    
    ---
    Commit 585432cc2 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Refactor ArgMin / ArgMax index ops as XlaHelpers.
    
    PiperOrigin-RevId: 174061370
    
    ---
    Commit e6faa845c authored by Michael Case<mikecase@chromium.org>
    Committed by gunan<gunan@google.com>:
    Merge v1.4-rc1 back into master branch. (#13960)
    
    * Update RELEASE NOTES for TensorFlow 1.4
    
    * Update the version strings for TF 1.4-rc0.
    
    * Update version strings in POM files missed by update script.
    
    * Pin TensorBoard 0.4 to TensorFlow 1.4
    
    * Fixing the name of the disabled test. (#13592)
    
    * Revert "Implementing ghost batch norm as defined in https://arxiv.org/pdf/1705.08741."
    
    This reverts commit 125f7afa4a483855dc75791445d2dea64587876a.
    
    * Disable iterator_ops_test on Windows for 1.4 release (#13609)
    
    * Disable failing Windows tests for r1.4 release.
    
    testRemoteIteratorUsingRemoteCallOpDirectSessionGPUCPU test is failing
    with "TypeError: only integer scalar arrays can be converted to a scalar
    index" on the Windows GPU Release bot. Disabling test.
    
    * Fix typo.
    
    * Also disalbe iterator_ops_test from contrib/.
    
    * Add contributing authors to 1.4 Release notes.
    
    Thanks!
    
    * Fixes to authors.
    
    Removed duplicate and removed googler from contributing author list.
    
    * Fixes and additions to release notes.
    
    Added line about Keras moving into core.
    Added line about CUDA/cuDNN versions.
    Added line about custom ops.
    
    * Fixing a master regression (#13562)
    
    * Update version strings for 1.4.0rc1
    
    * Remaining cherry-picks for 1.4.0rc1 (#13700)
    
    * Java: Tweak to address some Javadoc errors.
    
    PiperOrigin-RevId: 171987329
    
    * Fix S3 BUILD not including files explicitly.
    
    This causes remote builds to fail since they AWS headers were missing.
    
    PiperOrigin-RevId: 171718021
    
    * Add missing default config setting in aws.BUILD (#13662)
    
    * Remove setting AWS logging for S3 file system.
    
    Was causing issues with tests. Can repro test failures on Macs by running...
    
    bazel test --config=s3  --cache_test_results=no --test_output=streamed
    //tensorflow/core/kernels:control_flow_ops_test
    
    Possible reason for error is symbol collision with AWS logging code.
    One possible solution would be to split out another shared object for
    the S3 filesystem op which does not link in libtensorflow_framework.so.
    This is done, for example, by libforestprotos.so in
    tensorflow/contrib/tensor_forest/BUILD
    
    PiperOrigin-RevId: 171246381
    
    * Relanding change to add config to enable S3 file system support.
    
    Pass --config=s3 argument to Bazel to build with S3 file system support.
    Change was originally rolled back due to a failure it caused in
    //tensorflow/core/kernels:control_flow_ops_test on Macs which is now fixed.
    
    PiperOrigin-RevId: 171579378
    
    * Update release notes about Amazon S3 file system support being default.
    
    * Add documentation to sloppy_interleave function
    
    PiperOrigin-RevId: 171303413
    
    * Add `cudnn_rnn_ops` to the Windows build
    
    Fixes #13696.
    
    * Creating a patch for the wrong links that still point to dev. (#13753)
    
    * tfdbg release notes in r1.4
    
    * Fix ambiguous type comparison in s3_crypto.cc (#13758)
    
    tensorflow/contrib/s3/s3_crypto.cc(74): error C2666:
    'std::fpos<_Mbstatet>::operator ==': 3 overloads have similar conversions
    could be 'bool std::fpos<_Mbstatet>::operator ==(std::streamoff) const'
    or 'bool std::fpos<_Mbstatet>::operator ==(const std::fpos<_Mbstatet> &)
    We were seeing this compilation error on Windows builds.
    
    * Set estimator run_config default random seed to None. This will make it aligned with other parts of the TF. Many users are not aware of impact of non-random seed. For example it may lead to train only on a small fraction of training data due to preemptions.
    We're changing default behavior since we consider it as a bug fix.
    
    PiperOrigin-RevId: 172519268
    
    * Move global_step_read dependency to model_fn instead of input_fn.
    
    PiperOrigin-RevId: 172366972
    
    * [tf.data] Fix broken implementation of `Dataset.from_generator()` on Windows.
    
    Due to a mix-up between NumPy's default array element type for a Python `int` on Windows and Linux, a tf.py_func() in `Dataset.from_generator()` would appear to return the wrong type on Windows (np.int32 instead of np.int64).
    
    All code using `Dataset.from_generator()` on Windows was previously broken. This change fixes both `tf.data.Dataset.from_generator()` and `tf.contrib.data.Dataset.from_generator()`. It also enables test coverage for this method on Windows, which should prevent future breakage.
    
    PiperOrigin-RevId: 172346533
    
    * Update RELEASE notes for change to run_config random seed.
    
    * Disable probable timeout flake on Ubuntu machines.
    
    PiperOrigin-RevId: 172408922
    
    * Disabling failing contrib tests.
    
    * Disable S3 on Windows due to build issues.
    
    * Update serving_input_fn argument name to serving_input_receiver_fn
    
    PiperOrigin-RevId: 172787460
    
    * Update the C++ API guide (#13858)
    
    - Adds the standard warning at the top that people may want the master branch
    - Includes a documentation fix for 1.4 (cc_binary -> tf_cc_binary to avoid
      undefined symbols).
    
    * Add known Dataset issue to RELEASE.md. (#13870)
    
    Adding info about issue using Unicode strings with Datasets.
    
    * Fixes to merge.
    
    * Fix spelling of tensorflow in install_sources.md
    
    ---
    Commit 6eac524ef authored by cglewis<clewis@iqt.org>
    Committed by cglewis<clewis@iqt.org>:
    Use 'LABEL maintainer=' in Dockerfile
    
    * Use 'LABEL maintainer=' in Dockerfile
    
    This fix is a follow up of 13961 to replace `MAINTAINER`
    with `LABEL maintainer=` in Dockerfile. The keyword
    `MAINTAINER` has long been deprecated and is replaced by `LABEL`,
    which is much more flexible and is easily searchable through `docker
    inspect`.
    
    This fix replaces remaining `MAINTAINER` with `LABEL`.
    
    Signed-off-by: Charlie Lewis <clewis@iqt.org>
    
    * Additional `MAITAINER` -> `LABEL`
    
    Signed-off-by: Charlie Lewis <clewis@iqt.org>
    
    ---
    Commit 469970260 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Modify quantization to support add ops that occur after Conv2D
    
    PiperOrigin-RevId: 174058697
    
    ---
    Commit 938643b56 authored by Amit Patankar<amitpatankar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Replace the docker check with an OS check.
    
    PiperOrigin-RevId: 174057778
    
    ---
    Commit 5f1a66ccb authored by Igor Saprykin<isaprykin@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add more recovery functionality to MonitoredSession.run_step_fn.
    
    Current implemention wouldn't recover from one of `_PREEMPTION_ERRORS` during a fetch through the raw session that is made available to the step_fn.
    
    The changelist presents a way to map the desired functionality to the hiearchy of _MonitoredSession > (possibly!) _RecoverableSession > _CoordinatedSession > _HookedSession.
    
    PiperOrigin-RevId: 174053865
    
    ---
    Commit 9a2b0983a authored by Yifei Feng<fengyifei2026@gmail.com>
    Committed by gunan<gunan@google.com>:
    Add apt-key for ubuntu keyserver (#14114)
    
    ---
    Commit 479ee24a0 authored by Asim Shankar<asimshankar@gmail.com>
    Committed by gunan<gunan@google.com>:
    eager: Update broken link in README (#14136)
    
    ---
    Commit ad7bb2b9e authored by Asim Shankar<asimshankar@gmail.com>
    Committed by gunan<gunan@google.com>:
    eager: Update broken links in guide.md (#14135)
    
    ---
    Commit c37ebf0d5 authored by Thomas Deegan<tadeegan@gmail.com>
    Committed by gunan<gunan@google.com>:
    Resolve //tensorflow relative to tensorflow repo so that tfcompile.bzl can be correctly loaded from another Bazel project (#14103)
    
    ---
    Commit b2ff3ad96 authored by Mustafa Ispir<ispir@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Added GraphKeys.METRIC_VARIABLE collection. Added all variables under tf.metrics and tf.contrib.metrics into this collection. This will enable replication of model for evaluation. When we replicate a metric in multiple towers (let's say for each qpu we replicate same model/metric), we cannot reduce the output of metrics. On the other hand internal state (local-variables) of those metrics can reducible via sum.
    
    PiperOrigin-RevId: 174051559
    
    ---
    Commit 98dad195d authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Adds sigmoid to the list of operations that can be recomputed.
    
    PiperOrigin-RevId: 174047825
    
    ---
    Commit 123749fb1 authored by Yuan (Terry) Tang<terrytangyuan@users.noreply.github.com>
    Committed by Martin Wicke<martin.wicke@gmail.com>:
    Remove Scikit Flow link and description (#14036)
    
    ---
    Commit 0d118e4dc authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Implemented tensorflow::port::NominalCPUFrequency()
    
    PiperOrigin-RevId: 174041196
    
    ---
    Commit 648993e82 authored by Andrew Harp<andrew.harp@gmail.com>
    Committed by Andrew Harp<andrew.harp@gmail.com>:
    delete extraneous file
    
    ---
    Commit c2ff8a5ab authored by Mark Daoust<markdaoust@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Delete backticks
    
    PiperOrigin-RevId: 174030921
    
    ---
    Commit 333ba224d authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Dependency information for Skylark macros
    
    PiperOrigin-RevId: 174023371
    
    ---
    Commit 9ee0cecec authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Shrink the model size for unit test.
    
    PiperOrigin-RevId: 174001263
    
    ---
    Commit c44f67a7e authored by Yifei Feng<fengyifei2026@gmail.com>
    Committed by gunan<gunan@google.com>:
    Disable clang_format check. (#14115)
    
    Different clang_format version can cause different formats with the same style option. This check might be too strict. Disable for now.
    ---
    Commit a6a618843 authored by Asim Shankar<ashankar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    eager: Documentation and example models.
    
    - Updated README
    - A preliminary "User's Guide"
    - A few example models, some with benchmarks
    
    PiperOrigin-RevId: 173996303
    
    ---
    Commit de38e5dff authored by ???<dev@goodow.com>
    Committed by GitHub<noreply@github.com>:
    fix broken link
    ---
    Commit cd81bc8e0 authored by Rohan Jain<rohanj@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Adds a PrefetchWithFn op to contrib/data. Alongwith the FunctionBufferingResource, this can be used to prefetch and fill up a buffer by making repeated function calls.
    
    Also fixes a TODO in the ProcessFLR implementation to respect alloc_attrs for Rendezvous calls.
    
    PiperOrigin-RevId: 173990680
    
    ---
    Commit 17695212c authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [TF:XLA] Don't pass HLO operands in HandleAtan2.
    
    This makes it consistent with the rest of the Visit methods where we only
    pass the HLO itself.
    
    PiperOrigin-RevId: 173990595
    
    ---
    Commit 113be5746 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    A few profiler improvements
    1. Track the full allocation history of each tensor, visualized in timeline.
    2. Better ProfileContext for tracing step selection.
    3. Small bug fix.
    
    PiperOrigin-RevId: 173988293
    
    ---
    Commit 6d1263cdf authored by Justin Lebar<jlebar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Remove dead opcode kIndex.
    
    PiperOrigin-RevId: 173987428
    
    ---
    Commit a4b5356e4 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [TF:XLA] Reduce boilerplate code in HLO visitors.
    
    Only pass the HloInstruction into visitor methods. This makes changing
    instructions and visitors easier.
    
    PiperOrigin-RevId: 173983398
    
    ---
    Commit d9cee35b6 authored by LevineHuang<levinehuang@163.com>
    Committed by Benoit Steiner<benoitsteiner@users.noreply.github.com>:
    Typo fix in file 'fully_connected_feed.py' (#14033)
    
    * Typo fix in file 'fully_connected_feed.py'
    
    * Minor edits to coding style
    
    ---
    Commit bb7ed1c88 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    K-FAC: Multi-tower ConvNet example.
    
    PiperOrigin-RevId: 173982527
    
    ---
    Commit 2ba529856 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Initial add of docs for Tensorflow on Mobile.
    
    PiperOrigin-RevId: 173980290
    
    ---
    Commit 187453d61 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Change momentum optimizer to allow callable learning_rate and momentum
    parameters. This can be useful for implementing learninge rate decay.
    
    PiperOrigin-RevId: 173975321
    
    ---
    Commit 542b323e5 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Register quint16/qint16 for GatherOp.
    
    PiperOrigin-RevId: 173974904
    
    ---
    Commit 309e34061 authored by Allen Lavoie<allenl@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Avoid uncollectable cycles with a separate deleter object for resources.
    
    PiperOrigin-RevId: 173972515
    
    ---
    Commit 73fdaf0b5 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Summary-writing support for Evaluators.
    
    PiperOrigin-RevId: 173971621
    
    ---
    Commit 72be26dc8 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [tf.data] Iterator Save and Restore for Dataset.from_tensors(..), Dataset.from_tensor_slices(..) and dataset.concatenate(..).
    
    PiperOrigin-RevId: 173971324
    
    ---
    Commit 09f62ab38 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Speeding up the case for sparse float columns that have only 1 value.
    
    PiperOrigin-RevId: 173971121
    
    ---
    Commit c315cf1ee authored by Shanqing Cai<cais@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Internal-only changes
    
    PiperOrigin-RevId: 173968246
    
    ---
    Commit 293ba20be authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Make learning_rate_decay.piecewise_constant work in Eager mode.
    
    PiperOrigin-RevId: 173967531
    
    ---
    Commit 0e6abfcda authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    K-FAC: Example for multi-tower support for MNIST MLP.
    
    PiperOrigin-RevId: 173967370
    
    ---
    Commit b46c196e9 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    * Add graph rewrite rule that removes repeated application of scalar unary ops that are involutions (their own inverse).
    * Update rewrite rule for Transpose to also handle ConjugateTranspose.
    
    PiperOrigin-RevId: 173967184
    
    ---
    Commit ff5c276ad authored by Stephan Hoyer<shoyer@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Longer README for tf.contrib.labeled_tensor
    
    PiperOrigin-RevId: 173966577
    
    ---
    Commit 558f146e1 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Go: Update generated wrapper functions for TensorFlow ops.
    
    PiperOrigin-RevId: 173966068
    
    ---
    Commit f9a673cb7 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    In the overloaded HloVerifier::CheckShape, include the failing instruction in
    the error message.
    
    PiperOrigin-RevId: 173965368
    
    ---
    Commit 302ab0ff7 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update ops-related pbtxt files.
    
    PiperOrigin-RevId: 173965174
    
    ---
    Commit 89120eb68 authored by Alexandre Passos<apassos@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    scatter_update for resource variables
    
    PiperOrigin-RevId: 173963715
    
    ---
    Commit 8f7903b4c authored by Justine Tunney<jart@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Introduce SQLite SummaryWriterInterface
    
    This change allows tensors to be written from the graph, as they flow, directly
    to the database. Many of the important details haven't been implemented yet.
    
    This has been done with the new summary interface that's going to be used with
    eager.
    
    PiperOrigin-RevId: 173961448
    
    ---
    Commit 9aaa49a4e authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Avoid using variables as booleans (similarly to tensors).
    
    PiperOrigin-RevId: 173956625
    
    ---
    Commit a60cd87c4 authored by Alexandre Passos<apassos@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    No need for unique variable names in eager.
    
    PiperOrigin-RevId: 173954805
    
    ---
    Commit f17f389d8 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add a workaround in the Grappler arithmetic optimizer for the "Add" op not being marked commutative. This will allow Grappler to dedup nodes Add(x,y) and Add(y,x).
    
    PiperOrigin-RevId: 173950586
    
    ---
    Commit e40eb810a authored by Shanqing Cai<cais@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    TFE: Add errors for classic tf.summary.* ops and FileWriter
    
    PiperOrigin-RevId: 173949980
    
    ---
    Commit 25620825b authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Dataset: Adds eager warnings to make_initializable_iterator and make_one_shot_iterator.
    
    PiperOrigin-RevId: 173949737
    
    ---
    Commit 1d6dae88e authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add check to tf.device when called with a function in eager mode.
    
    PiperOrigin-RevId: 173947845
    
    ---
    Commit 3639aa7ff authored by Alexandre Passos<apassos@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Always run iterator deleter in eager mode for safety.
    
    PiperOrigin-RevId: 173947019
    
    ---
    Commit efcbf6e34 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Supported in this CL:
      * Attaching sharding descriptors to HLO ops
      * Partitioning the HLO graph into per-device computations based on those sharding descriptors.
      * All operator support for device placement and ops replicated on all devices.
      * Elementwise op support for tiled shardings.
      * 2D Convolution support for tiled shardings (no stride or dilation support).
    
    PiperOrigin-RevId: 173946036
    
    ---
    Commit 682a6ed64 authored by Jon Shlens<shlens@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update the documentation for sample_distorted_bounding_box
    
    PiperOrigin-RevId: 173943029
    
    ---
    Commit 4f6e6ea4c authored by Sanjoy Das<sanjoy@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix typo in comment; NFC
    
    PiperOrigin-RevId: 173942305
    
    ---
    Commit 07584221f authored by Anna R<annarev@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Set visibility to HIDDEN for hidden Python ops in ApiDef.
    
    PiperOrigin-RevId: 173942001
    
    ---
    Commit 35cc8bb0a authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    K-FAC: Multiple minibatches support for LayerCollection.register_conv2d()
    
    PiperOrigin-RevId: 173941279
    
    ---
    Commit 32f3c3a43 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Go: Update generated wrapper functions for TensorFlow ops.
    
    PiperOrigin-RevId: 173933228
    
    ---
    Commit 8cc7b47a4 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update ops-related pbtxt files.
    
    PiperOrigin-RevId: 173932574
    
    ---
    Commit b9337de5b authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    K-FAC: Multi-tower support for ConvKFCBasicFB
    
    PiperOrigin-RevId: 173932013
    
    ---
    Commit 1b6b7e208 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add registration for op AddV2, which is identical to Add, except that it does does not implement string concatenation. This allows us to mark AddV2 is_commutative and is_aggregate, which will allow optimizers more freedom.
    
    PiperOrigin-RevId: 173931848
    
    ---
    Commit 629e6d0c1 authored by Joshua V. Dillon<jvdillon@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Bugfix: Make `tf.contrib.distributions.Independent` tests not flaky.
    
    PiperOrigin-RevId: 173921378
    
    ---
    Commit 4b63f47d9 authored by Justin Lebar<jlebar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA:CPU] Don't crash if someone tries to do dot(X, X) or dot(X, X^T).
    
    PiperOrigin-RevId: 173919310
    
    ---
    Commit 89582677c authored by Alexandre Passos<apassos@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    EagerVariableStore, for compatibility with functional layers.
    
    PiperOrigin-RevId: 173915730
    
    ---
    Commit cef680b53 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Enable shape inference on functions in grappler.
    
    PiperOrigin-RevId: 173914941
    
    ---
    Commit e8ac0b48f authored by Akshay Agrawal<akshayka@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Report a nicer error message when differentiating a function
    that returns None in eager
    
    PiperOrigin-RevId: 173914883
    
    ---
    Commit 85f8d9240 authored by Eugene Brevdo<ebrevdo@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [tensorflow training input] If SparseTensors are used in batch* ops, ensure restoration.
    
    This forces the ST restore op to be called if any tensors are accessed at the output
    of the batch, thus fixing a memory leak.
    
    Solution suggested by Derek Murray.
    
    Fixes #13999.
    
    PiperOrigin-RevId: 173904309
    
    ---
    Commit 7fd261602 authored by Skye Wanderman-Milne<skyewm@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add TF_GraphVersions() to C API and use in Graph.graph_def_versions()
    
    PiperOrigin-RevId: 173902666
    
    ---
    Commit 4723f8f6e authored by RJ Ryan<rjryan@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Support SymbolicGradient for functions with non-trainable arguments.
    
    The non-trainable arguments end up with None as their incoming out_grad, which is not a valid input to SymbolicGradient (inputs have to be convertible to Tensor, and None isn't).
    
    PiperOrigin-RevId: 173901727
    
    ---
    Commit 494672475 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Added "NOTE: You may only install TensorFlow on 64-bit machines" to all the
    TensorFlow Install guides.
    
    PiperOrigin-RevId: 173899394
    
    ---
    Commit b73743e3a authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove accidental disablation of (already manual) tests.
    
    PiperOrigin-RevId: 173898910
    
    ---
    Commit ce0238198 authored by Skye Wanderman-Milne<skyewm@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add ability to fetch return nodes and unused input mappings from C API GraphDef import
    
    This change introduces yet another ImportGraphDef function to the C
    API (TF_GraphImportGraphDefWithResults), but this one has extensible
    return values so we shouldn't have to add more in the future.
    
    This change also modifies the ImportGraphDef C interface to manage all
    string data for the user.
    
    PiperOrigin-RevId: 173894710
    
    ---
    Commit ef4490f63 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    BUILD cleanup in contrib/...
    
    PiperOrigin-RevId: 173889798
    
    ---
    Commit 2e54fd6de authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Adds eager execution compatibility note in Readers, Queues, and QueueRunner.
    
    Raises a RuntimeError in base classes for QueueBase, ReaderBase, and QueueRunner.
    
    PiperOrigin-RevId: 173888425
    
    ---
    Commit 32ab30cb0 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fixes typo in compatibility.
    
    PiperOrigin-RevId: 173887031
    
    ---
    Commit 325c8e5ef authored by Justine Tunney<jart@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Improve C++ SQLite veneer
    
    - Use shared_ptr for Sqlite
    - Don't need unique_ptr on SqliteStatement
    - Don't need db namespace
    - Include SQL in error statuses
    
    PiperOrigin-RevId: 173802267
    
    ---
    Commit 0eba15fe6 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Adds eager compatability message for PartitionedVariable.
    
    PiperOrigin-RevId: 173772851
    
    ---
    Commit e7645b629 authored by Justin Lebar<jlebar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] DOT dumper: Handle fusion nodes nested inside other nodes (e.g. map).
    
    PiperOrigin-RevId: 173752314
    
    ---
    Commit 8ec7540e0 authored by Shanqing Cai<cais@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    TFE: Fix pip test for tf.contrib.summary
    
    Fixes test failure in tensorflow/contrib/summary:summary_ops_test, e.g.,
    http://ci.tensorflow.org/job/tensorflow-cl-cpu-python3-pip/10933/console
    
    PiperOrigin-RevId: 173749502
    
    ---
    Commit c16797ec3 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Adds eager execution compatibility note in Estimators.
    
    Raises a RuntimeError in Estimator base class.
    
    PiperOrigin-RevId: 173744765
    
    ---
    Commit e8a62a30b authored by ???<dev@goodow.com>
    Committed by GitHub<noreply@github.com>:
    Fix minor typo
    ---
    Commit 36696ad58 authored by ???<dev@goodow.com>
    Committed by Larry Tin<dev@goodow.com>:
    tf.zeros doesn't accept a tensor argument
    
    ValueError: Shape must be rank 1 but is rank 0 for 'zeros_2' (op: 'Fill') with input shapes: [], [].
    
    ---
    Commit 9f4b12bb5 authored by Justin Lebar<jlebar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] DOT dumper: Print constant shape when we elide the constant's value.
    
    For example, instead of "operand 1 = %constant.42", we now print
    "operand 1 = %constant.42 (f32[100])".
    
    PiperOrigin-RevId: 173741373
    
    ---
    Commit 45c5118f0 authored by Mark Heffernan<meheff@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    When creating an HloModule from an HloProto construct the HloModuleConfig
    with a correct ProgramShape which matches the shapes of the entry computation.
    Previously the module config had a bogus or default constructed ProgramShape.
    
    PiperOrigin-RevId: 173741104
    
    ---
    Commit 09a89ae57 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add `tf.contrib.distributions.bijectors.Reshape`.
    
    PiperOrigin-RevId: 173740491
    
    ---
    Commit 729db035e authored by Mark Daoust<markdaoust@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Allow compatibility notes in class, property and module doc-strings
    
    PiperOrigin-RevId: 173739674
    
    ---
    Commit ca56fa49a authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Go: Update generated wrapper functions for TensorFlow ops.
    
    PiperOrigin-RevId: 173739110
    
    ---
    Commit 48df7c972 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update ops-related pbtxt files.
    
    PiperOrigin-RevId: 173738765
    
    ---
    Commit fb2c84cb2 authored by Jeremy Lau<lauj@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Internal change
    
    PiperOrigin-RevId: 173738655
    
    ---
    Commit 245a5c171 authored by Akshay Agrawal<akshayka@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Make functional_ops compatible with eager exeuction by ignoring
    caching devices when in eager mode
    
    PiperOrigin-RevId: 173737949
    
    ---
    Commit d1c59bd37 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add tf.quantize op, which is the same as tf.quantize_v2.
    
    PiperOrigin-RevId: 173735986
    
    ---
    Commit 3ff9c8d2a authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix typos in Linear Model Tutorial samples
    
    1. test_file_name is undefined (should be test_file.name)
    2. train_file_name is undefined (should be train_file.name)
    
    PiperOrigin-RevId: 173733442
    
    ---
    Commit abbab2430 authored by Michael Case<mikecase@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add bazel mirror links for newly added workspace dependencies.
    
    PiperOrigin-RevId: 173732606
    
    ---
    Commit 46a577feb authored by Derek Murray<mrry@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [CMake] Generate audio_ops wrappers in the CMake build.
    
    Fixes #14004.
    
    PiperOrigin-RevId: 173732397
    
    ---
    Commit 7cb7f88c5 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add count metric, a helper function that computes the total number or total weight of examples.
    
    PiperOrigin-RevId: 173731046
    
    ---
    Commit e1d7615eb authored by Alexandre Passos<apassos@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix issue with gradients of functions which return multiple values.
    
    PiperOrigin-RevId: 173730922
    
    ---
    Commit 80374a7b4 authored by Joshua V. Dillon<jvdillon@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Breaking change: Rename `tf.contrib.distributions.Independent` parameter from
    `reduce_batch_ndims` to `reinterpreted_batch_ndims`. Also change default;
    `reinterpreted_batch_ndims` default has semantics of `tf.layers.flatten`, i.e.,
    all batch dimensions except the first (batch axis 0) are interpretted as being
    part of the event.
    
    PiperOrigin-RevId: 173729585
    
    ---
    Commit 5426a3c93 authored by Allen Lavoie<allenl@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add tfe.get_optimizer_variables for fetching a list of variables which an
    optimizer has created. Useful for saving them if executing eagerly.
    
    PiperOrigin-RevId: 173726859
    
    ---
    Commit 02f55400f authored by Alexandre Passos<apassos@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    custom_gradient functions should be able to return their inputs
    
    PiperOrigin-RevId: 173723462
    
    ---
    Commit 78bac7290 authored by Shanqing Cai<cais@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    TFE: Add compatbility doc string to add_to_collection() and friends
    
    PiperOrigin-RevId: 173716912
    
    ---
    Commit 9bf00c371 authored by Alexandre Passos<apassos@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Shorter import for tfe.
    
    PiperOrigin-RevId: 173716375
    
    ---
    Commit 0bc432a44 authored by Shanqing Cai<cais@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    TFE: Add compatibility errors and doc strings to queues, input pipelines and Supervisor
    
    PiperOrigin-RevId: 173712330
    
    ---
    Commit e9af1af4f authored by Amit Patankar<amitpatankar@google.com>
    Committed by Amit Patankar<amitpatankar@google.com>:
    Fixing the sources docs in master.
    
    ---
    Commit b31b08bb0 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Adds randomized tests for newly introduced complex and related ops.
    
    PiperOrigin-RevId: 173709206
    
    ---
    Commit 466b9ecf8 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
      Report total number of bytes to be transferred when the curl request makes no progress.
    
    PiperOrigin-RevId: 173707608
    
    ---
    Commit 7c4e98eb4 authored by Igor Ganichev<iga@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add Tensor._rank() getter
    
    It appears to speed up SPINN model by about 1%, which is not much, but
    this method is very simple and easier to use than len(tensor._shape_tuple())
    
    PiperOrigin-RevId: 173703259
    
    ---
    Commit d7cffe9c0 authored by Allen Lavoie<allenl@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Adds save and restore methods to tfe.Network
    
    Save just saves the variables to a checkpoint. Restore either restores immediately or defers the restoration to variable creation time with a custom getter.
    
    PiperOrigin-RevId: 173703075
    
    ---
    Commit 9158f974a authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Use tf.app.run in gcs_smoke, so that the flags are explicitly parsed, instead of parsed when first accessed.
    
    PiperOrigin-RevId: 173702828
    
    ---
    Commit 3d39b32b9 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix a tfprof bug. Throws an error when the flops cannot be calculated.
    
    PiperOrigin-RevId: 173702740
    
    ---
    Commit 73155f56a authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [TF:XLA] Small code cleanup. Re-alphabetized.
    
    PiperOrigin-RevId: 173702336
    
    ---
    Commit 32bcf46f1 authored by Mustafa Ispir<ispir@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    internal
    
    PiperOrigin-RevId: 173697389
    
    ---
    Commit 97484a4d9 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update ops-related pbtxt files.
    
    PiperOrigin-RevId: 173690751
    
    ---
    Commit 873ef2ca3 authored by Oleg Zabluda<ozabluda@gmail.com>
    Committed by GitHub<noreply@github.com>:
    Fix documentation error in tf.size() - output type
    ---
    Commit 16538dab7 authored by Alexandre Passos<apassos@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Saves summaries in the mnist example.
    
    PiperOrigin-RevId: 173690505
    
    ---
    Commit 6b05b36cd authored by Jiri Simsa<jsimsa@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Generalizing sloppy_interleave, making sloppiness an option.
    
    PiperOrigin-RevId: 173687797
    
    ---
    Commit 7775a6604 authored by Michael Case<mikecase@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Internal Change
    
    PiperOrigin-RevId: 173685895
    
    ---
    Commit 5120e75cf authored by Yong Tang<yong.tang.github@outlook.com>
    Committed by Yong Tang<yong.tang.github@outlook.com>:
    Move `@compatibility(eager)` from class docstring to __init__ docstring
    
    Signed-off-by: Yong Tang <yong.tang.github@outlook.com>
    
    ---
    Commit 7d7b2ec58 authored by Yong Tang<yong.tang.github@outlook.com>
    Committed by Yong Tang<yong.tang.github@outlook.com>:
    Also fixes `@end_compatiblity` -> `@end_compatibility`
    
    Signed-off-by: Yong Tang <yong.tang.github@outlook.com>
    
    ---
    Commit 96dc501cd authored by Yong Tang<yong.tang.github@outlook.com>
    Committed by Yong Tang<yong.tang.github@outlook.com>:
    Fix incorrect annotation tag in tf.Variable
    
    In tf.Variable the annotation tag of `@compatiblity` should be `@compatibility`
    
    ---
    Commit c22973867 authored by Mark Daoust<markdaoust@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Delete bad links (md links not supported in html blocks).
    
    PiperOrigin-RevId: 173680417
    
    ---
    Commit 4198e27be authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA:CPU] [XLA:GPU] Adds compiler support for C64 primitive type, including relevant elementwise unary and binary op lowering for CPU and GPU.
    
    We use a named LLVM struct "complex64", laid out the same as std::complex<float>. This named struct is accessed via the llvm::Module, which required changes to accessors of PrimitiveTypeToIrType & friends.
    
    Ops that require atan2 (in particular, angle and log) are only supported on GPU at this point. LLVM lacks a CPU intrinsic for atan or atan2, whereas libdevice provides this for GPU.
    
    PiperOrigin-RevId: 173676849
    
    ---
    Commit 4ae245a7d authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    n/a (internal change only)
    
    PiperOrigin-RevId: 173674697
    
    ---
    Commit 0ccf5cf60 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Limit the amount of logspam a use of GraphKeys.VARIABLES causes.
    
    Multiple copies of this warning next to each other often make logs unreadable.
    
    PiperOrigin-RevId: 173672701
    
    ---
    Commit a7b872527 authored by Yong Tang<yong.tang.github@outlook.com>
    Committed by Yong Tang<yong.tang.github@outlook.com>:
    Fix an ouput typo in `ci_sanity.sh`
    
    In the last PR #13924 (clang sanity check) the output message should be changed:
    `due to the absence of Python code changes`
    ->
    `due to the absence of .h or .cc code changes`
    
    Signed-off-by: Yong Tang <yong.tang.github@outlook.com>
    
    ---
    Commit 58d2c5f50 authored by Yong Tang<yong.tang.github@outlook.com>
    Committed by Shanqing Cai<cais@google.com>:
    Add `SANITY_STEPS_DESC` for do_clang_format_check (#14030)
    
    * Add `SANITY_STEPS_DESC` for do_clang_format_check
    
    This fix is a follow up to PR #13924 to add the corresponding
    description in `SANITY_STEPS_DESC`.
    
    See comment #13924#discussion_r147314599
    for details.
    
    Signed-off-by: Yong Tang <yong.tang.github@outlook.com>
    
    * Update description for Clang Format Check
    
    Signed-off-by: Yong Tang <yong.tang.github@outlook.com>
    
    ---
    Commit 62a9ab28c authored by ???<dev@goodow.com>
    Committed by GitHub<noreply@github.com>:
    fix broken link
    ---
    Commit c6292a3f9 authored by Yong Tang<yong.tang.github@outlook.com>
    Committed by Yong Tang<yong.tang.github@outlook.com>:
    Sanitize decode_csv_op.cc with `clang-format -i`
    
    Signed-off-by: Yong Tang <yong.tang.github@outlook.com>
    
    ---
    Commit 285ea3910 authored by Yong Tang<yong.tang.github@outlook.com>
    Committed by Yong Tang<yong.tang.github@outlook.com>:
    Add test cases for `double` support of `tf.decode_csv`
    
    Signed-off-by: Yong Tang <yong.tang.github@outlook.com>
    
    ---
    Commit 73aaed655 authored by Yong Tang<yong.tang.github@outlook.com>
    Committed by Yong Tang<yong.tang.github@outlook.com>:
    Update docs for `double` support on `tf.decode_csv`
    
    Signed-off-by: Yong Tang <yong.tang.github@outlook.com>
    
    ---
    Commit 3595d1613 authored by Yong Tang<yong.tang.github@outlook.com>
    Committed by Yong Tang<yong.tang.github@outlook.com>:
    Add `double` support for `tf.decode_csv`
    
    In the current tensorflow `tf.decode_csv` accepts
    `float`, `int32`, `int64`, `string` but not `double`.
    It seems adding `double` support makes sense as `StringToNumber`
    already support `double` type.
    
    This fix adds `double` support for `tf.decode_csv`
    
    Signed-off-by: Yong Tang <yong.tang.github@outlook.com>
    
    ---
    Commit 37d483fda authored by Sergii Khomenko<sergii.khomenko@stylight.com>
    Committed by Sergii Khomenko<sergii.khomenko@stylight.com>:
    Fix a typo
    
    ---
    Commit 9c8a520b0 authored by Justine Tunney<jart@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add WriteEvent method to SummaryWriterInterface
    
    Another change will follow that adds an op for this method. It will be useful
    for loading event logs into other types of summary writer implementations, like
    a database.
    
    This change might also make the new summary file writer go faster, due to less
    memory copying.
    
    PiperOrigin-RevId: 173640116
    
    ---
    Commit a49455812 authored by Eugene Brevdo<ebrevdo@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    BEGIN_PUBLIC
    Automated g4 rollback of changelist 172654120
    
    PiperOrigin-RevId: 174388998

commit 629e6d0c103f96061d42094e32f509f76436ba35
Author: Joshua V. Dillon <jvdillon@google.com>
Date:   Mon Oct 30 11:23:36 2017 -0700

    Bugfix: Make `tf.contrib.distributions.Independent` tests not flaky.
    
    PiperOrigin-RevId: 173921378

commit f4db3b27430479cccb51518952102d63a3ebc916
Author: gunan <gunan@google.com>
Date:   Wed Oct 18 20:47:56 2017 -0700

    Disable flaky tests in cmake build. (#13816)

commit de2a766ba6314ca82635d8bfa00bf1075cd68d64
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Tue Oct 17 10:13:31 2017 -0700

    Disable flaky gru_ops_test in opensource.
    
    PiperOrigin-RevId: 172481341

commit a86a589c8b329176bfbb64552405644cb641d99e
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Tue Oct 17 09:39:50 2017 -0700

    Disable flaky cluster tests in opensource.
    
    PiperOrigin-RevId: 172477381

commit 80e3b24f27b94c9efbb57cdc2fc57e76cf3e32f2
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Thu Oct 12 13:40:58 2017 -0700

    Increase the size of extenders_test to avoid flaky timeouts.
    
    PiperOrigin-RevId: 172005195

commit a87606f623123ecc53f86302b348029e9aeefb10
Author: Yifei Feng <yifeif@google.com>
Date:   Thu Oct 12 11:03:15 2017 -0700

    Make keras estimator_test less flaky.
    
    PiperOrigin-RevId: 171982493

commit 21da2369596e8d21aab6a562c747f4ea8a72480b
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Sun Oct 8 20:47:49 2017 -0700

    Disable flaky cluster_function_library_runtime_test in opensource.
    
    PiperOrigin-RevId: 171489827

commit d32d9020e1bf24f7fb8105069cbbc0763013e8d5
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Fri Sep 29 13:28:15 2017 -0700

    Disable flaky gcs tests on macos.
    
    PiperOrigin-RevId: 170524461

commit 3076ee0a760ec3aace7a77778951df9033103e40
Author: Martin Wicke <wicke@google.com>
Date:   Wed Sep 27 09:25:54 2017 -0700

    Fix flaky saver_test. Don't trust sleep to sleep through the night.
    
    PiperOrigin-RevId: 170207579

commit 6e6f767d0db9404285dcb15cf155a3c954955af5
Author: Mustafa Ispir <ispir@google.com>
Date:   Tue Sep 19 11:01:34 2017 -0700

    Fixed a flaky test.
    
    PiperOrigin-RevId: 169266697

commit dfc0ab4302a866f1f97b167be0e3c2a4e7b35f0a
Author: David Soergel <soergel@google.com>
Date:   Thu Sep 14 10:04:28 2017 -0700

    Fix flaky test by mocking time in basic_session_run_hooks_test.py
    
    This just copies the approach from the neighboring test, which was similarly fixed in https://github.com/tensorflow/tensorflow/commit/49bab39b2a1be64879ba95515ab6130b7b951be0.
    
    PiperOrigin-RevId: 168703402

commit e4d2bb3955ab55c812b80625736ddaaa23a00f7d
Author: Brennan Saeta <saeta@google.com>
Date:   Fri Sep 8 10:37:52 2017 -0700

    Increase sleep time to avoid flaky tests
    
    PiperOrigin-RevId: 168014802

commit e09619b923f3e8ac633fd6beaa96f2298988c355
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Fri Sep 1 16:23:01 2017 -0700

    Increase the size of the flaky sample_stats_test.py
    
    PiperOrigin-RevId: 167339080

commit 86ff58ac372ccc78848786014b0bfc03371fe23d
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed Aug 23 14:20:57 2017 -0700

    Disabling the tests again on Mac since some tests are still flaky.
    
    PiperOrigin-RevId: 166253757

commit 6e3e7d18f42cb4237ce6dbe2ffd0f9f158c36daf
Author: Andrew Harp <andrewharp@google.com>
Date:   Mon Aug 21 12:10:44 2017 -0700

    Merge changes from github.
    END_PUBLIC
    
    ---
    Commit 575bd01d4 authored by Vijay Vasudevan<vrv@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove /replica:0 declaration in device functions and allow them
    to be freely bound based on cluster names present.
    
    When more than one value matches, it will choose the first
    lexicographically available device that matches the specification,
    which in practice will do pretty much the same thing as hardcoding
    /replica:0.
    
    PiperOrigin-RevId: 165766815
    
    ---
    Commit d685bbc54 authored by Alexandre Passos<apassos@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Benchmarks with backprop enabled (and removes overhead).
    
    Before:
    np.array([[3]])                          took 1.50us (30000 iterations)
    Tensor([[3]])                            took 16.30us (30000 iterations)
    MatMul [2, 2]: np.dot                         took 0.61us (30000 iterations)
    MatMul [2, 2]: tf.matmul                      took 60.53us (30000 iterations)
    MatMul [2, 2]: gen_math_ops.mat_mul           took 25.72us (30000 iterations)
    MatMul [2, 2]: TFE_Py_Execute                 took 2.82us (30000 iterations)
    MatMul [2, 2]: defun(tf.matmul)               took 45.70us (30000 iterations)
    MatMul [100, 784]: np.dot                         took 383.32us (1000 iterations)
    MatMul [100, 784]: tf.matmul                      took 350.35us (1000 iterations)
    MatMul [100, 784]: gen_math_ops.mat_mul           took 315.97us (1000 iterations)
    MatMul [100, 784]: TFE_Py_Execute                 took 249.42us (1000 iterations)
    MatMul [100, 784]: defun(tf.matmul)               took 280.95us (1000 iterations)
    
    If backprop is enabled:
    np.array([[3]])                          took 0.83us (30000 iterations)
    Tensor([[3]])                            took 15.21us (30000 iterations)
    MatMul [2, 2]: np.dot                         took 0.63us (30000 iterations)
    MatMul [2, 2]: tf.matmul                      took 76.31us (30000 iterations)
    MatMul [2, 2]: gen_math_ops.mat_mul           took 38.66us (30000 iterations)
    MatMul [2, 2]: TFE_Py_Execute                 took 2.31us (30000 iterations)
    MatMul [2, 2]: defun(tf.matmul)               took 51.96us (30000 iterations)
    MatMul [100, 784]: np.dot                         took 378.34us (1000 iterations)
    MatMul [100, 784]: tf.matmul                      took 352.09us (1000 iterations)
    MatMul [100, 784]: gen_math_ops.mat_mul           took 364.28us (1000 iterations)
    MatMul [100, 784]: TFE_Py_Execute                 took 350.68us (1000 iterations)
    MatMul [100, 784]: defun(tf.matmul)               took 377.19us (1000 iterations)
    
    After:
    np.array([[3]])                          took 0.86us (30000 iterations)
    Tensor([[3]])                            took 15.19us (30000 iterations)
    MatMul [2, 2]: np.dot                         took 0.60us (30000 iterations)
    MatMul [2, 2]: tf.matmul                      took 64.51us (30000 iterations)
    MatMul [2, 2]: gen_math_ops.mat_mul           took 28.34us (30000 iterations)
    MatMul [2, 2]: TFE_Py_Execute                 took 2.38us (30000 iterations)
    MatMul [2, 2]: defun(tf.matmul)               took 48.50us (30000 iterations)
    MatMul [100, 784]: np.dot                         took 475.27us (1000 iterations)
    MatMul [100, 784]: tf.matmul                      took 399.50us (1000 iterations)
    MatMul [100, 784]: gen_math_ops.mat_mul           took 307.80us (1000 iterations)
    MatMul [100, 784]: TFE_Py_Execute                 took 272.83us (1000 iterations)
    MatMul [100, 784]: defun(tf.matmul)               took 350.06us (1000 iterations)
    PiperOrigin-RevId: 165765641
    
    ---
    Commit d902babbd authored by David Majnemer<majnemer@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Algebraic simplifier incorrectly transformed convolutions into bitcasts
    
    PiperOrigin-RevId: 165765575
    
    ---
    Commit 8e78e10ef authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    disable test temporarily
    
    PiperOrigin-RevId: 165763204
    
    ---
    Commit a271c37db authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Small improvements to the arithmetic optimizer
    
    PiperOrigin-RevId: 165760972
    
    ---
    Commit b6409594d authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Convert some tests to cover both eager and graph.
    
    PiperOrigin-RevId: 165760364
    
    ---
    Commit 5ead76420 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Reduce XLA compile time by ~7% for a convolutional image model:
    
    * Added CompactPointerSet<T>, which is optimized for set size <= 1.
    * Changed expensive CHECKs to DCHECKS in buffer_assignment.cc
    * Reserve space in DFS state array before starting DFS.
    * Use unsigned arithmetic in DFS state maintenance.
    * HloInstruction:
      - Moved frequently used fields to start for better cache locality.
      - Use InlinedVector instead of vector for operand array.
      - Use InlinedVector instead of vector for DFS stack.
    * Pre-compute "is array" and "is tuple" for LogicalBuffer.
    * PointsToSet:
      - Combine two ShapeTrees into one.
      - Use CompactPointerSet instead of std::set to hold sources.
      - Use CompactPointerSet instead of std::set to hold flattened buffers.
    * ShapeTree: use unique_ptr instead of optional for shape storage
      (reduces size and destruction overhead).
    * Add proper const qualifiers to some FlatSet iterator methods.
    
    Co-author=jeff
    PiperOrigin-RevId: 165759117
    
    ---
    Commit a0544b0b8 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Make TPU symbols more easily accessible from contrib.
    
    PiperOrigin-RevId: 165753322
    
    ---
    Commit cdc08afbb authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Slightly relax numeric tolerance for sinlge precision tests of matrix_solve_ls (and tighten it for double precision).
    
    PiperOrigin-RevId: 165750936
    
    ---
    Commit eebcc861a authored by Jianwei Xie<xiejw@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fixed the race condition between multi eval step increments.
    
    PiperOrigin-RevId: 165750595
    
    ---
    Commit bbc0b8471 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Go: Update generated wrapper functions for TensorFlow ops.
    
    PiperOrigin-RevId: 165748384
    
    ---
    Commit 65f87c967 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Change device string in RecvNodeDescriptor in VirtualScheduler from const
    reference to const as the RecvNodeDescriptor (and cached_recv_nodes map)
    outlives device string from the NodeDef.
    
    PiperOrigin-RevId: 165748244
    
    ---
    Commit 57b0276cf authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update ops-related pbtxt files.
    
    PiperOrigin-RevId: 165747467
    
    ---
    Commit 64e54423b authored by Derek Murray<mrry@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [tf.contrib.data] Fix nested dictionary handling in dataset elements.
    
    Backports recent changes to the core version of the nest.py library.
    
    Fixes #12372.
    
    PiperOrigin-RevId: 165746517
    
    ---
    Commit 378463ae8 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Make tf.eye accept Python integer shapes and avoid generating unnecessary shape handling ops.
    Clean up test and add tests with placeholders.
    
    PiperOrigin-RevId: 165746090
    
    ---
    Commit 109ecf823 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add support for complex in matrix_solve_ls_op.
    Split into separate files for each data type to speed up build.
    
    PiperOrigin-RevId: 165744539
    
    ---
    Commit 51441302d authored by Alexandre Passos<apassos@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Internal change.
    
    PiperOrigin-RevId: 165737455
    
    ---
    Commit d0cb32c2a authored by Alexandre Passos<apassos@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Docstring for ResourceVariable.
    
    PiperOrigin-RevId: 165735441
    
    ---
    Commit 32f4c5b6e authored by Chris Leary<leary@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Add IsFinite op in tf2xla.
    
    PiperOrigin-RevId: 165734702
    
    ---
    Commit 5f5c3eb0a authored by Mark Daoust<markdaoust@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Move "supervisor.md" from programmer's guide to api_guides.
    
    PiperOrigin-RevId: 165732026
    
    ---
    Commit d001b58de authored by Derek Murray<mrry@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [tf.contrib.data] Fix handling of multi-output tf.py_func() in Dataset.map().
    
    If the `map_func` returns a list of tensors, the current code will
    attempt to stack it into a single tensor and raise an unintuitive
    error. Some multi-output ops (such as `tf.py_func()`) return lists of
    typically-not-stackable tensors. This change treats lists returned
    from `map_func` as tuples; users who were relying on this
    auto-stacking behavior should manually call `tf.stack()` (or
    `tf.convert_to_tensor()`) on the list being returned.
    
    Fixes #12396.
    
    PiperOrigin-RevId: 165731970
    
    ---
    Commit e6c60fb36 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix flakyness, sometimes the op takes ms to run.
    
    PiperOrigin-RevId: 165728705
    
    ---
    Commit 360bff8ae authored by Ali Yahya<alive@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Makes tape.watch() work with ResourceVariables.
    To this end, also adds a property, `device`, to TensorNode.
    
    PiperOrigin-RevId: 165726368
    
    ---
    Commit 80bd004cd authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Implements SVDF model for keyword spotting tutorial.
    
    PiperOrigin-RevId: 165725938
    
    ---
    Commit aaabf6b90 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix bug: Using a ComputationDataHandle from the wrong ComputationBuilder.
    
    PiperOrigin-RevId: 165724017
    
    ---
    Commit 107d165d9 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Use 2-arg TraceMe constructor to prevent unnecessary StrCat computation when
    tracing is disabled.
    
    PiperOrigin-RevId: 165722280
    
    ---
    Commit 7d01f89cc authored by Pete Warden<petewarden@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Android demo app for speech recognition
    
    PiperOrigin-RevId: 165714459
    
    ---
    Commit a6729325a authored by Alexandre Passos<apassos@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Deletes convert_n_to_eager_tensor. Moves convert_to_eager_tensor to constant_op.
    
    PiperOrigin-RevId: 165704074
    
    ---
    Commit 573b303ac authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    BUILD cleanup in tensorflow/core/kernels
    
    PiperOrigin-RevId: 165688864
    
    ---
    Commit 711be6adc authored by Derek Murray<mrry@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    `Dataset.from_generator()` constructs a dataset from a Python generator.
    
    With this change, it becomes possible to use a Python generator as the source
    dataset for a `tf.contrib.data` input pipeline. This enables easier integration
    with non-TensorFlow data sources. The generator can yield a nested structure of
    NumPy arrays, or values convertible to NumPy arrays.
    
    This addresses a concern raised in issue #7951.
    
    PiperOrigin-RevId: 165663857
    
    ---
    Commit 00594ecdd authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    New landing page and leftnav for Programmer's Guide.
    
    PiperOrigin-RevId: 165660897
    
    ---
    Commit 7359fec79 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Implement Batchnorm Inference by expanding them into smaller ops.
    
    1. Add batch norm inference support in batchnorm_rewriter
    2. Connect xla's batchnorm inference to tf's FusedBatchNorm
    
    RELNOTES: n/a
    PiperOrigin-RevId: 165655351
    
    ---
    Commit f0da8bf56 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [Rematerialization] Reconsider to remat operations with control dependencies
    
    We added a conservartive logic to not rematerialize operations with control dependencies since the rematerialized operations could result in undesired ordering. However, we now realize that when we remat an operation, we also copy the dependencies of them, which guarantees the rematerialized operation has the same constraint as the original operation.
    
    PiperOrigin-RevId: 165654629
    
    ---
    Commit a1225879c authored by Chris Leary<leary@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Propagate error code in computation replay tool.
    
    PiperOrigin-RevId: 165654497
    
    ---
    Commit 513def0bb authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fixed BuildOpInfoWithoutDevice
    
    PiperOrigin-RevId: 165653933
    
    ---
    Commit d7e425f0b authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix linear algebra benchmarks.
    
    PiperOrigin-RevId: 165653891
    
    ---
    Commit 465c40819 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix the shape information propagation for Enter op.
    
    PiperOrigin-RevId: 165653579
    
    ---
    Commit c0198fd8d authored by Derek Murray<derek.murray@gmail.com>
    Committed by gunan<gunan@google.com>:
    [CMake] Add missing dependencies on boosted_trees protos and other fixes (#12315)
    
    * [CMake] Add missing dependencies
    
    * Avoid rebuilding boosted_trees protos for Python.
    
    * Add GPU implementation ZeroInitializerOp to the CMake build.
    
    ---
    Commit 641943fd7 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update ops-related pbtxt files.
    
    PiperOrigin-RevId: 165652758
    
    ---
    Commit e31346452 authored by Jonathan Hseu<jhseu@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    TPUEstimator: Fix the outfeed thread join.
    
    PiperOrigin-RevId: 165651781
    
    ---
    Commit 565a9d350 authored by Vijay Vasudevan<vrv@google.com>
    Committed by Andrew Harp<andrewharp@users.noreply.github.com>:
    Add missing 'type' keyword to ArgumentParser add_argument (#12275)
    
    Fixes #12210
    ---
    Commit 19a55725a authored by Rohan Jain<rohanj@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Allowing functions to run across devices. This change expands the ProcessFunctionLibraryRuntime library to Instantiate and Run functions on different devices. When a FunctionLibraryRuntime encounters a function with a target that is another device, it delegates Instantiate() and Run() calls to the ProcessFunctionLibraryRuntime.
    
    This change also moves the table_ containing all function instantiations to the PFLR instead of the FunctionLibraryRuntime.
    
    PiperOrigin-RevId: 165651194
    
    ---
    Commit 8c0853db7 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add a test for negative and zero pow() input.
    
    PiperOrigin-RevId: 165650096
    
    ---
    Commit a3c4e980e authored by Pete Warden<petewarden@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fixed input shape for freezing audio graphs
    
    PiperOrigin-RevId: 165649546
    
    ---
    Commit 9b9e5989d authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add a call_logit_fn utility for logit_fn's, similar to Estimator's _call_model_fn.
    
    PiperOrigin-RevId: 165649388
    
    ---
    Commit 4ff1f4442 authored by Amit Patankar<amitpatankar@google.com>
    Committed by Amit Patankar<amitpatankar@google.com>:
    Remove the script as well if building tf_nightly.
    
    ---
    Commit 373d78987 authored by Amit Patankar<amitpatankar@google.com>
    Committed by Amit Patankar<amitpatankar@google.com>:
    Adding the break.
    
    ---
    Commit 0139ac983 authored by Amit Patankar<amitpatankar@google.com>
    Committed by Amit Patankar<amitpatankar@google.com>:
    Remove tensorboard as a required package if we are building tf_nightly.
    
    ---
    Commit a92bd5d5c authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    BEGIN_PUBLIC
    Automated g4 rollback of changelist 165630063
    
    PiperOrigin-RevId: 165957821

commit e6c60fb368aa1261663cef1204e515179c36db8d
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Fri Aug 18 11:18:09 2017 -0700

    Fix flakyness, sometimes the op takes ms to run.
    
    PiperOrigin-RevId: 165728705

commit 1dfe6e380dadceb0859c6bdd52de39a212ed624b
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Fri Aug 11 14:35:09 2017 -0700

    Fix flaky test by re-introducing a dependency that may be short-cut via static shape inference.
    
    PiperOrigin-RevId: 165026308

commit 05c491d30888088873fedfbe81bca378c8c3fc87
Author: Benoit Steiner <bsteiner@google.com>
Date:   Tue Aug 1 16:16:52 2017 -0700

    Merge changes from github.
    END_PUBLIC
    
    ---
    Commit e62de3f78 authored by Kay Zhu<kayzhu@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Handle Reverse in HloEvaluator.
    
    Also move HandleCopy to outer visitor instead, since it can be implemented
    as a type-agnostic copy instead.
    
    PiperOrigin-RevId: 163866499
    
    ---
    Commit 96675956e authored by Asim Shankar<ashankar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    C API: Avoid converting uninitialized tensorflow::Tensor to TF_Tensor*
    
    And return error messages instead of CHECK failing when the conversion
    fails.
    
    PiperOrigin-RevId: 163863981
    
    ---
    Commit 9593704b2 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix framework import function dependency.
    
    PiperOrigin-RevId: 163863883
    
    ---
    Commit 66f148542 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Improve performance of compilation by ~8% by speeding up the
    hlo rematerialization pass.
    
    Changes:
    . Wrap each HloInstruction* inside an Item structure that keeps
      associated data.  This allows us to get rid of a bunch of
      hash tables indexed by HloInstruction*.
    * Switch to an intrusive linked list (instead of std::list) so
      that we can avoid a hash table that maps to std::list::iterator.
    * Use inlined vector in a few places.
    PiperOrigin-RevId: 163848365
    
    ---
    Commit 6d77a0129 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Hide NonMaxSuppression and NonMaxSuppressionV2 ops and add a python wrapper that sets a backwards compatible default value for iou_threshold.
    
    PiperOrigin-RevId: 163844703
    
    ---
    Commit 1a4499607 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix: add GDN to __init__. Also put it in alphabetical order.
    
    PiperOrigin-RevId: 163842410
    
    ---
    Commit db0e1c6c8 authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Don't force inlining of functions marked no-inline
    
    PiperOrigin-RevId: 163842238
    
    ---
    Commit 18718b6f7 authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Misc grappler improvements:
     * Avoid copying optimized graphs since that takes time.
     * Avoid optimizing a pruned graph, since it's already been pruned there isn't much to gain
    
    PiperOrigin-RevId: 163842122
    
    ---
    Commit 90abbf684 authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Use OP_REQUIRES instead of an assertion to validate op arguments
    
    PiperOrigin-RevId: 163841759
    
    ---
    Commit 203c3f5fd authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Infer unknown shapes for functions in C++
    
    As we are implementing function support through C API, the new code path
    runs shape inference of Operations representing functions, but we don't
    yet support shape inference for functions.
    
    Before this change, adding a function NodeDef would result in error.
    This change pairs all functions with a shape inference function that
    sets all output shapes to unknown.
    
    PiperOrigin-RevId: 163830793
    
    ---
    Commit 3cc5fc088 authored by Chris Leary<leary@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Implement MirrorPad op.
    
    Addresses #11890
    
    * Improves the shape inference error message for concatenate.
    * Adds a helper to Literal that gets an integral value converted to int64.
    
    PiperOrigin-RevId: 163829437
    
    ---
    Commit c7b674fa2 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    flatten_up_to should return values, not keys
    
    PiperOrigin-RevId: 163809688
    
    ---
    Commit 6209b4b52 authored by Asim Shankar<ashankar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Minor refactoring the TF_Tensor <-> PyArray conversion functions.
    
    PiperOrigin-RevId: 163802822
    
    ---
    Commit 618f913bb authored by Yao Zhang<yaozhang@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Speed up topological sort by avoiding copies. The speedup is about 10-20%.
    
    PiperOrigin-RevId: 163800134
    
    ---
    Commit 6446895aa authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove and replace broken giflib download link
    
    PiperOrigin-RevId: 163796393
    
    ---
    Commit 9d5613088 authored by Chris Leary<leary@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA:CPU] Atomically enqueue tuple buffers for outfeed.
    
    Previously it was possible that a distinct thread could hop in between the
    buffer enqueues done by a tuple-outfeeding thread. This changes the sequence to
    enqueue all the tuple buffers as an atomic unit.
    
    PiperOrigin-RevId: 163781804
    
    ---
    Commit b882d686f authored by Bjarke Hammersholt Roune<broune@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Allow cost estimates to differ per backend and include the estimates into the HLO profile. Add a summary table for what categories have the most opportunity for optimization left in them.
    
    PiperOrigin-RevId: 163780413
    
    ---
    Commit 14b736761 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Pass stats_collector when using SymbolicGradientOp.
    
    PiperOrigin-RevId: 163773897
    
    ---
    Commit 5202a5b6c authored by RJ Ryan<rjryan@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix some typos in StreamExecutor's cuFFT support.
    
    PiperOrigin-RevId: 163771825
    
    ---
    Commit edac90c7c authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add support to generate pprof results to tf.profiler
    
    A fun thing is, it can not only profile time,memory
    but also parameters, etc.
    
    PiperOrigin-RevId: 163767517
    
    ---
    Commit 78a90370e authored by Eli Bendersky<eliben@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Refactor CreateModuleConfig to share code between multiple call-sites.
    
    Previously Service, LocalService and CompileOnlyService had their own code to
    create a new HloModuleConfig, with much repetition (and some ommissions);
    collect all these uses in a single method.
    
    PiperOrigin-RevId: 163766869
    
    ---
    Commit 6150611ae authored by Anna R<annarev@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Internal change.
    
    PiperOrigin-RevId: 163765028
    
    ---
    Commit 9e7875437 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add the option of including Shape, ShapeN, Size and Rank in the standard TensorFlow constant propagation pass, when the inputs to those Ops have sufficiently known static shape.
    
    PiperOrigin-RevId: 163762750
    
    ---
    Commit 8b1365bb4 authored by Yuefeng Zhou<yuefengz@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Infer output shape for restore op.
    
    PiperOrigin-RevId: 163762216
    
    ---
    Commit 2e2a8536d authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update WorkerCacheLogger::RecordDataTransfer to not modify the details if provided.
    
    PiperOrigin-RevId: 163761089
    
    ---
    Commit d03ba54f7 authored by Yangzihao Wang<yangzihao@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Use BlasGemv() when autotune is not set.
    
    PiperOrigin-RevId: 163754092
    
    ---
    Commit 724884f1c authored by Justin Lebar<jlebar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Show layouts in HLO graph dump.
    
    Layouts are displayed as e.g. "f32[100,200]{0,1}".  But constants used
    to be displayed as e.g. "f32[]{42}".  To avoid ambiguity, constants are
    now displayed as e.g. "42 (f32[])".
    
    Also gets rid of the xla_hlo_graph_layout flag, which is no longer
    necessary since we're now showing layouts unconditionally.
    
    PiperOrigin-RevId: 163753637
    
    ---
    Commit 84c2757a6 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Move Grappler test GraphDefs to separate files
    
    PiperOrigin-RevId: 163751948
    
    ---
    Commit 0b3a25d68 authored by Asim Shankar<ashankar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Make TF_RESOURCE memory handling consistent with other types.
    
    TF_Tensor's are backed by a contiguous memory region for all
    but TF_RESOURCE tensors. The memory management of TF_RESOURCE
    tensors required keeping a backing tensorflow::ResourceHandle*
    object alive for the lifetime of the TF_Tensor object.
    
    This change removes that discrepancy, making the memory backing
    TF_RESOURCE tensors self-contained. This simplifies use of TF_RESOURCE
    tensors in the C API (as users of the C API do not need to worry about
    a tensorflow::ResourceHandle object and its lifetime). In doing so, this
    moves a string memory copy from the TF_Tensor <-> Numpy conversion
    to the C API from the Python session helper.
    
    Unfortunately, I couldn't figure out how to add a simple unittest in
    c_api_test.cc. The more comprehensive tensorflow/python/kernel_tests/session_ops_test.py
    does cover the changed lines though.
    
    Additionally, avoid an unnecessary copy when creating TF_STRING or TF_RESOURCE
    tensors (as eigen alignment is not a requirement for them).
    
    PiperOrigin-RevId: 163751880
    
    ---
    Commit 1333e7745 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Allow one tensor to be the input to the estimator.
    
    PiperOrigin-RevId: 163747076
    
    ---
    Commit 104f349e9 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update Conv2DShape function to handle filters that have data NCHW_VECT_C layout.
    
    PiperOrigin-RevId: 163746769
    
    ---
    Commit efb7fb8e5 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Use XLA_VLOG_LINES() in literal_test_util to avoid truncation of large tensors.
    
    PiperOrigin-RevId: 163745522
    
    ---
    Commit 043505a09 authored by Suharsh Sivakumar<suharshs@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    MasterSession should throw error if use_per_session_threads or session_inter_op_thread_pool is set.
    
    PiperOrigin-RevId: 163743936
    
    ---
    Commit 6ba02f0e9 authored by Artem Belevich<tra@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Added HasAllocationAt() helper function.
    
    PiperOrigin-RevId: 163742985
    
    ---
    Commit 18304683e authored by Justine Tunney<jart@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Pin tensorflow to tensorflow-tensorboard 0.1.x
    
    This change will be cherry-picked into the 1.3.0 release.
    
    PiperOrigin-RevId: 163742463
    
    ---
    Commit 3445dd0ed authored by Justine Tunney<jart@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Make 'import tensorflow' go faster
    
    It now takes about 400ms rather than 800ms, if the file system cache is warm.
    
    Most of the latency was due to parsing text_format OpList protocol buffers in
    our generated sources. We now use a binary representation, while preserving the
    text proto as a comment for readability.
    
    Note: This change does not improve the latency of dereferencing tf.contrib,
    which takes about 340ms.
    PiperOrigin-RevId: 163739355
    
    ---
    Commit c215c55d5 authored by Neal Wu<wun@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add missing py_binary for mnist_deep.py
    
    PiperOrigin-RevId: 163737503
    
    ---
    Commit b663c9899 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Make non-iterable input to `stratified_sample` produce better error message.
    
    PiperOrigin-RevId: 163735979
    
    ---
    Commit 122750a87 authored by Peter Hawkins<phawkins@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [SE] Make ExecutorCache thread-safe, change ExecutorCache::Insert to ExecutorCache::GetOrCreate. Add support for creating Executors for different device ordinals in parallel.
    [XLA] Create Executors in parallel.
    
    PiperOrigin-RevId: 163734988
    
    ---
    Commit 7ebed6678 authored by Frank Chen<frankchn@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add __init__.py to the contrib/cluster_resolver directory so that the Cluster Resolver classes within this are visible to open source TensorFlow users.
    
    PiperOrigin-RevId: 163733781
    
    ---
    Commit 21faf19d0 authored by Shanqing Cai<cais@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Upgrade pip version to 9.0.1; Prettier format of log text
    
    * Upgrade pip version used in virtualenv created by the test-on-install to latest (9.0.1).
    * Highlight step titles of pip builds with bold font.
    
    PiperOrigin-RevId: 163732825
    
    ---
    Commit 5887cc10e authored by Kay Zhu<kayzhu@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] In LiteralUtil::StridedConfig: choose the larger dimension between the
    source and destination shapes' minor-most dimension index.
    
    PiperOrigin-RevId: 163732014
    
    ---
    Commit f9c644693 authored by Peter Hawkins<phawkins@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [TF:XLA] Disable sanitizers for depthwise conv test to fix test flakiness.
    
    PiperOrigin-RevId: 163727765
    
    ---
    Commit 6263539a1 authored by Allen Lavoie<allenl@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Grappler memory optimization: allow inputs to gradients with non-standard names to be recomputed
    
    Includes Python tests for name-scoped gradients.
    
    PiperOrigin-RevId: 163720208
    
    ---
    Commit 4ac195669 authored by Benoit Steiner<benoitsteiner@users.noreply.github.com>
    Committed by GitHub<noreply@github.com>:
    Branch 163695881 (#11913)
    
    * Prevent ctc_loss op from segfaulting when given empty batch.
    
    PiperOrigin-RevId: 163663460
    
    * New "SavedModel: Practical Uses" and "SavedModel: Architecture" documents.
    
    PiperOrigin-RevId: 163669809
    
    * Minor cleanup
    
    PiperOrigin-RevId: 163685423
    
    * Add regression variance over individual trees to TensorForest inference.
    
    PiperOrigin-RevId: 163695881
    
    ---
    Commit b876065af authored by Alexandre Passos<apassos@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    graph_to_function_def gets its own file
    
    PiperOrigin-RevId: 163709410
    
    ---
    Commit 29550762b authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fixes unit tests for inverse hyperbolic functions that were failing because numeric gradients were computed too close to a branch cut (for complex arguments) or singularity (for real arguments) where the function is not differentiable (See, e.g., http://mathworld.wolfram.com/BranchCut.html). This change moves the test points away from the branch cut/singularity.
    
    Improves precision of double precision numerical gradients by using a smaller step size delta (the optimal for symmetric difference approximation with functions computed with O(epsilon) error is epsilon^(1/3), so for double64 it is ~1e-5).
    
    PiperOrigin-RevId: 163706297
    
    ---
    Commit 99b190a1f authored by Peter Hawkins<phawkins@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [TF:XLA] Add implementation of depthwise convolution.
    
    This implementation expands the depthwise convolution kernels into a regular convolution kernel, which may not scale to large feature depths.
    
    PiperOrigin-RevId: 163705408
    
    ---
    Commit f6f07b027 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Allow kernel unit tests to run on GPU
    
    PiperOrigin-RevId: 163705027
    
    ---
    Commit 4ec29c5d9 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Avoid direct access to Node::def() where some other method works.
    
    PiperOrigin-RevId: 163704839
    
    ---
    Commit 153be4d26 authored by Luke Iwanski<luke@codeplay.com>
    Committed by Benoit Steiner<benoitsteiner@users.noreply.github.com>:
    [OpenCL] Stats tracking (#11523)
    
    * Adds stat tracking to the SYCL allocator
    
    The SYCLAllocator will now find the max allocation size on construction,
    and keep track of the allocation stats, as given in AllocationStats.
    
    * [OpenCL] Adds buffer size tracking to SYCL allocator (#114)
    
    The SYCL buffers underlying tensors already keep track of their sizes,
    so we can easily provide this tracking information for debugging
    purposes.
    
    ---
    Commit 8d642672f authored by Amit Patankar<amitpatankar@google.com>
    Committed by Amit Patankar<amitpatankar@google.com>:
    Disabling gmm_test.py on Windows builds as it's flaky on GPU nightly builds.
    
    ---
    Commit 1560c55d2 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add regression variance over individual trees to TensorForest inference.
    
    PiperOrigin-RevId: 163695881
    
    ---
    Commit 15e928d51 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Minor cleanup
    
    PiperOrigin-RevId: 163685423
    
    ---
    Commit f9c758719 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    New "SavedModel: Practical Uses" and "SavedModel: Architecture" documents.
    
    PiperOrigin-RevId: 163669809
    
    ---
    Commit f19bb3beb authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Prevent ctc_loss op from segfaulting when given empty batch.
    
    PiperOrigin-RevId: 163663460
    
    ---
    Commit 454fe936c authored by Taehoon Lee<taehoonlee@snu.ac.kr>
    Committed by Taehoon Lee<taehoonlee@snu.ac.kr>:
    Fix typos
    
    ---
    Commit e17650b69 authored by Frank Chen<frankchn@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    This adds the cluster_resolver module to contrib/__init__.py so that it is actually visible to open source TensorFlow users.
    
    PiperOrigin-RevId: 163636676
    
    ---
    Commit 926c0f6ee authored by ??<awsomekde@gmail.com>
    Committed by GitHub<noreply@github.com>:
    fix minor typo
    ---
    Commit 00d3126a3 authored by Yao Zhang<yaozhang@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Change const nodes to variables in the test, so that they are not optimized
    away by the grappler constant folding pass.
    
    PiperOrigin-RevId: 163602405
    
    ---
    Commit 1c7c9c716 authored by Aditya Dhulipala<aditya.d@hotmail.com>
    Committed by Vijay Vasudevan<vrv@google.com>:
    Minor typo correction (#11874)
    
    ---
    Commit f91a3546e authored by Sergii Khomenko<x-sam@brainscode.com>
    Committed by Vijay Vasudevan<vrv@google.com>:
    Fix a minor typo (#11873)
    
    ---
    Commit adf5d1bc0 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    BEGIN_PUBLIC
    Automated g4 rollback of changelist 163510186
    
    PiperOrigin-RevId: 163902859

commit 82456f9fee7c4b5e9beb100e59ba8dc5eb688b28
Merge: 4ac1956 8d64267
Author: Amit Patankar <amitpatankar@google.com>
Date:   Mon Jul 31 12:38:26 2017 -0700

    Merge pull request #11914 from av8ramit/disable_gmm
    
    Disabling gmm_test.py on Windows builds as it's flaky on GPU nightly …

commit 8d642672faac20f7b4e2d49e7130cd36c3e2d2c1
Author: Amit Patankar <amitpatankar@google.com>
Date:   Mon Jul 31 09:09:42 2017 -0700

    Disabling gmm_test.py on Windows builds as it's flaky on GPU nightly builds.

commit 2177491c1a5bfb2aefef2358927487c4549cdb0f
Author: Benoit Steiner <bsteiner@google.com>
Date:   Fri Jul 7 17:29:15 2017 -0700

    Disable graph optimizations in delay_compensated_gradient_descent_test
    since they appear to make the test more flaky
    
    PiperOrigin-RevId: 161265638

commit f0e8a7259a30f3086ee0b2506d2be0392e5e0209
Author: Shanqing Cai <cais@google.com>
Date:   Wed Jul 5 19:39:58 2017 -0700

    Disable tests flaky in open-source builds due to port conflicts
    
    PiperOrigin-RevId: 161035950

commit 744120fd8a0c3be0a90cca5a971459894c90b859
Author: gunan <gunan@google.com>
Date:   Sun Jul 2 14:04:56 2017 -0700

    Disable flaky cwise_ops_test due to broken acosh on windows. (#11213)

commit 62c1104e766c15c71f1fa53145503899eb470d62
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu Jun 29 14:03:26 2017 -0700

    Renable a subset of test cases in run_metadata_test.py
    
    The flaky test case is due to RunMetadata randomly missing
    gpu kernel execution time, the reason of which is still being
    investigated. Enable the test to avoid other behaviors got
    broken as well.
    
    PiperOrigin-RevId: 160570056

commit cf7c008ab150ac8e5edb3ed053d38b2919699796
Author: Yifei Feng <fengyifei2026@gmail.com>
Date:   Wed Jun 28 11:07:44 2017 -0700

    Branch 160346151 (#11094)
    
    * Properly handle ops that don't have a CPU kernel
    
    PiperOrigin-RevId: 159655906
    
    * Selected BUILD cleanup in tensorflow/contrib/...
    
    PiperOrigin-RevId: 159673079
    
    * Remove redundant `get` calls on smart pointers
    
    PiperOrigin-RevId: 159675809
    
    * PiperOrigin-RevId: 159698321
    
    * Migrate kernels to boosted_trees.
    
    PiperOrigin-RevId: 159698656
    
    * Fix a bug in the memory optimizer when two inputs to a node are both recomputed
    
    PiperOrigin-RevId: 159700457
    
    * Fixed memory leak that can be triggered by a failed node evaluation
    
    PiperOrigin-RevId: 159707380
    
    * Updates get_started tutorial.
    
    PiperOrigin-RevId: 159709158
    
    * [XLA] Remove unused factory in local_service
    
    PiperOrigin-RevId: 159712806
    
    * Fix typo in docstring
    
    PiperOrigin-RevId: 159714414
    
    * Migrate ops for new version of TensorForest.
    
    PiperOrigin-RevId: 159718610
    
    * Added parameterized tests to reduce window tests.
    
    PiperOrigin-RevId: 159721784
    
    * Use C API to implement Operation.device property
    
    PiperOrigin-RevId: 159723490
    
    * Several Estimator changes:
    - support configurable input_fn calling in Estimator subclasses.
    - pass params and config to the input_fn.
    - allow callables for model_fn and input_fn.
    
    PiperOrigin-RevId: 159725554
    
    * Fixed the scalar output for shard api when outputs_from_all_shards=True.
    
    PiperOrigin-RevId: 159726444
    
    * Automated g4 rollback of changelist 159718610
    
    PiperOrigin-RevId: 159728380
    
    * Adding missing deps to targets in llvm.BUILD. This was only working in non-sandboxed builds.
    
    PiperOrigin-RevId: 159729295
    
    * [XLA:HLO] Move sequence functions from hlo_ordering.h to hlo_scheduling.h.
    
    This is required for upcoming changes to convert the sequence creation functions
    (and HeapSimulator and BufferAssignment) over to using the new
    Hlo{Dataflow,Alias}Analysis.
    
    It's required because otherwise there's a dependency cycle:
    
    Hlo{Dataflow,Alias}Analysis depends on HloOrdering
    CreateMemoryMinimizingSequence will depend on Hlo{Dataflow,Alias}Analysis
    
    There's already a cycle here, if both HloOrdering and
    CreateMemoryMinimizingSequence are in the same file.  Also note that:
    
    MinimumMemoryForSequence depends on HeapSimulator
    HeapSimulator will depend on Hlo{Dataflow,Alias}Analysis
    Hlo{Dataflow,Alias}Analysis depends on HloOrdering
    
    Splitting out the sequence functions resolves the cycle.
    
    Refactoring only; no functional changes.
    
    PiperOrigin-RevId: 159731836
    
    * [XLA:HLO] Split Hlo{Value,Buffer} out of Hlo{Dataflow,Alias}Analysis.
    
    This will make dependencies cleaner for upcoming CLs that will convert
    HeapSimulator and HloOrdering to use the new analyses.
    
    No change in functionality.
    
    PiperOrigin-RevId: 159737265
    
    * Internal change
    
    PiperOrigin-RevId: 159738215
    
    * Suggest people need to do some build environment ./configur'ing.
    
    Fixes #4279
    
    PiperOrigin-RevId: 159738412
    
    * Rewrite SameDefinedShape function in ShapeRefiner
    
    PiperOrigin-RevId: 159745894
    
    * [XLA] Remove xla_cpu_*_eigen flags from CPU backends.
    
    These flags are currently de-facto unused; parallelism should be controlled
    through the cpu_parallel backend. For configuring Eigen, if needed, the options
    should be piped more directly to the code.
    
    PiperOrigin-RevId: 159746509
    
    * Updates layers tutorial and corresponding example.
    
    PiperOrigin-RevId: 159749528
    
    * Further BUILD cleanup
    
    PiperOrigin-RevId: 159749869
    
    * Use more efficient squared_difference
    
    PiperOrigin-RevId: 159751209
    
    * Add log_step_count_steps to RunConfig and allow it to flow to the MonitoredSession.
    
    PiperOrigin-RevId: 159753935
    
    * [XLA] Remove xla_hlo_test_generate_hlo_graph, which is now redundant.
    
    PiperOrigin-RevId: 159755688
    
    * Do not use SSE4.1 instructions on Android builds.
    
    PiperOrigin-RevId: 159756104
    
    * Add nonpublic helper `tf.distributions.util.tridiag` op.
    
    PiperOrigin-RevId: 159757904
    
    * [XLA] Remove dead "in-client" code.
    Remove Service::runs_in_client_process_ field and it's dead user. This was
    previously used by the "InProcess" methods which have been replaced with
    the LocalClient API.
    
    PiperOrigin-RevId: 159759455
    
    * [tf contrib seq2seq] Add monotonic attention mechanisms
    
    * Add monotonic_attention and safe_cumprod helper functions.
    * Add _BaseMonotonicAttentionMechanism base class.
    * Add BahdanauMonotonicAttention and LuongMonotonicAttention classes.
    
    These attention mechanisms are proposed in
    Colin Raffel, Minh-Thang Luong, Peter J. Liu, Ron J. Weiss, Douglas Eck,
    "Online and Linear-Time Attention by Enforcing Monotonic Alignments."
    ICML 2017.  https://arxiv.org/abs/1704.00784
    
    PiperOrigin-RevId: 159760073
    
    * Add ability for argmax to output int32 indices.  Default remains int64.
    
    Change is made in a backwards and forward compatible manner, since
    we add a new attribute with a default that remains the same, and
    simply register a few new kernels.
    
    PiperOrigin-RevId: 159761347
    
    * Automated g4 rollback of changelist 159746509
    
    PiperOrigin-RevId: 159763112
    
    * Raise ValueError if invalid dtype for random_uniform.
    
    PiperOrigin-RevId: 159764956
    
    * Internal change.
    
    PiperOrigin-RevId: 159769520
    
    * Support zero shapes for random_poisson. This matches random_uniform.
    
    PiperOrigin-RevId: 159771215
    
    * Blacklist the quantized ops since they have too many issues (incorrect shape
    functions, memory corruptions, ...)
    
    PiperOrigin-RevId: 159772801
    
    * Fixed the shape functions of the QuantizedAdd and QuantizedMul ops
    
    PiperOrigin-RevId: 159772841
    
    * Switch from assigning namedtuple.__new__.__defaults__ to overwriting __new__.
    
    Assigning __defaults__ relies on an implementation detail of CPython, confuses
    type checkers (and developers :)), and is error-prone since it doesn't make the
    relationship between parameter names and default values explicit.
    This CL switches to overloading __new__ instead.
    
    PiperOrigin-RevId: 159773922
    
    * Made sure that we can call the constant folding code twice safely.
    
    PiperOrigin-RevId: 159781607
    
    * Added batch_matmul op dependence to android_extended_ops
    
    PiperOrigin-RevId: 159787178
    
    * Fixes a TODO in head_test.
    
    PiperOrigin-RevId: 159789178
    
    * When configuring per-session thread pools, allow
    a pool to be a global pool. This allows a division
    between large and small pools, without needing to make
    new pool for each session.
    
    PiperOrigin-RevId: 159789678
    
    * Add a multi-head TensorForest estimator.
    
    PiperOrigin-RevId: 159820487
    
    * Have RestoreV2's shape fn set all outputs to unknown shape.
    
    PiperOrigin-RevId: 159835723
    
    * VectorExponential added to distributions.
    
    PiperOrigin-RevId: 159840822
    
    * Fold as many nodes as possible instead of giving up if there is any error.
    
    PiperOrigin-RevId: 159841935
    
    * Removed deprecated summary usage from estimators.
    Made name_space usage consistent.
    
    PiperOrigin-RevId: 159846928
    
    * Adding missing license notice to toolchain build files
    
    PiperOrigin-RevId: 159847551
    
    * [XLA] Remove unused flags and move debugging flag to debug options.
    
    PiperOrigin-RevId: 159849759
    
    * Fixes some docstrings in feature_column.
    
    PiperOrigin-RevId: 159850619
    
    * TpuEstimator: Replicate the input_fn to the worker CPU for each shard.
    
    The batch size is configured as follows:
    The user may specify a global batch size in their hyperparameters. If the 'batch_size' field is set, then we convert the global batch size into a per-shard batch size by dividing by num_shards before running their input_fn.
    
    PiperOrigin-RevId: 159851773
    
    * Modify beam search decoder to use symbolic shape for vocab size if the static shape is not present.
    
    PiperOrigin-RevId: 159852297
    
    * Generalize cluster initialization to span multiple mini-batches if necessary.
    
    PiperOrigin-RevId: 159852557
    
    * Use a single threaded session for SDCALinearRegressorTest to
    avoid incorrect threading test failures (tsan).
    
    PiperOrigin-RevId: 159852818
    
    * Migrate ops for new version of TensorForest.
    
    PiperOrigin-RevId: 159852889
    
    * Replaced constant inputs with variables to ensure most of the graph doesn't get
    optimized away
    
    PiperOrigin-RevId: 159853171
    
    * For candidate sampling, add facility to colocate the logit computation with the sharded embeddings.
    
    PiperOrigin-RevId: 159854706
    
    * Added a utility to create parsing spec for regressors (canned estimator)
    
    PiperOrigin-RevId: 159855254
    
    * Fix cuda_kernel_helper_test. std::numeric_limits<int32>::max() doesn't pass, so
    I didn't use that.
    
    PiperOrigin-RevId: 159869169
    
    * In tfcompile, prune nodes that are not reachable from the fetches before
    building the Graph. This allows loading a graph that contains ops not
    needed for the compiled binary.
    
    PiperOrigin-RevId: 159869692
    
    * Fix bugs related to distributions over integers.
    
    - Ensure that the max number of categories does not exceed largest integer-form float.
    - Make dtype inference consistent between Categorical and Multinomial
    distributions.
    - Improve documentation to better reflect that the Categorical
    distribution is analogous to `argmax{OneHotCategorical}` (itself being
    identical to `argmax{Multinomial(p,n=1)}` but not Multinomial.
    - Fix validation_args Heisenberg uncertainty: only validation logic should live under self.validate_args. E.g., validate_args=True would sometimes imply `x=floor(x)` which changes behavior thus making debugging impossible because enabling validation *changes* values.
    - Corrected `Geometric` swapping of validate_args` and `allow_nan_stats` default-values.
    
    Fixes #10149
    
    PiperOrigin-RevId: 159872532
    
    * Make HloModule clonable
    
    This CL makes HloModule clonable, which is necessary when we want to run the same compilation twice with the same input.
    
    PiperOrigin-RevId: 159874256
    
    * Internal change.
    
    PiperOrigin-RevId: 159876942
    
    * Implement alternative `monte_carlo.expectation_v2`. This function implements
    the reparameterization and score-gradient tricks and does not depend on
    tf.Distribution like inputs.
    
    PiperOrigin-RevId: 159877923
    
    * In SE_ASSIGN_OR_RETURN change ConsumeValueOrDie to the preferred std::move ValueOrDie.
    
    PiperOrigin-RevId: 159879754
    
    * If rank is unknown, do not add output shapes to transpose nodes.
    
    PiperOrigin-RevId: 159879840
    
    * Move sparse_fill_empty_rows to new, *significantly* faster, C++ kernel for everyone.
    
    Also fix a bug in the C++ op when the input ST has 0 elements.
    
    PiperOrigin-RevId: 159880044
    
    * Add support of label_keys to DebugClassifier
    
    PiperOrigin-RevId: 159883986
    
    * Register devices under their legacy names
    
    Because some higher level APIs continue to use the legacy name format,
    when using ClusterSpec propagation, we need to ensure that we register
    the devices under their legacy names as well as their canonical names.
    
    PiperOrigin-RevId: 159885777
    
    * [BatchNorm] Minor fixes to TF doc
    
    PiperOrigin-RevId: 159886125
    
    * Generating TBAA metadata causes the LLVM to miscompile after
    https://reviews.llvm.org/rL305938).  Disable TBAA (to stop the miscompiles)
    while we fix the root issue.
    
    PiperOrigin-RevId: 159895736
    
    * Improve score-trick to be a valid Csiszar f-Divergence yet numerically stable.
    
    PiperOrigin-RevId: 159896013
    
    * Support advisor in all places (Command line, APIs)
    Add expensive operation checker
    
    PiperOrigin-RevId: 159897279
    
    * Added canned estimators to Tensorflow library. List of added estimators:
    * DNNClassifier
    * DNNRegressor
    * LinearClassifer
    * LinearRegressor
    * DNNLinearCombinedClassifier
    * DNNLinearCombinedRegressor
    
    PiperOrigin-RevId: 159898954
    
    * Alligned how model-fns handled params among linear/dnn/combined estimators.
    
    PiperOrigin-RevId: 159899925
    
    * Fixed cmake tests.
    
    PiperOrigin-RevId: 159901417
    
    * [XLA:CPU] Add VLOGs to cpu_compiler.cc
    
    PiperOrigin-RevId: 159902919
    
    * Make occurence (op run times and op definition) selectable
    in all views to address the loop problem.
    
    When a node is in loop, its execution times are accumulated, its run times
    will increase.
    
    PiperOrigin-RevId: 159912429
    
    * [XLA] Small error message improvement in binop shape inference.
    
    PiperOrigin-RevId: 159920109
    
    * Follow upstream API change from r306058.
    
    PiperOrigin-RevId: 159938416
    
    * [TF:XLA] Update LLVM to upstream revision r306085.
    
    PiperOrigin-RevId: 159946562
    
    * [XLA] Remove unused xla_cpu flag and move another to DebugOptions.
    
    PiperOrigin-RevId: 159952124
    
    * Updates linear.md tutorial
    
    PiperOrigin-RevId: 159956867
    
    * Add TraceMe instrumentation of RunStep in GRPC distributed runtime.
    A unique ID is added to each RunStep call that allows the client and server
    events to be correlated.
    
    PiperOrigin-RevId: 159956950
    
    * [XLA] Add general F32 implementation for ReducePrecision operation.
    
    This only tests with parameter inputs (which is needed to ensure we actually test on GPUs as well as CPUs); there's no point in separately testing with constants.
    
    PiperOrigin-RevId: 159961430
    
    * Java: NativeLibrary: Fix URL in error message.
    
    And add some detail.
    Inspired by #11015
    
    PiperOrigin-RevId: 159962478
    
    * Increase rtol for util_test.
    
    PiperOrigin-RevId: 159971136
    
    * Re-enable IR dumping for the sequential CPU backend.
    
    PiperOrigin-RevId: 159974126
    
    * tfdbg: a few minor fixes and improvements
    
    * Let DumpingDebugWrapperSession and DumpingDebugHook create session_root if it doesn't exist
    * Add README.md to tensorflow/python/debug
    * Add section "Debugging Keras Models with TFDBG" in debugger.md
    
    PiperOrigin-RevId: 159976070
    
    * Add None check for save_path when restoring checkpoints as if something is wrong in tf.train.latest_checkpoint, it will often return None and it's nice to have a common sense check in restore for this. This way log.error says what has happened.
    
    PiperOrigin-RevId: 159979481
    
    * Don't crash if a metagraph fails to load.
    
    PiperOrigin-RevId: 159981628
    
    * Prepare to not include node_def.proto.h in node_def_util.h
    
    The goal is to make kernels mostly independent of proto headers, which will let
    us lock down our .so imports.  This CL makes a bunch of .cc files
    either include node_def.proto.h themselves or not need the definition of
    NodeDef; a second CL will make node_def_util.h not include node_def.proto.h.
    
    RELNOTES: n/a
    PiperOrigin-RevId: 159982117
    
    * Add a few diagnostic flags to help narrow down issues with the LLVM
    backends.
    
    PiperOrigin-RevId: 159982441
    
    * Updated wide-n-deep tutorial code to use core version of estimators and feature-columns.
    
    PiperOrigin-RevId: 159984663
    
    * Modify ControlFlowContext to also respect import_scope in 'values_' and keys of 'external_values_'
    
    PiperOrigin-RevId: 159985290
    
    * Add item's graph to partition_graphs in virtual cluster's run method.
    Put node op name in timeline_label instead of node_name.
    
    PiperOrigin-RevId: 159986583
    
    * Use short-proto for logging purposes.
    
    A short proto will be output on a single log line, making it
    easier for certain automated tools to handle.
    
    PiperOrigin-RevId: 159994005
    
    * Sinh, ArcSinh, Cosh, LogCosh functions added to distributions/python/ops/trig.
    Care is taken to ensure a fair bit of stability.
    
    PiperOrigin-RevId: 159995514
    
    * Updates some examples in examples/learn.
    
    PiperOrigin-RevId: 159996397
    
    * Add kernel tests for boosted_trees.
    
    PiperOrigin-RevId: 160002696
    
    * Avoid doing unecessary work in the OptimizeGraph() function whenever possible
    
    PiperOrigin-RevId: 160003173
    
    * Use std::shared_ptr instead of core::RefCounted for Node::Properties
    
    Also changes Node::Properties to a struct and removes underscores from public member variables. This change should make it easier to work with Properties moving forward as the refcount will be automatically updated.
    
    PiperOrigin-RevId: 160003281
    
    * Make the CPU compiler dump optimized IR along with the unoptimized IR.
    
    PiperOrigin-RevId: 160005257
    
    * Disable flaky run_metadata_test.
    
    PiperOrigin-RevId: 160015399
    
    * BUILD cleanup in tensorflow/tools/...
    
    PiperOrigin-RevId: 160018623
    
    * SinhArcSinh bijector added.
    
    This two-parameter diffeomorphism from R --> R allows for skewness and fatter
    or thinner tails.  See docstring and also
    http://oro.open.ac.uk/22510/1/sinhasinh.pdf
    
    PiperOrigin-RevId: 160019380
    
    * Avoid hardcoded names for temporary files in tests.
    
    These tests (and examples that are run as tests) were using hardcoded names for
    temporary files.  This failed when multiple copies of these tests were run in
    parallel, or even successively by different users, where the second run could
    not overwrite files left by the first.
    
    This change uses the TEST_TMPDIR environment variable used by bazel's test
    runner to choose a temporary directory.   If that directory is not set,
    /tmp is used, as before.
    
    PiperOrigin-RevId: 160026924
    
    * Fix multinomial doc-string, input arg logits expects to log-probabilities and not log-odds.
    
    PiperOrigin-RevId: 160036709
    
    * Made TensorFlow documentation on LSTMs slightly more accurate.
    
    PiperOrigin-RevId: 160047054
    
    * Follow LLVM/ORC upstream API change in r306166.
    
    PiperOrigin-RevId: 160108102
    
    * Move resampler from sonnet to contrib.
    
    PiperOrigin-RevId: 160134565
    
    * [TPUEstimator] Make input_fn invoked properly with eval on CPU.
    
    PiperOrigin-RevId: 160151890
    
    * Deletes iris_val_based_early_stopping example, which uses deprecated ValidationMonitor.
    
    PiperOrigin-RevId: 160154863
    
    * [XLA] Move HLO dumping flags from service_flags to debug_options_flags
    
    This also removes the duplication in the xla_generate_hlo_graph flag.
    
    This CL also moves the actual dumping logic from Executable to the
    hlo_graph_dumper namespace, where it belongs; this is in preparation for
    removing the hlo_dumper callback altogether, since it isn't serving any role
    beyond what a direct call to hlo_graph_dumper would have (b/62872831 has more
    details).
    
    PiperOrigin-RevId: 160154869
    
    * Fix missing variable unref
    
    Direct leak of 56 byte(s) in 1 object(s) allocated from:
        #0 0xf5ee272 in operator new(unsigned long) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0xf5ee272)
        #1 0x1b51394c in tensorflow::AssignVariableOp<Eigen::ThreadPoolDevice, float>::Compute(tensorflow::OpKernelContext*)::'lambda'(tensorflow::Var**)::operator()(tensorflow::Var**) const (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0x1b51394c)
        #2 0x1b5136c0 in std::_Function_handler<tensorflow::Status (tensorflow::Var**), tensorflow::AssignVariableOp<Eigen::ThreadPoolDevice, float>::Compute(tensorflow::OpKernelContext*)::'lambda'(tensorflow::Var**)>::_M_invoke(std::_Any_data const&, tensorflow::Var**) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0x1b5136c0)
        #3 0x1b50b289 in std::function<tensorflow::Status (tensorflow::Var**)>::operator()(tensorflow::Var**) const (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0x1b50b289)
        #4 0x1b50af88 in tensorflow::Status tensorflow::ResourceMgr::LookupOrCreate<tensorflow::Var>(basic_string<char, std::char_traits<char>, std::allocator<char> > const&, basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Var**, std::function<tensorflow::Status (tensorflow::Var**)>) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0x1b50af88)
        #5 0x1b50ac10 in tensorflow::Status tensorflow::LookupOrCreateResource<tensorflow::Var>(tensorflow::OpKernelContext*, tensorflow::ResourceHandle const&, tensorflow::Var**, std::function<tensorflow::Status (tensorflow::Var**)>) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0x1b50ac10)
        #6 0x1b512f1e in tensorflow::AssignVariableOp<Eigen::ThreadPoolDevice, float>::Compute(tensorflow::OpKernelContext*) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0x1b512f1e)
        #7 0x1d1881c7 in tensorflow::ThreadPoolDevice::Compute(tensorflow::OpKernel*, tensorflow::OpKernelContext*) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0x1d1881c7)
        #8 0xf96e0fe in tensorflow::KernelAndDevice::Run(std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0xf96e0fe)
        #9 0xf94f9c8 in TFE_Execute (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0xf94f9c8)
        #10 0xf94356d in TFE_Py_Execute(TFE_Context*, int, char const*, tensorflow::gtl::InlinedVector<TFE_TensorHandle*, 4>*, _object*, tensorflow::gtl::InlinedVector<TFE_TensorHandle*, 2>*, TF_Status*) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0xf94356d)
    
    PiperOrigin-RevId: 160160101
    
    * Simplify strided_slice's shape handling
    
    Now that TensorShape and PartialTensorShape share memory representations, there's no need for an abstract class that makes TensorShape and TensorShapeProto look the same.
    
    RELNOTES: n/a
    PiperOrigin-RevId: 160161618
    
    * Added a tool to report the static information that can be extracted from a TF model.
    
    PiperOrigin-RevId: 160162256
    
    * Properly handle RefEnter, RefExit and RefNextIteration nodes.
    
    PiperOrigin-RevId: 160162338
    
    * Switch tfprof to use proto3
    
    PiperOrigin-RevId: 160163483
    
    * Fixes to cuda_config.h.
    
    PiperOrigin-RevId: 160168545
    
    * Update ops-related pbtxt files.
    
    PiperOrigin-RevId: 160171187
    
    * Adds notes to prevent overfitting for Experiment continous_train_and_eval.
    
    PiperOrigin-RevId: 160172692
    
    * Go: Update generated wrapper functions for TensorFlow ops.
    
    PiperOrigin-RevId: 160172985
    
    * Merge changes from github.
    END_PUBLIC
    
    Note: this CL will break builds.  cl/159887762 to follow to fix all the breakages.
    
    ---
    Commit 2336cdf7f authored by Maxwell Paul Brickner<mbrickn@users.noreply.github.com>
    Committed by gunan<gunan@google.com>:
    Updated link to use HTTPS (#10998)
    
    Howdy!
    
    I just updated a link to use https instead of http.
    
    Thanks!
    ---
    Commit ad0892df1 authored by Luke Iwanski<luke@codeplay.com>
    Committed by Luke Iwanski<luke@codeplay.com>:
    [OpenCL] Fixes run_metadata_test for SYCL
    
     This test is designed to test CUDA specific behavior
    
    ---
    Commit 6b37a0725 authored by Todd Wang<toddwang@gmail.com>
    Committed by GitHub<noreply@github.com>:
    Update comments
    ---
    Commit 1699d904a authored by John Lawson<john@codeplay.com>
    Committed by Luke Iwanski<luke@codeplay.com>:
    [OpenCL] Fixes CUDA specific test run on SYCL (#56)
    
    The testBadParentValuesOnGPU should only be run on CUDA devices, as the
    test checks for particular CUDA behaviour. We don't actually provide a
    SYCL kernel for GatherTree and so it's not a problem that the tests
    don't target SYCL.
    ---
    Commit 3c1946230 authored by myPrecious<Moriadry@users.noreply.github.com>
    Committed by Shanqing Cai<cais@google.com>:
    Java API to get the size of specified input list of operations. (#10865)
    
    * Java API to get the size of specified input list of operations
    
    * remove unnecessary explain to avoid bring a new term to users.
    
    ---
    Commit e911c7480 authored by Luke Iwanski<luke@codeplay.com>
    Committed by Luke Iwanski<luke@codeplay.com>:
    [OpenCL] REGISTER -> REGISTER6
    
    ---
    Commit fbf6c4cec authored by superryanguo<superryanguo@gmail.com>
    Committed by superryanguo<superryanguo@gmail.com>:
    Simplify the Quickstart section with the weblink is better
    
    ---
    Commit 72e2918cc authored by Taehoon Lee<taehoonlee@snu.ac.kr>
    Committed by Taehoon Lee<taehoonlee@snu.ac.kr>:
    Fix typos
    
    ---
    Commit 90c4406b7 authored by Rishabh Patel<patelrishabh@users.noreply.github.com>
    Committed by GitHub<noreply@github.com>:
    Correct the learning rate as per the code snippet
    ---
    Commit 03da61134 authored by Todd Wang<toddwang@gmail.com>
    Committed by GitHub<noreply@github.com>:
    Update ir_array.cc
    ---
    Commit 2df6cd3ac authored by Todd Wang<toddwang@gmail.com>
    Committed by GitHub<noreply@github.com>:
    Another try
    ---
    Commit af0cbace1 authored by Luke Iwanski<luke@codeplay.com>
    Committed by Benoit Steiner<benoitsteiner@users.noreply.github.com>:
    [OpenCL] Transpose to go through Eigen (#10321)
    
    ---
    Commit fc7361081 authored by Luke Iwanski<luke@codeplay.com>
    Committed by Benoit Steiner<benoitsteiner@users.noreply.github.com>:
    [OpenCL] Registers RGBToHSV and HSVToRGB (#91) (#10848)
    
    * [OpenCL] Added RGBToHSV and HSVToRGB
    
    * Aligning '\'
    ---
    Commit 832894ef8 authored by Luke Iwanski<luke@codeplay.com>
    Committed by Benoit Steiner<benoitsteiner@users.noreply.github.com>:
    [OpenCL] Registers AdjustContrastv2 (#10949)
    
    * [OpenCL] Registers AdjustContrastv2 (#93)
    
    * [OpenCL] Extended adjust_contrast_op_benchmark_test for OpenCL (#96)
    
    * [OpenCL] Extended adjust_contrast_op_benchmark_test for OpenCL
    
    * simplified to #ifndef
    
    * Changed to "#if GOOGLE_CUDA"
    
    * Update adjust_contrast_op_benchmark_test.cc
    
    * Added comments
    
    ---
    Commit cb4c2f8d1 authored by Yifei Feng<yifeif@google.com>
    Committed by Yifei Feng<yifeif@google.com>:
    Make TransferBufferToInFeed not virual so it compiles.
    
    ---
    Commit e89f04d80 authored by Yifei Feng<yifeif@google.com>
    Committed by Yifei Feng<yifeif@google.com>:
    Fix calling Literal member functions.
    
    ---
    Commit 15a8df724 authored by Yifei Feng<yifeif@google.com>
    Committed by Yifei Feng<yifeif@google.com>:
    Fix mac build
    clone from meheff's change:
    [XLA] Change return type of DeviceAssignment::Deserialize to fix build
    breakage on mac.
    The mac build had the following error:
    
    error: incomplete type 'xla::DeviceAssignment' used in type trait
    expression
    
    This was due to a static method returning a StatusOr<DeviceAssignment>
    inside of the definition of DeviceAssignment.
    
    ---
    Commit a54d43fa4 authored by Yifei Feng<yifeif@google.com>
    Committed by Yifei Feng<yifeif@google.com>:
    Replace LiteralUtil to Literal in compiler/plugin/executor
    
    ---
    Commit 88a6bb80c authored by Guenther Schmuelling<guschmue@microsoft.com>
    Committed by Guenther Schmuelling<guschmue@microsoft.com>:
    expand inline for debug builds to limit number of symbols
    
    ---
    Commit 62fb49d31 authored by Yifei Feng<yifeif@google.com>
    Committed by Yifei Feng<yifeif@google.com>:
    Fix visibility error for contrib/remote_fused_graph/pylib/BUILD.
    
    ---
    Commit 4c75252f2 authored by Mark Neumann<markn@allenai.org>
    Committed by Mark Neumann<markn@allenai.org>:
    fix initial test values to avoid numerical instability
    
    ---
    Commit b58d98353 authored by sj6077<epik03sj@gmail.com>
    Committed by Benoit Steiner<benoitsteiner@users.noreply.github.com>:
    Fixes of AutoParallel bug (#10368)
    
    * Fix the bug that auto_parallel could replicate variable snapshot name
    
    * Use NodeName in grappler:utils instead of substr, convert variables->variable_def of grappler item
    
    * remove variable_def from grappler item, exclude snapshot nodes from dont_replicate_nodes in auto_parallel
    
    ---
    Commit a286b7db8 authored by Yifei Feng<yifeif@google.com>
    Committed by Yifei Feng<yifeif@google.com>:
    Make debug_test slice integer.
    
    ---
    Commit 97fcfdfa6 authored by Toby Boyd<tobyboyd@google.com>
    Committed by GitHub<noreply@github.com>:
    Fixed path to seq2seq.py and minor formatting
    ---
    Commit 63c1befb8 authored by Anish Shah<shah.anish07@gmail.com>
    Committed by Anish Shah<shah.anish07@gmail.com>:
    Improve docs for tf.nn.depthwise_conv2d_native
    
    ---
    Commit 8d42202b2 authored by Yong Tang<yong.tang.github@outlook.com>
    Committed by Yong Tang<yong.tang.github@outlook.com>:
    Fix mismatched delete in mkl_tfconv_op.cc
    
    This fix fixes mismatched new[]-delete in mkl_tfconv_op.cc
    
    (the file went through clang-format so there are some additional
    changes)
    
    Signed-off-by: Yong Tang <yong.tang.github@outlook.com>
    
    ---
    Commit 26301bd55 authored by Danny Goodman<goodman.danny@gmail.com>
    Committed by Danny Goodman<goodman.danny@gmail.com>:
    fix error format
    
    ---
    Commit b3f33ad46 authored by Yao Zhang<yaozhang@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Make changes to prepare for the fused option of batch norm to be set to None (None means using fused batch norm if possible).
    
    PiperOrigin-RevId: 159649743
    
    ---
    Commit a4a469832 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Add tests for select ops and while loops that produce tuples that contain predicates.
    
    PiperOrigin-RevId: 159645900
    
    ---
    Commit 980d3f2be authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Use C API to implement Operation.name property
    
    This name property is used in many existing tests including those that
    already run with C API enabled (math_ops_test, framework_ops_test,
    session_test, session_partial_run_test, math_ops_test_gpu, etc).
    
    PiperOrigin-RevId: 159645767
    
    ---
    Commit 26239c706 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Previously we didn't have an implementation of BatchNormInference and BatchNormTraining, which gives a linker error if anyone ever tries to call that. A dummy implementation is friendlier than a linker error.
    
    PiperOrigin-RevId: 159645612
    
    ---
    Commit f671c5caa authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    BEGIN_PUBLIC
    Automated g4 rollback of changelist 159570549
    
    PiperOrigin-RevId: 160182040
    
    * Update ops-related pbtxt files.
    
    PiperOrigin-RevId: 160183349
    
    * Merge changes from github followup.
    
    PiperOrigin-RevId: 160183498
    
    * Automated g4 rollback of changelist 160183498
    
    PiperOrigin-RevId: 160189134
    
    * Automated g4 rollback of changelist 160182040
    
    PiperOrigin-RevId: 160190881
    
    * [XLA] Disallow fuse X into Y if there are paths from X to Y which don't fuse
    
    Just because X can fuse into all of its consumers does not mean that those
    consumers can fuse into anything. Depending on the structure of the graph, this
    can either result in no performance win at all or, in the case of recurrent
    networks, a big performance deficit.
    
    PiperOrigin-RevId: 160194058
    
    * First draft of Tensors segment of the programmer's guide.
    
    PiperOrigin-RevId: 160196550
    
    * First draft of variables unit of programmer's guide.
    
    PiperOrigin-RevId: 160196566
    
    * Make xla::Literal moveable.
    
    PiperOrigin-RevId: 160197273
    
    * Automated g4 rollback of changelist 159897279
    
    PiperOrigin-RevId: 160198598
    
    * Updates text_classification example.
    
    PiperOrigin-RevId: 160200457
    
    * Fix backward compatibility test broken by rollback.
    
    PiperOrigin-RevId: 160222187
    
    * Support advisor in all places (Command line, APIs)
    Add expensive operation checker
    
    PiperOrigin-RevId: 160222348
    
    * [XLA] Simplify the fusion heuristic
    
    We had two different aspects of the fusion heuristic:
    - Don't fuse a producer into a consumer if there exists a path from the
      producer to the consumer which cannot be fused.
    - Don't fuse a producer into a consumer if any consumer of the producer cannot
      fuse.
    
    These can be combined into one, simpler, heuristic.
    
    PiperOrigin-RevId: 160222771
    
    * Automated g4 rollback of changelist 160196566
    
    PiperOrigin-RevId: 160222930
    
    * Automated g4 rollback of changelist 160196550
    
    PiperOrigin-RevId: 160222942
    
    * Lets the HParam parser also accept True and False as inputs, since that's how python prints booleans.
    
    PiperOrigin-RevId: 160234658
    
    * Automated g4 rollback of changelist 155070869
    
    PiperOrigin-RevId: 160249526
    
    * [TF:XLA] Inline the sigmoid operation instead of mapping it elementwise.
    
    PiperOrigin-RevId: 160274436
    
    * Make sure all convolution tests are testing non-trivial cases, i.e. where not all inputs are 0, leading to an all-0 output, which masks most possible bugs.
    We do not check-fail on 0-sized dimensions as tests for these special cases
    exist.
    
    PiperOrigin-RevId: 160274593
    
    * Explicitly use "dns" URI scheme when using DNS names or literal IP
    addresses with gRPC.  This avoids problems in environments in which the
    default URI scheme is something other than "dns".
    
    PiperOrigin-RevId: 160276862
    
    * Add RWSE (root weighted squared error) to the WALS estimator.
    
    PiperOrigin-RevId: 160276937
    
    * Don't include node_def.proto.h in node_def_util.h
    
    The goal is to make kernels mostly independent of proto headers, which will let us lock down our .so imports.
    
    RELNOTES: n/a
    PiperOrigin-RevId: 160278032
    
    * [XLA] Add tuple support to Literal::CreateFromShape.
    
    PiperOrigin-RevId: 160278561
    
    * Updates some more examples in examples/learn.
    
    PiperOrigin-RevId: 160278757
    
    * Automated g4 rollback of changelist 160278032
    
    PiperOrigin-RevId: 160280961
    
    * Fixed the bug that Estimator does not make deepcopy of params in constructor
    
    PiperOrigin-RevId: 160281247
    
    * Clean out the config and params in TPUEstimator.
    
    PiperOrigin-RevId: 160281507
    
    * [XLA] Remove the "hlo dumper" parameter of xla::Compiler and its piping.
    
    This dumper is no longer necessary since the restructuring of HLO dumping and
    the addition of MaybeDumpHloModule which heeds to the right flags. The
    remaining bits didn't have additional functionality, but constituted a lot of
    boilerplate that has to be propagated throughout the backends.
    
    PiperOrigin-RevId: 160281798
    
    * [TF:XLA] Refactor the sigmoid op as a rescaled tanh.
    
    PiperOrigin-RevId: 160282472
    
    * Fix uninitialized values in TensorForest code.
    
    PiperOrigin-RevId: 160284420
    
    * [TF:XLA] Update Tensorflow LLVM release to upstream r306370.
    
    Fix broken XLA build.
    
    PiperOrigin-RevId: 160284588
    
    * tfdbg example: fix --tensor_size issue in debug_fibonacci
    
    PiperOrigin-RevId: 160290541
    
    * [SE] ThenConvolveWithAlgorithm vlogs algorithm configs.
    
    PiperOrigin-RevId: 160292762
    
    * Fix documentation of Estimator class (invalid quotes).
    
    PiperOrigin-RevId: 160292803
    
    * Shrink the test size to avoid OOM error on old GPUs.
    
    PiperOrigin-RevId: 160292834
    
    * [TF:XLA] Reject operators with resource outputs on CPU and GPU devices.
    
    We were checking for resource inputs but not resource outputs, which led to accidental fusion of some TensorArray ops on CPU and GPU.
    
    PiperOrigin-RevId: 160294302
    
    * Add a functionality of remote fused graph transformation to fuse graphs by op type
    
    PiperOrigin-RevId: 160300039
    
    * Cudnn compatible LSTMCell and LSTMBlockCell
    
    PiperOrigin-RevId: 160300668
    
    * [XLA] Remove "operand" argument from HandleReducePrecision.
    
    PiperOrigin-RevId: 160301461
    
    * Added more reduce window tests.
    
    PiperOrigin-RevId: 160301509
    
    * Updates more text classification examples in examples/learn.
    
    PiperOrigin-RevId: 160305131
    
    * Use C API to implement Operation._output_types
    
    This change first converts the _output_types member to a property and
    then implements it using C API if it is enabled.
    
    PiperOrigin-RevId: 160306227
    
    * Add more tests for BatchNormTraining.
    RELNOTES: n/a
    
    PiperOrigin-RevId: 160307959
    
    * Update path to print_selective_registration_header.py in comment
    
    PiperOrigin-RevId: 160308173
    
    * Migrate TensorForest v4 python to contrib.
    
    PiperOrigin-RevId: 160308805
    
    * Automated g4 rollback of changelist 159454657
    
    PiperOrigin-RevId: 160314706
    
    * TESTFIX:  distributions:trig_test wasn't passing in ASAN mode.
    
    PiperOrigin-RevId: 160315597
    
    * tfdbg doc: fixes and improvements
    
    PiperOrigin-RevId: 160318411
    
    * Add a time estimation to HloCostAnalysis and represent properties as a map so that adding more properties will be easier, e.g. in a sub-class.
    
    PiperOrigin-RevId: 160318494
    
    * tfdbg: revert dns:/// prefix in gRPC mode
    
    PiperOrigin-RevId: 160319348
    
    * Moves TensorCApi from c_api.cc to c_api_internal.h, where it can be used
    by other code that require access to the underlying TensorBuffers.
    
    PiperOrigin-RevId: 160323362
    
    * Readd the new tensors and variables documents, with tests passing.
    
    PiperOrigin-RevId: 160324191
    
    * Make ResourceHandle not be a proto
    
    I'm trying to make core/kernels independent of protos.  Currently the dtype ResourceHandle is itself a proto.  After this CL, ResourceHandle is a normal C++ type which gets converted to/from ResourceHandleProto at (de)serialization time.
    
    RELNOTES: n/a
    PiperOrigin-RevId: 160329002
    
    * Minor cleanup: remove unused dependencies and inclusions
    
    PiperOrigin-RevId: 160334030
    
    * Add name_scopes to mnist_deep.py for a cleaner graph layout.
    
    PiperOrigin-RevId: 160338775
    
    * Add note about `tf.test.mock` to docs for `tf.test`
    
    PiperOrigin-RevId: 160338811
    
    * Internal change.
    
    PiperOrigin-RevId: 160339087
    
    * Fix bugs in ScatterNd and add ScatterNdNonAliasingAdd.
    
    tf.scatter_nd_non_aliasing_add acts similarly to tf.scatter_nd_add but
    works on non-ref objects (i.e., Tensors -- not Variables).  This means
    it has a gradient with respect to the primary input as well as the
    updates.  It does its best to avoid making extra copies of the input.
    
    PiperOrigin-RevId: 160339328
    
    * Update ops-related pbtxt files.
    
    PiperOrigin-RevId: 160340888
    
    * Add checkpoint conversion for models that use the attention mechanism implemented in tensorflow/contrib/legacy_seq2seq/python/ops/seq2seq.py.
    
    PiperOrigin-RevId: 160340994
    
    * Go: Update generated wrapper functions for TensorFlow ops.
    
    PiperOrigin-RevId: 160341769
    
    * Merge changes from github.
    
    PiperOrigin-RevId: 160344052
    
    * Update ops-related pbtxt files.
    
    PiperOrigin-RevId: 160346151
    
    * Load py_test in tensorflow/contrib/boosted_trees/BUILD to fix pip test
    visibility failures.
    
    * Disable boosted_trees tests on mac while they are being debugged.

commit 169e6d103259efc68b88fb1b0c7cd8021ddf97a0
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Fri Jun 23 17:21:45 2017 -0700

    Disable flaky run_metadata_test.
    
    PiperOrigin-RevId: 160015399

commit 9235dcb638617c666cc4d14ea770131c3b767173
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed Jun 14 16:43:57 2017 -0700

    Fix a flaky test in graph_transforms:transforms_test
    
    PiperOrigin-RevId: 159044391

commit 1b5235fd897f7ea5cffc715300f67b4dc852fa27
Author: Jonathan Hseu <jhseu@google.com>
Date:   Fri Jun 9 10:37:18 2017 -0700

    Merge changes from github.
    END_PUBLIC
    
    ---
    Commit f0e185d1f authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Better handle nodes with a variable number of outputs
    
    PiperOrigin-RevId: 158435028
    
    ---
    Commit bc3e20807 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove unused BUILD dependencies
    
    PiperOrigin-RevId: 158431059
    
    ---
    Commit a0c80e4d5 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Delete unnecessary (mistakenly duplicated) logging message.
    
    PiperOrigin-RevId: 158428506
    
    ---
    Commit b6ad1d747 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Adds DNN-only tests for DNNLinearCombinedClassifier.
    
    PiperOrigin-RevId: 158423119
    
    ---
    Commit ddbb58034 authored by Shanqing Cai<cais@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove unnecessary pylint disable
    
    PiperOrigin-RevId: 158416140
    
    ---
    Commit fcaa724e2 authored by Luke Iwanski<luke@codeplay.com>
    Committed by gunan<gunan@google.com>:
    [OpenCL] Cleans pack and unpack ops (#10336)
    
    * [OpenCL] Cleans pack op
    
    * [OpenCL] Cleans unpack op
    
    ---
    Commit 2f53cacb2 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix a test failure of quantization_utils_test on ASAN
    
    PiperOrigin-RevId: 158414538
    
    ---
    Commit 50b2f951c authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update ops-related pbtxt files.
    
    PiperOrigin-RevId: 158413455
    
    ---
    Commit 1e90b78e9 authored by Brennan Saeta<saeta@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add CacheDataset ops.
    
    Some input pipelines may pull down data from remote webservers or perform
    expensive processing. In order to avoid extraneous work, we now support
    caching the dataset (e.g. on disk).
    
    PiperOrigin-RevId: 158411901
    
    ---
    Commit e16cd2ede authored by Taehoon Lee<taehoonlee@snu.ac.kr>
    Committed by gunan<gunan@google.com>:
    Fix typos (#10533)
    
    ---
    Commit 50d80ddf9 authored by Jonathan Hseu<jhseu@google.com>
    Committed by Jonathan Hseu<jhseu@google.com>:
    Fix fft_ops_test.py for CPU
    
    ---
    Commit d35cbbb44 authored by Mustafa Ispir<ispir@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add weight-column support to the heads.
    
    PiperOrigin-RevId: 158409180
    
    ---
    Commit 7fb52cd54 authored by Justin Lebar<jlebar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Don't crash when displaying XLA metrics if they happen to be negative.
    
    PiperOrigin-RevId: 158407664
    
    ---
    Commit 12a7a752a authored by Jianfei Wang<me@thinxer.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    Add a tip for tf.train.LoggingTensorHook (#10237)
    
    `INFO` logs are not printed by default unless in IPython. Add a friendly tip for newcomers.
    ---
    Commit 216dcbf1e authored by Luke Iwanski<luke@codeplay.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    [OpenCL] Cleans reduction ops (#10340)
    
    * [OpenCL] Cleans reduction_ops_max.cc
    
    * [OpenCL] Cleans reduction_ops_mean.cc
    
    * [OpenCL] Cleans reduction_ops_min.cc
    
    * [OpenCL] Cleans reduction_ops_prod.cc
    
    * [OpenCL] Cleans reduction_ops_sum.cc
    
    ---
    Commit 2b351062a authored by Androbin<robin.richtsfeld@gmail.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    Improve docs for selective registration headers (#10351)
    
    * Improve docs for selective registration headers
    
    progressing #10299
    
    * Update print_selective_registration_header.py
    
    * Mention both flags
    
    -DSELECTIVE_REGISTRATION and -DSUPPORT_SELECTIVE_REGISTRATION
    
    ---
    Commit ee919510f authored by Yun Peng<pcloudy@google.com>
    Committed by gunan<gunan@google.com>:
    Re-enable some python tests in Windows Bazel build (#10526)
    
    ---
    Commit b0e881457 authored by Androbin<robin.richtsfeld@gmail.com>
    Committed by gunan<gunan@google.com>:
    [Bash] Declare and assign separately (#10509)
    
    As proposed by static analysis tool:
    https://github.com/koalaman/shellcheck/wiki/SC2155
    ---
    Commit 284901b08 authored by Androbin<robin.richtsfeld@gmail.com>
    Committed by gunan<gunan@google.com>:
    [Bash] Remove unquoting quotes (#10506)
    
    As proposed by static analysis tool:
    https://github.com/koalaman/shellcheck/wiki/SC2027
    ---
    Commit 2a1f11556 authored by ksellesk<zhengdachuan200305@gmail.com>
    Committed by ksellesk<zhengdachuan200305@gmail.com>:
    Fix AttributeError in resnet.py
    
    There is no function tf.softmax() in Tensorflow 1.x.
    
    When running the old code, Python interpreter complains:
    
    File "resnet.py", line 152, in res_net_model
    prediction, loss = res_net(x, y)
    File "resnet.py", line 148, in res_net
    return tf.softmax(logits), loss
    AttributeError: 'module' object has no attribute 'softmax'
    
    ---
    Commit 1d68f729b authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove unneeded BUILD dependency
    
    PiperOrigin-RevId: 158391996
    
    ---
    Commit 08ed32dbb authored by Yun Peng<pcloudy@google.com>
    Committed by gunan<gunan@google.com>:
    Windows: Make TensorFlow build without --cpu=x64_windows_msvc (#10466)
    
    * Windows: Make TensorFlow build without --cpu=x64_windows_msvc
    
    Since from Bazel 0.5.0, MSVC toolchain became the default toolchain on
    Windows. So --cpu=x64_windows_msvc is not required as long as we adjust
    the BUILD files in TensorFlow.
    
    --cpu=x64_windows_msvc is also supported for now, but is depracated.
    The configuration for cpu value x64_windows_msvc is a duplicate of
    x64_windows, which should be removed in the future.
    
    * Fix breakage on macOS
    
    ---
    Commit 02dbe153a authored by Androbin<robin.richtsfeld@gmail.com>
    Committed by gunan<gunan@google.com>:
    [Bash] Simplify Conditional (#10503)
    
    ---
    Commit c07bc581f authored by Androbin<robin.richtsfeld@gmail.com>
    Committed by gunan<gunan@google.com>:
    [Bash] Prefer read -a to split path (#10508)
    
    As proposed by static analysis tool:
    https://github.com/koalaman/shellcheck/wiki/SC2207
    ---
    Commit 0a389674d authored by Androbin<robin.richtsfeld@gmail.com>
    Committed by gunan<gunan@google.com>:
    [Bash] Prefer [ p ] && [ q ] over [ p -a q ] (#10507)
    
    As proposed by static analysis tool:
    https://github.com/koalaman/shellcheck/wiki/SC2166
    ---
    Commit 87a008ec3 authored by Jonathan Hseu<vomjom@vomjom.net>
    Committed by gunan<gunan@google.com>:
    Delete non-deterministic testEmpty() test (#10512)
    
    ---
    Commit 3a2971bd8 authored by Frank Chen<frankchn@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Adds the base for ClusterResolvers, a new way of communicating with and retrieving cluster information for running distributed TensorFlow.
    
    Implementations of this class would eventually allow users to simply point TensorFlow at a cluster management endpoint, and TensorFlow will automatically retrieve the host names/IPs and port numbers of TensorFlow workers from the cluster management service.
    
    PiperOrigin-RevId: 158358761
    
    ---
    Commit 28b4e7f04 authored by Jonathan Hseu<vomjom@vomjom.net>
    Committed by gunan<gunan@google.com>:
    Disable stage_op_test and map_stage_op_test (#10516)
    
    ---
    Commit 390e57a75 authored by Yan (Asta) Li<yanastali@users.noreply.github.com>
    Committed by Benoit Steiner<benoitsteiner@users.noreply.github.com>:
    Check EIGEN_MAX_ALIGN_BYTES to prevent mod-by-0 (#10380)
    
    * Check EIGEN_MAX_ALIGN_BYTES to prevent mod-by-0
    
    If EIGEN_MAX_ALIGN_BYTES is set to 0, alignment checks that mod by EIGEN_MAX_ALIGN_BYTES fail at runtime.
    
    * Returns true, as in tensorflow/core/framework/tensor.h
    * Update unit tests
    
    * Enable tests only if EIGEN_MAX_ALIGN_BYTES > 0
    
    ---
    Commit cd5ac40b3 authored by Peter Hawkins<phawkins@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Update LLVM to upstream revision r304927.
    Add LLVM build rules for the LLVM AMDGPU backend, commented out by default. Fixes issue #10437.
    
    PiperOrigin-RevId: 158351480
    
    ---
    Commit 91cb809bd authored by David Norman<DavidNorman@users.noreply.github.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    [XLA] Add ability to run the XLA unit tests against a different device (#9759)
    
    * Add ability to run the XLA unit tests against a different device
    
    * Allow for multiple extra backend devices
    
    * Correct merge error
    
    * Include options for additional tags
    
    ---
    Commit aff4d124b authored by Yuxin Wu<ppwwyyxxc@gmail.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    Compare base_dtype instead of dtype in piecewise_constant (#10280)
    
    * Compare base_dtype instead of dtype in piecewise_constant
    
    Compare base_dtype instead of dtype in piecewise_constant. Fix #10086
    
    * add unit test
    
    * Small lint fix and comment
    
    ---
    Commit 845539f98 authored by Jianwei Xie<xiejw@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add evaluation test for linear classifier (n==2 or n >2).
    
    PiperOrigin-RevId: 158340296
    
    ---
    Commit 7c46214ab authored by Jonathan Hseu<vomjom@vomjom.net>
    Committed by GitHub<noreply@github.com>:
    Fix numpy 1.13 incompatibilities (#10501)
    
    * Fix numpy 1.13 incompatibilities
    
    * Skip tests with numpy 1.13.0
    
    ---
    Commit 4572c41df authored by gunan<gunan@google.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    A few changes to kernel_tests. (#10502)
    
    * Disable reader_ops_test on windows.
    
    * Run buildifier on kernel_tests/BUILD
    
    * Mark map_stage_op_test as large.
    
    * Set the size of stage_op_test to large
    
    ---
    Commit 892293d98 authored by Brennan Saeta<saeta@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Set a default for datasets end_of_sequence.
    
    While all datasets carefully set the end_of_sequence to true at the
    appropriate time, some datasets might forget to set it to false in the normal
    case. In order to avoid potential undefined behavior, we set the
    end_of_sequence variable to be false by default.
    
    PiperOrigin-RevId: 158337799
    
    ---
    Commit 187404eac authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Setup the env to since ops such as MatchFileOp rely on it.
    
    PiperOrigin-RevId: 158336344
    
    ---
    Commit 2741561c8 authored by Justine Tunney<jart@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix up vz_projector script structure
    
    We now make sure scripts and HTML imports are declared in the correct
    places. In the future, pedantically listing script tags should not be
    necessary.
    
    PiperOrigin-RevId: 158334306
    
    ---
    Commit beeaade46 authored by Kay Zhu<kayzhu@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Resubmit a reverted change. Original description:
    
    [XLA] Enable HloEvaluator for constant folding, also merged a few operations
    from hlo_constant_folding to hlo_evaluator.
    
    Additionally:
    - In ShapeUtil::ForEachIndex:
        * fix a bug where visitor is called when the shape has zero elements (e.g., F32{1,0})
        * added test case for ForEachIndex.
    
    - In HloEvaluator:
        * Instead of copying and caching a Constant instruction, return the literal directly if the instruction is constant.
        * Fix an issue where TUPLE and OPAQUE primitives are not keyed in the templated typed_visitor.
        * Use (fixed) LiteralUtil::Populate to populate resulting literal, fixes the preexisting bug in the evaluator where R0 and shape with zero size dimensions are not handled.
        * Refactor ElementWiseUnaryOp and HandleCompare to be templatized on the operand's type.
        * Refactor IsFinite to be top level since it is only applicable to floats and the return type is always boolean.
        * Change from std::remainder to std::fmod for kRemainder to be compliant with existing XLA behavior.
        * Change from std::max and std::min to std::fmax and std::fmin to handle NaNs.
        * Minor comments fix.
    
    PiperOrigin-RevId: 158330052
    
    ---
    Commit b94540e6f authored by Toby Boyd<tobyboyd@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    tf.layers.conv2d use_bias=True to use nn.bias_add
    
    PiperOrigin-RevId: 158326493
    
    ---
    Commit 379aa9911 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Go: Update generated wrapper functions for TensorFlow ops.
    
    PiperOrigin-RevId: 158325855
    
    ---
    Commit 4e529f0f1 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update ops-related pbtxt files.
    
    PiperOrigin-RevId: 158325293
    
    ---
    Commit 0a9d2dac0 authored by Yuefeng Zhou<yuefengz@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add a util function in virtual placer to return canonicalized device string, which can be used to fix the node's device field before passing them to the maxcut algorithm.
    
    PiperOrigin-RevId: 158322753
    
    ---
    Commit 2d8da1d9b authored by Daniel Ylitalo<daniel@blodan.se>
    Committed by gunan<gunan@google.com>:
    Recognize CPU core count in FreeBSD (#10490)
    
    ---
    Commit c19e6cac0 authored by Peter Hawkins<phawkins@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [TF:XLA] Initial implementation of TensorArray ops.
    
    The XLA implementation of TensorArrays is more restrictive than regular TensorArrays:
    * XLA TensorArrays must have dynamic_size=False.
    * all elements in an XLA TensorArray must have the same shape.
    * writes always add their values to any existing values; neither reads nor writes ever issue errors. Out-of-bounds writes currently wrap.
    
    Refactor Variable handling in the TF/XLA bridge. Use a XlaVariable* to refer to variables inside compilation rather than a numerical ID. Allow for variables that don't correspond to variables known to the user. Also use XlaVariable to handle TensorArrays.
    
    PiperOrigin-RevId: 158322041
    
    ---
    Commit b5e8d3086 authored by Peter Hawkins<phawkins@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [TF:XLA] Refactor randomized tests to allow testing of larger inputs without running out of memory.
    
    PiperOrigin-RevId: 158321431
    
    ---
    Commit 5d90bbaac authored by Kay Zhu<kayzhu@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Disable constant_folding in test base, so that intended test code paths
    would not be elided by constant_folding pass.
    
    PiperOrigin-RevId: 158317641
    
    ---
    Commit 036ce8ba6 authored by Luke Iwanski<luke@codeplay.com>
    Committed by gunan<gunan@google.com>:
    [OpenCL] Cleans dense_update_ops (#10335)
    
    * [OpenCL] Cleans dense_update_ops
    
    * Acts on feedback from: #10335#discussion_r120536460
    
    ---
    Commit 85f968125 authored by Luke Iwanski<luke@codeplay.com>
    Committed by gunan<gunan@google.com>:
    [OpenCL] Cleans cast operation (#10330)
    
    * [OpenCL] Removes not needed typedef for SYCLDevice
    
    * [OpenCL] Fixes formatting
    
    * [OpenCL] use SYCLDevice for int32 cast case
    
    ---
    Commit bff5e72da authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix typo.
    
    PiperOrigin-RevId: 158310742
    
    ---
    Commit 38249d6be authored by Shanqing Cai<cais@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Swap the order of NanTensorHook and custom hooks
    
    to ensure that when the training encounteres NaN's in the loss function, user-supplied hooks such as tf_debug.LocalCLIDebugHook can still be used to debug the root cause of the numeric issues.
    
    PiperOrigin-RevId: 158310249
    
    ---
    Commit 599727c65 authored by Eli Bendersky<eliben@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Propagate debug option flags to hlo_test_base.
    
    Specific HLO tests have to replace the generic test_main target with a manual
    main() that invokes RUN_ALL_TESTS.
    
    To get access to a module with debug options set up, a new convenience method
    is created on HloTestBase.
    
    Initially algebraic_simplifier_test is modified as a canary; in a followup
    we'll convert all HLO tests to this approach.
    
    PiperOrigin-RevId: 158309488
    
    ---
    Commit 0770393e9 authored by Eric Liu<ioeric@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [Tensorboard] Add a trace viewer component to TensorBoard.
    
    We make the trace viewer a separate app; otherwise, there would be dependency
    conflicts (e.g. Polymer) between the trace viewer app and the tensorboard app.
    The trace viewer app would be served by a plugin, and Tensorboard dashboard will integrate trace viewer app using iframe in the
    future.
    
    This CL also added "mominify" support for link import HTML tags in the
    tensorboard home-grown java vulnizer; otherwise, the vulcanized trace viewer code
    would crash the java vulcanizer.
    
    For open-source build, we add a denpendency on the Catapult github repository
    (https://github.com/catapult-project/catapult/tree/master/tracing). We use a bazel genrule to vulcanize a trace viewer binary which is then used in the
    tf-trace-viewer component.
    
    PiperOrigin-RevId: 158309408
    
    ---
    Commit 85e832201 authored by RJ Ryan<rjryan@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Support unknown emit shapes in tf.nn.raw_rnn.
    
    PiperOrigin-RevId: 158308002
    
    ---
    Commit edb5fed7f authored by Mustafa Ispir<ispir@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add label-vocab support to binary logistic head.
    Add assertion that binary classifier label is in range [0., 1.]
    Fixed Classifier Integration tests.
    
    PiperOrigin-RevId: 158307521
    
    ---
    Commit f8e1cf8fa authored by Justine Tunney<jart@google.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    Open up visibility of tf_imports (#10500)
    
    This also fixes the definition of Clutz.
    ---
    Commit 9fd7cf054 authored by Luke Iwanski<luke@codeplay.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    [OpenCL] Cleans relu ops (#10343)
    
    * [OpenCL] register relu ops to gpu types (no half)
    
    * [OpenCL] Removes #undef EIGEN_USE_SYCL
    
    ---
    Commit 09c1455e3 authored by Luke Iwanski<luke@codeplay.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    [OpenCL] Cleans reverse_op.cc (#10346)
    
    ---
    Commit b7892a30f authored by orome<royl@aldaron.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    Clarify tf.matmul documentation (#10381)
    
    * Update math_ops.py
    
    * Fix non-ascii character
    
    ---
    Commit 9786b7062 authored by Luke Iwanski<luke@codeplay.com>
    Committed by Benoit Steiner<benoitsteiner@users.noreply.github.com>:
    [OpenCL] Cleans StridedSlice Op (#10314)
    
    * [OpenCL] Cleans StridedSlice Op
    
    * [OpenCL] Removes half from registred types
    
    ---
    Commit f105df047 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    In the CUDA path of depthwise_conv2d, optimize backward filter convolution for images 2 or 4 times smaller than 16x16. Also initialize in_cols from blockDim, to fix the regression caused in CL 157906773.
    
    PiperOrigin-RevId: 158296136
    
    ---
    Commit 492afc2e3 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Go: Update generated wrapper functions for TensorFlow ops.
    
    PiperOrigin-RevId: 158295169
    
    ---
    Commit abe0877ef authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add bazel version check to .configure
    
    PiperOrigin-RevId: 158294569
    
    ---
    Commit b702e7e79 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update ops-related pbtxt files.
    
    PiperOrigin-RevId: 158294289
    
    ---
    Commit 94085bee7 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Replace std::function object with regular function.
    
    The function is called recursively, and the std::function object had only existed to allow recursion from within a lambda expression. A regular function should be cheaper than a polymorphic function wrapper.
    
    PiperOrigin-RevId: 158292415
    
    ---
    Commit ba656b261 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Use template specialization instead of overloaded methods. This is a more appropriate tool here. NFC
    
    PiperOrigin-RevId: 158292035
    
    ---
    Commit 55f987692 authored by Yutaka Leon<yleon@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
      Make tf.contrib.lookup  python functions use the kernels v2 that uses the resource tensor as handler.
    
    PiperOrigin-RevId: 158291836
    
    ---
    Commit ebae3deba authored by Wei Ho<weiho@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Switch back to max_num_rows_to_load instead of reading slice by slice due to performance regression from network overhead.
    
    Add check when using initializing values to avoid seg fault
    
    PiperOrigin-RevId: 158291218
    
    ---
    Commit 7b4c01794 authored by RJ Ryan<rjryan@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Support numpy-style padding and slicing of tf.spectral.rfft/irfft to match the desired FFT length.
    
    Fixes incorrect RFFT/IRFFT results when fft_length does not match the input dimension.
    
    PiperOrigin-RevId: 158289991
    
    ---
    Commit fdb8e2935 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update iOS examples to use CocoaPods, and moved to tensorflow/examples/ios
    
    PiperOrigin-RevId: 158289285
    
    ---
    Commit d86167b5f authored by Amit Patankar<amitpatankar@google.com>
    Committed by Amit Patankar<amitpatankar@google.com>:
    Merging rc2 back into master.
    
    ---
    Commit dffea202a authored by Eli Bendersky<eliben@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Clean up some code after previous CL
    
    PiperOrigin-RevId: 158282834
    
    ---
    Commit 7b5302af0 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Adds ability to set a "family" attribute in Tensorflow summaries, which
    controls the "tab name" of the summary that is displayed.
    
    This solution keeps using name_scope to keep names unique, but then prefixes the tag with the family name if provided.
    
    PiperOrigin-RevId: 158278922
    
    ---
    Commit 611c82b5b authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Adds integration test for DNNLinearCombined((Classifier)|(Regressor)).
    
    PiperOrigin-RevId: 158278512
    
    ---
    Commit cc6c91a9a authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove a further unused proto header inclusion
    
    PiperOrigin-RevId: 158278026
    
    ---
    Commit 9f17c26ca authored by Mark Heffernan<meheff@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Add HloLocation to dataflow analysis.
    Add an HloLocation abstraction to dataflow analysis which indicates where (in the output of what instruction and at which index) an HloValue may appear. Previously only uses were stored with an HLO value where a use is an edge in the HLO graph (instruction, operand number and ShapeIndex).
    
    Also, change the handling of tuple-shaped kSelect instructions when ssa_form is true. Previously a phi value would be created. With this change the the value set instead contains the union of it's inputs identical to the ssa_form=false case.
    
    PiperOrigin-RevId: 158276598
    
    ---
    Commit b9d5e1441 authored by Eli Bendersky<eliben@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Start collecting flags for debug options in a single place.
    
    ClientLibraryTestBase will now parse command-line flags for debug options
    automatically, permitting subclasses to override certain options by using
    mutable_debug_options.
    
    main() still has to call AppendDebugOptionsFlags() explicitly before running
    the TF flag parser. In the mean-time, this CL leaves flag handling to the
    current "legacy" approach. However, this is part of a larger plan to move *all*
    debugging flags for XLA into the DebugOptions message and expose them as flags
    from a single place. The other flags (which are not controlling debugging
    options) will have to be propagated more explicitly.
    
    PiperOrigin-RevId: 158276294
    
    ---
    Commit 3b6fe94bb authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Properly handle shape nodes that have a preexisting control dependency
    
    PiperOrigin-RevId: 158274845
    
    ---
    Commit 1d67379d5 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Minor cleanup
    
    PiperOrigin-RevId: 158268933
    
    ---
    Commit 41997756c authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Sort header inclusions; define EIGEN_USE_THREADS where headers depend on it.
    
    PiperOrigin-RevId: 158267803
    
    ---
    Commit 85355f015 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add missing header inclusion
    
    PiperOrigin-RevId: 158265934
    
    ---
    Commit 3cf88d390 authored by Gunhan Gulsoy<gunan@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    When GPU is configured, do not require --config=cuda.
    Also fix indentation in configure.
    
    PiperOrigin-RevId: 158232959
    
    ---
    Commit f48673b50 authored by Luke Iwanski<luke@codeplay.com>
    Committed by gunan<gunan@google.com>:
    [OpenCL] Removes ReductionFunctor for SYCLDevice (#10326)
    
    We are using Eigen implementation
    ---
    Commit 1b6453bec authored by Joan Puigcerver<joapuipe@gmail.com>
    Committed by gunan<gunan@google.com>:
    Fixes issue #10258 (#10366)
    
    On CUDA versions previous to 8.0, only __shared__ variables could be declared as static in the device code.
    ---
    Commit cd56a638d authored by Beomsu Kim<123bskim@naver.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    Fixed wrong range in docstring (#10272)
    
    ---
    Commit d13ae380c authored by Micha? Jastrz?bski<michal.jastrzebski@intel.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    Fix CMD in Dockerfile (#10444)
    
    Currently Notebook fails execution because default user for this container is root, and unless explicitly allowed, jupyter notebook will not start.
    ---
    Commit 8118ab4ec authored by Simon Perkins<simon.perkins@gmail.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    Support partial gets in MapStagingArea (#10276)
    
    * Modify map staging area tests
    
    - size from `small` to `medium`
    - introduce 2 shards
    
    * Add partial get support in MapStagingArea
    
    A partial list of tensors in a (key, value) map entry can now be
    requested. Once all tensors associated with the entry are removed,
    it is removed from the map.
    
    * Correct output/indices mismatch errors
    
    * Rename IncompleteTuple to OptionalTuple
    
    * Add partial get test with indices
    
    * Add some more index checks
    
    * Improve stage test case graph creation
    
    Test sessions (and default graphs) are reused by default.
    Create explicit, finalized graphs in each test to prevent
    possible interactions between stateful Staging Areas and
    others ops created in separate tests.
    
    * Make staging area tests small and remove shards
    
    They were originally made 'medium' to ameliorate timeouts in the test
    case, but they usually run in ~1s so they should be small.
    
    * Improve imports
    
    Avoid importing base tensorflow package
    
    * Support both python 2 and python 3 range.
    
    * Set map_stage_op_test to size=large
    
    * Convert the tests to size=medium
    
    ---
    Commit 0df102b0a authored by Androbin<robin.richtsfeld@gmail.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    Update `configure` script sample (#10455)
    
    The `configure` script was changed regularly since the generation of the sample.
    This PR updates the sample to reflect those changes.
    ---
    Commit f6dc1ac61 authored by Earthson Lu<Earthson.Lu@gmail.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    MKL_INSTALL_PATH should not be ignore when given (#10180)
    
    * MKL_INSTALL_PATH should not be clear when given
    
    * fix overwrite by default
    
    ---
    Commit 8ad6a036e authored by Asim Shankar<ashankar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Java: Update Maven release to 1.2.0-rc2
    
    PiperOrigin-RevId: 158212897
    
    ---
    Commit 15eddf035 authored by Fritz Obermeyer<fritz.obermeyer@gmail.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    Export C API symbols in _pywrap_tensorflow_internal.so (#10469)
    
    * Export C API symbols
    
    * Export C API symbols under config:default
    
    ---
    Commit 754e12668 authored by Luke Iwanski<luke@codeplay.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    [OpenCL] Removes half concat op registration (#10331)
    
    ---
    Commit cfdc22dee authored by Peng Yu<yupbank@users.noreply.github.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    fix the error (#10293)
    
    ---
    Commit 58747e357 authored by Joel Hestness<jthestness@gmail.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    PhiloxRandom: Fix race in GPU fill function (#10298)
    
    * PhiloxRandom: Fix race in GPU fill function
    
    The PhiloxRandom fill kernel for the GPU had race conditions that caused the
    outputs to be non-deterministic. In particular, the code previously executed
    with N GPU threads (# thread contexts per GPU), but it would only advance the
    fill addresses by N-1 stride in each step. This incorrect stride caused the
    0th and N-1st threads to write to the same memory locations, racing for which
    was last to write their common locations. Make the stride equal to the number
    of threads to eliminate the race.
    
    BONUS: By fixing this race, PhiloxRandom constant-sized GPU initializers now
    match CPU initializers.
    
    * Update random_ops_test.py to find race conditions
    
    Increasing the size of arrays in the random_ops_test.py test to manifest
    the race conditions to be resolved.
    
    ---
    Commit 2cbcda08f authored by Androbin<robin.richtsfeld@gmail.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    Fixed formatting in Linux install guide (#10353)
    
    Formatting issues were introduced in PR #8825, commit f30918b3694afe844990cbddc82e27e023d88856
    ---
    Commit ab5f38560 authored by Lakshay Garg<lakshayg@outlook.in>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    Fixed typos in documentation & READMEs (#10365)
    
    ---
    Commit 94dc1dbfa authored by Christos Nikolaou<cNikolaou@users.noreply.github.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    Enable figures in the tfprof README.md (#10372)
    
    ---
    Commit 3018d4678 authored by Taehoon Lee<taehoonlee@snu.ac.kr>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    Fix typos (#10386)
    
    ---
    Commit c5f3c6171 authored by Daniel Rasmussen<drasmuss@users.noreply.github.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    Fix unbatch for Datasets with multiple elements (#10401)
    
    * Fix unbatch for datasets with multiple elements
    
    * fixup! pylint (indent two spaces instead of four)
    
    ---
    Commit 8b065bc10 authored by Yong Tang<yong.tang.github@outlook.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    Fix unaligned args in api_docs/python/tf/contrib/learn/Evaluable (#10423)
    
    This commit fixes unaligned args in api_docs/python/tf/contrib/learn/Evaluable
    
    Signed-off-by: Yong Tang <yong.tang.github@outlook.com>
    ---
    Commit 8f89b654f authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Profile memory usage in VirtualScheduler and report peak memory usage.
    To do so, NodeState now handles different output ports of a node (in case
    a node has multiple outputs).
    
    Also, VirtualScheduler code is cleaned up with more comments.
    
    PiperOrigin-RevId: 158209068
    
    ---
    Commit 0ea0bf5aa authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add a frontend for viewing the first ops that exhibit bad values (NaN, +/- Inf).
    
    This helps the user identify problematic ops. Also moved the debugger data logic within tf-graph-info into a new tf-graph-debugger-data-card component.
    
    PiperOrigin-RevId: 158208679
    
    ---
    Commit ed47ecf2d authored by Luke Iwanski<luke@codeplay.com>
    Committed by Benoit Steiner<benoitsteiner@users.noreply.github.com>:
    [OpenCL] Cleans variable op (#10333)
    
    * [OpenCL] Cleans variable op
    
    * Fixes formatting and float / double -> GPU_NUMBER_TYPES_NO_HALF
    
    ---
    Commit 9b2c1af63 authored by Luke Iwanski<luke@codeplay.com>
    Committed by Benoit Steiner<benoitsteiner@users.noreply.github.com>:
    [OpenCL] Improves device reporting (#10462)
    
    Prints: id, type, name, vendor and profile of the device
    ---
    Commit 7f5384dcc authored by Alexandre Passos<apassos@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Making load() work for resource variables.
    
    PiperOrigin-RevId: 158205361
    
    ---
    Commit 05412bd36 authored by Mark Heffernan<meheff@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Simplify Shape traversal visitors.
    Simplify shape traversal visitors in ShapeUtil and ShapeTree. Add a non-Status form because most uses of the traversal methods do not use it, and remove is_leaf parameter from ShapeTree.ForEach* as it is not frequently used.
    
    PiperOrigin-RevId: 158201574
    
    ---
    Commit 69c9365b4 authored by Mustafa Ispir<ispir@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Extracted linear estimator testing utils to be reused by dnn-linear-combined.
    Added tests for linear part of dnn-linear-combined estimator.
    
    PiperOrigin-RevId: 158200827
    
    ---
    Commit 65ce8c723 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add arrowheads to dataflow edges.
    Make reference edges orange.
    Remove animations from tooltips in the graph documentation.
    
    Previously, arrowheads were only added to reference edges (because we assumed users knew about the convention that arrowless edges flow upwards). That decision nicely reduces clutter. However, recently, some internal and external folks have expressed confusion, and so I want to try adding arrowheads to all data flow edges. And make the reference edges starkly different.
    
    See #10428
    
    PiperOrigin-RevId: 158195388
    
    ---
    Commit bf4c3dd6b authored by gunan<gunan@google.com>
    Committed by GitHub<noreply@github.com>:
    Revert "Fix patching issue on Windows" (#10472)
    
    This reverts commit 47e6785646a1266f01a1a570bd799f8518ee2997.
    
    ---
    Commit b49515539 authored by David Soergel<soergel@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add only string constants to ASSET_FILEPATHS collection.
    
    PiperOrigin-RevId: 158192152
    
    ---
    Commit 51acad09c authored by Sergio Guadarrama<sguada@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add tests with different delta to huber_loss.
    
    PiperOrigin-RevId: 158191361
    
    ---
    Commit a4e7b7add authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fixes a bug in setting default optimizers for DNNLinearCombinedClassifier.
    
    PiperOrigin-RevId: 158190192
    
    ---
    Commit ddd67e333 authored by Luke Iwanski<luke@codeplay.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    [OpenCL] Cleans reshape.cc (#10347)
    
    * [OpenCL] Cleans reshape.cc
    
    * Removes half and complex numbers.
    
     Half is extension and complex numbers needs implementation in Eigen first
    
    ---
    Commit 3ca653304 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update ops-related pbtxt files.
    
    PiperOrigin-RevId: 158186454
    
    ---
    Commit 8cda8660e authored by Luke Iwanski<luke@codeplay.com>
    Committed by gunan<gunan@google.com>:
    [OpenCL] Cleans sendrecv_ops.cc (#10345)
    
    ---
    Commit 6915bb919 authored by Luke Iwanski<luke@codeplay.com>
    Committed by gunan<gunan@google.com>:
    [OpenCL] Cleans Slice op (#10341)
    
    ---
    Commit 54998b45d authored by Michele Colombo<m-colombo@users.noreply.github.com>
    Committed by Jonathan Hseu<vomjom@vomjom.net>:
    BasicRNNCell comment fix (#10467)
    
    ---
    Commit df5906fb7 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Mark saver/restore ops that depend on filesystem as stateful to disable them
    from being folded into a constant by graph optimizer.
    
    PiperOrigin-RevId: 158182282
    
    ---
    Commit 96cb4d182 authored by Sergio Guadarrama<sguada@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add support of scale_l1 == 0. or scale_l2 == 0 to l1_l2_regularizer.
    Added tests.
    
    PiperOrigin-RevId: 158179790
    
    ---
    Commit b65eb3f9b authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Speed up atrous_convolution_test by combining evaluations.
    
    To make this test run faster (and prevent it from timing out under
    certain circumstances), this change combines all evaluations for each
    test method into a single call to Session.run, to eliminate overhead.
    
    This reduces the test time from about 40 seconds to 10 seconds.
    
    RELNOTES: n/a
    PiperOrigin-RevId: 158175227
    
    ---
    Commit b440abce7 authored by Gao, Xiang<qasdfgtyuiop@gmail.com>
    Committed by Rasmus Munk Larsen<rmlarsen@google.com>:
    add Cuda{2D,3D}LaunchConfig that maximizes occupancy (#10032)
    
    * add Cuda{2D,3D}LaunchConfig that max occupancy
    
    * remove default val, check input<=0
    
    * add max size check
    
    * fix typo
    
    * tests, docs, and related changes
    
    * build the test
    
    * buildify
    
    * cudaOccupancy... call check success, and style fix
    
    ---
    Commit 81cf61fdb authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Initialize tensor in graph_properties_test, to avoid msan complaint.
    
    PiperOrigin-RevId: 158169374
    
    ---
    Commit cabc5c35c authored by Eli Bendersky<eliben@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Add xla_disable_hlo_passes to DebugOptions
    
    Also add a SetDebugOptions method to ClientLibraryTestBas; this lets us set
    debug options in tests by calling it.
    
    As an example, this CL removes the current way of passing
    xla_disable_hlo_passes programmatically in tests - it used to employ a special
    constructor parameter which is no longer required.
    
    PiperOrigin-RevId: 158169006
    
    ---
    Commit 187d23337 authored by Luke Iwanski<luke@codeplay.com>
    Committed by gunan<gunan@google.com>:
    [OpenCL] Cleans Pad op (#10339)
    
    ---
    Commit e8bc38ef6 authored by gunan<gunan@google.com>
    Committed by GitHub<noreply@github.com>:
    Fix test failures on windows. (#10470)
    
    ---
    Commit 2b3535c64 authored by David Soergel<soergel@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Minor docstring fix for build_parsing_serving_input_receiver_fn
    
    PiperOrigin-RevId: 158163615
    
    ---
    Commit e55f2e036 authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Propagates constants through switch nodes.
    
    PiperOrigin-RevId: 158163537
    
    ---
    Commit b01d4b905 authored by Jacques Pienaar<jpienaar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Remove outdated todo.
    
    PiperOrigin-RevId: 158161411
    
    ---
    Commit 7125733d7 authored by William Chargin<wchargin@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Create a set of sample data for the audio plugin
    
    This implements a simple tone generator, with sine waves, square waves,
    and triangle waves, plus two simple combinations of sine waves. The step
    value is used to control the frequency.
    
    PiperOrigin-RevId: 158160889
    
    ---
    Commit dc81a2420 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Updates to the WALSMatrixFactorization estimator:
    - Add a completed_sweeps variable to keep track of sweeps that have been completed during training.
    - Add a StopAtSweepHook, which can request a stop after completing a specified number of sweeps.
    
    PiperOrigin-RevId: 158156347
    
    ---
    Commit 74220616c authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Set device cores and frequency in op_level_cost_estimator_test,
    to avoid asan error about assigning inf to int64 (this comes
    in from a divide-by-0).
    
    PiperOrigin-RevId: 158155488
    
    ---
    Commit 47e678564 authored by Yun Peng<pcloudy@google.com>
    Committed by gunan<gunan@google.com>:
    Fix patching issue on Windows (#10452)
    
    ---
    Commit 6d54f09d9 authored by Yun Peng<pcloudy@google.com>
    Committed by gunan<gunan@google.com>:
    Fix linking errors of lmdb on Windows (#10457)
    
    ---
    Commit 61c8a745b authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Minor cleanup: Add braces around if statement arms; remove redundant "return" and "static".
    
    PiperOrigin-RevId: 158143418
    
    ---
    Commit e9a889c5e authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Pass int parameter by value, not by const reference
    
    PiperOrigin-RevId: 158142102
    
    ---
    Commit 9184726ed authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Avoid unnecessary copying of map data during visitation
    
    PiperOrigin-RevId: 158141962
    
    ---
    Commit 2e7e1d57b authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Small fix for how std::move is used in constructors
    
    PiperOrigin-RevId: 158141564
    
    ---
    Commit 2a61c1652 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    In cpu compiler's CompileAheadOfTime, pass ordering when compiling entry computation.
    
    PiperOrigin-RevId: 158140349
    
    ---
    Commit f3f53e8b3 authored by Derek Murray<mrry@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [tf.contrib.data] Add support for dicts and remove lists from nested structures.
    
    This changes the behavior of constructors like
    `tf.contrib.data.Dataset.from_tensors()` when passed a list. Previously, the
    `nest` utility would recurse into each element of such a list and create a
    separate Dataset component. Now the list will be converted to a tensor, allowing code like:
    
    ```python
    dataset = tf.contrib.data.Dataset.from_tensor_slices(([1, 2, 3], [4, 5, 6]))
    ```
    
    ...to define a dataset with two components (each of shape `()`).
    
    This change also adds support for dictionaries as nested structures, which
    simplifies integration with dictionary-returning ops like `tf.parse_example()`.
    
    Fixes #10151.
    
    RELNOTES: Breaking change to `tf.contrib.data.Dataset` APIs that expect a
    nested structure. Lists are now converted to tf.Tensor implicitly. You may need
    to change uses of lists to tuples in existing code. In addition, dicts are now
    supported as a nested structure.
    PiperOrigin-RevId: 158139467
    
    ---
    Commit b6a8848c1 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Enabling python configuration to use a remotely generated configuration that is located inside of the org_tensorflow repo (previously it *had* to be a remote repo declared in workspace file).
    
    PiperOrigin-RevId: 158138601
    
    ---
    Commit 0fe0bfcc3 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove unused protobuf header inclusions
    
    PiperOrigin-RevId: 158120864
    
    ---
    Commit f0c4c6c3f authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    In the CUDA path of depthwise_conv2d, add a fast NCHW backward filter convolution for images smaller than 16x16.
    
    PiperOrigin-RevId: 158111294
    
    ---
    Commit 8dcf37b47 authored by Jon Malmaud<malmaud@gmail.com>
    Committed by gunan<gunan@google.com>:
    Fix typo (#10379)
    
    ---
    Commit 3039d7da2 authored by Androbin<robin.richtsfeld@gmail.com>
    Committed by gunan<gunan@google.com>:
    Remove "bazel clean" (#10318)
    
    Reverting #8880 (see #10236)
    unnecessary since bazelbuild/bazel#2759 was merged
    ---
    Commit ae1c16ae8 authored by Yifei Feng<fengyifei2026@gmail.com>
    Committed by gunan<gunan@google.com>:
    Update docker to cudnn6. (#10307)
    
    * Update docker to cudnn6.
    
    * Update Dockerfile.gpu
    
    * Add --expunge to bazel clean to make cuda_configure run again and update TF_CUDNN_VERSION.
    
    * Remove expunge and set CUDA and CUDNN version default in configure.
    
    * Update configure
    
    * Only set --action_env once
    
    * Update prints for default version.
    
    ---
    Commit 232e9d86d authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    tf_workspace() claims that the tf_repo_name argument is unused.
    temp_workaround_http_archive still requires it.
    This change silences the spurious message.
    
    PiperOrigin-RevId: 158089834
    
    ---
    Commit cc1a02d37 authored by Francois Chollet<fchollet@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add fp16 support to convolutional layers that support it.
    
    PiperOrigin-RevId: 158086284
    
    ---
    Commit 7d3fbba48 authored by Mustafa Ispir<ispir@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Extracted dnn estimator testing utils to be reused by dnn-linear-combined.
    Added tests for dnn part of dnn-linear-combined estimator.
    
    PiperOrigin-RevId: 158084898
    
    ---
    Commit 9d12c629c authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Refactor the document and some polishment
    
    PiperOrigin-RevId: 158083952
    
    ---
    Commit 134138299 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Corrected comment: import_scoped_metagraph does not return a Saver.
    
    PiperOrigin-RevId: 158082288
    
    ---
    Commit a58553e4d authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add function in shape inference to try to infer output tensor content based on
    the input shapes of the op. In some cases (E.g: shape), knowing the shapes of
    the input is all that is necessary to infer the content of the output tensor.
    This improves shape inference.
    
    PiperOrigin-RevId: 158079306
    
    ---
    Commit 0cc851c08 authored by Yuefeng Zhou<yuefengz@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Call maxcut algorithm in the model_based_cost_estimator.
    
    PiperOrigin-RevId: 158078511
    
    ---
    Commit 7d76a90be authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add question marks next to items in the graph legend.
    
    PiperOrigin-RevId: 158076005
    
    ---
    Commit 68fdb7628 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add DNNLinearCombinedClassifier.
    
    PiperOrigin-RevId: 158075939
    
    ---
    Commit 3d52e4cb9 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix create_meta_graph to respect an empty collection_list.
    
    PiperOrigin-RevId: 158073112
    
    ---
    Commit 54ccc3e5a authored by Mark Heffernan<meheff@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Add module-scoped HLO dataflow analysis.
    This is the first step to replacing TuplePointsToAnalysis with a global, module-scoped analysis. This dataflow analysis identifies all values and their defs and uses in the XLA graph. The analysis is currently unused. Follow up CLs will add buffer alias analysis using this dataflow analysis, and incrementally switch the transformation passes (for example, CopyInsertion) to use these new module-scoped analyses.
    
    PiperOrigin-RevId: 158067910
    
    ---
    Commit 93c57c6e4 authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Handle control flow logic properly:
     * Don't fold enter/exit nodes since that can interact badly with frames
     * Create proper control dependencies on switch nodes
    
    PiperOrigin-RevId: 158066691
    
    ---
    Commit 9e6899720 authored by Jingyue Wu<jingyue@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [SE] Add cudnnTransformTensor to StreamExecutor.
    
    PiperOrigin-RevId: 158062553
    
    ---
    Commit 827874c30 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    In the CUDA path of depthwise_conv2d, add a fast NCHW backward input convolution for images smaller than 16x16.
    
    PiperOrigin-RevId: 158061669
    
    ---
    Commit bee26215c authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Speed up multinomial_op on CPU by using a vectorized Eigen expression and avoiding unnecessary casts.
    
    Benchmark with AVX+FMA enabled:
    
    Run on <redacted> (12 X 3492 MHz CPUs); 2017-06-05T12:54:07.881672447-07:00
    CPU: Intel Haswell with HyperThreading (6 cores) dL1:32KB dL2:256KB dL3:15MB
    Benchmark                          Base (ns)  New (ns) Improvement
    ------------------------------------------------------------------
    BM_Multinomial_cpu_1_10000_4          250817    172953    +31.0%
    BM_Multinomial_cpu_1_10000_128        273834    187552    +31.5%
    BM_Multinomial_cpu_1_10000_10000     1174175   1130778     +3.7%
    BM_Multinomial_cpu_1_100000_4        2040741   1276761    +37.4%
    BM_Multinomial_cpu_32_10000_4       10221765   4498666    +56.0%
    BM_Multinomial_cpu_32_10000_128     10638159   4994754    +53.0%
    BM_Multinomial_cpu_32_100000_4      100790019  44193314    +56.2%
    BM_Multinomial_cpu_128_100000_1     431269640  182506078    +57.7%
    PiperOrigin-RevId: 158061480
    
    ---
    Commit 515b3ac67 authored by Justine Tunney<jart@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add Clutz to TensorBoard build
    
    This is so we can get JavaScript protobufs. This CL also improves the
    web_aspect and makes some peculiar Closure Compiler errors go away
    relating to externs.
    
    PiperOrigin-RevId: 158061198
    
    ---
    Commit 0df6760fe authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Added a test to make sure that graph properties for variables are properly
    reported
    
    PiperOrigin-RevId: 158053084
    
    ---
    Commit 2ccfe8e76 authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Added a new method to extract the graph properties from a cost graph without
    having to run the model. This will simplify the process of creating regression
    tests
    
    PiperOrigin-RevId: 158050327
    
    ---
    Commit 27f1b80c2 authored by Alexandre Passos<apassos@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fixes memory leak in py_func when functions return unwrapped strings.
    
    PiperOrigin-RevId: 158046530
    
    ---
    Commit cf238e1f2 authored by Eugene Brevdo<ebrevdo@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix memory leak in python caused by @tf_should_use.
    
    The issue is that python's GC has trouble collecting objects with __del__ methods.
    
    The solution is two pronged:
    * Keep track of usage state outside of the class, via a dict mapping
      id(object) => state
    * Remove __del__ (this was the source: python's GC couldn't collect wrapped
      objects), and instead use weakref.finalize to emit warnings just as the object
      is being garbage collected.
    * Added tests for garbage collection [they were failing before i fixed the issue]
    
    PiperOrigin-RevId: 158042388
    
    ---
    Commit e6f581863 authored by Bo Wang<david.b.wang@gmail.com>
    Committed by Rasmus Munk Larsen<rmlarsen@google.com>:
    New reader for LMDB databases (#9950)
    
    * Add LMDBReader op and test case
    
    * Add testcase to load LMDB from a folder
    
    * Add tensorflow/core/lib/lmdb/testdata/data.mdb
    
    * Add EOF test
    
    * Add license export
    
    * Blacklist the test data in pip_smoke_test.py
    
    * Address issues with respect to review
    
    * Add LICENSE to BUILD rules
    
    * Remove the prefx of LICENSE
    
    * Wrap key with compat.as_bytes()
    
    * Fixed a compilation flag
    
    * Improve BUILD rules
    
    * Support LMDB build in cmake
    
    * Fix BUILD file format with buildifier
    
    * Add fake unistd.h for lmdb to build on Windows
    
    * Avoid building lmdb tools which depends on unistd.h
    
    * Fix the string encoding issue in Python3
    
    * Update lmdb library name in CMakeList.txt
    
    ---
    Commit cc411f938 authored by Yao Zhang<yaozhang@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    When converting the layout of Conv2DBackpropInput, we need to permute one of
    its inputs, which is a constant node. We permute a copy of this node, instead of the
    original node, because the original node may be used as input to other nodes.
    This kind of sharing of const node could arise if the graph is pre-optimized by common
    subexpression elimination, which is part of the L1 optimizations in
    TensorFlow.
    
    PiperOrigin-RevId: 158037552
    
    ---
    Commit 88bdb6fca authored by Dandelion Man?<dandelion@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove all remaining references to non-public TF modules from TensorBoard.
    
    I deleted the PluginAssetUtil tests because that code is deprecated.
    I'll later add manual testing for backcompat in the text plugin.
    
    PiperOrigin-RevId: 158037466
    
    ---
    Commit 6c531eb2f authored by Francois Chollet<fchollet@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add file hash to Keras Boston Housing dataset to force cache update.
    
    PiperOrigin-RevId: 158036587
    
    ---
    Commit afdc38cd3 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove deprecated resource handle functions in InferenceContext.
    
    PiperOrigin-RevId: 158034419
    
    ---
    Commit 9f932e6ce authored by Derek Murray<mrry@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Avoid parsing a rendezvous key for Send/Recv ops outside a loop.
    
    For such ops, the rendezvous key will be constant, because
    `ctx->frame_iter()` will always evaluate to `{0, 0}`. Benchmarking
    reveals that this can save between 1 and 2 microseconds per Send or
    Recv op execution. The optimization applies to all cross-process,
    inter-device, and intra-device (host-to/from-device memory) Send/Recv
    ops.
    
    PiperOrigin-RevId: 158032522
    
    ---
    Commit cc2dd4ac8 authored by Shanqing Cai<cais@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    tfdbg: dump debug data from different devices in separate directories
    
    Fixes: #7051
    wherein TFDBG failed to load the data dump from a Session.run() involving multiple GPUs.
    
    The root cause of the bug was that TFDBG previously assumed that node names are unique across all partition graphs. This is however not the case when multiple GPUs exist. The Send/Recv nodes in the partition graphs of the GPUs can have duplicate names. There will potentially be other cases like this in the future due to other reasons (e.g., distributed sessions and/or graph optimization).
    
    This CL relaxes this assumption, by dumping the GraphDef and tensor data from different devices into different sub-directories under the dump root directory.
    
    PiperOrigin-RevId: 158029814
    
    ---
    Commit a5909d643 authored by Toby Boyd<tobyboyd@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fixed triggering create device multiple times
    
    PiperOrigin-RevId: 158025196
    
    ---
    Commit 504a307b7 authored by Martin Wicke<wicke@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Make sure that Adam colocates ops with a consistent variable across workers.
    
    PiperOrigin-RevId: 158022292
    
    ---
    Commit 69ba4d3d4 authored by Asim Shankar<ashankar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix #10371
    
    cpuinfo.get_cpu_info() doesn't seem to include the l2_cache_size key on some
    architectures.
    
    PiperOrigin-RevId: 158021008
    
    ---
    Commit a51a9846c authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Performance-related tweaks: Don't copy loop variables; remove ineffective std::move casts.
    
    PiperOrigin-RevId: 158017670
    
    ---
    Commit 009789f74 authored by Peter Hawkins<phawkins@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Allow 0-sized slices in DynamicSlice and DynamicUpdateSlice; add tests.
    
    PiperOrigin-RevId: 158015870
    
    ---
    Commit 48a4853eb authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Miscellaneous cleanups
    
    PiperOrigin-RevId: 158012131
    
    ---
    Commit 379ddde24 authored by Chris Song<sjhshy@gmail.com>
    Committed by Chris Song<sjhshy@gmail.com>:
    Fix misspells.
    
    ---
    Commit a0a76da97 authored by Lakshay Garg<lakshay.garg.1996@gmail.com>
    Committed by Lakshay Garg<lakshay.garg.1996@gmail.com>:
    Fixed typo in code
    
    ---
    Commit 7ffc35732 authored by Eugene Brevdo<ebrevdo@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add support for bools in matrix_diag, matrix_diag_part, matrix_set_diag, matrix_band_part.
    
    PiperOrigin-RevId: 157939272
    
    ---
    Commit edf3d5dbe authored by Darren Garvey<darren.garvey@gmail.com>
    Committed by Darren Garvey<darren.garvey@gmail.com>:
    configure: Fix default path when enabling MPI.
    
    Correct showing what the default path is when mpi is installed.
    
    ---
    Commit aad2e3daf authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    In the CUDA path of depthwise_conv2d, add a fast NCHW forward convolution for images smaller than 16x16.
    
    PiperOrigin-RevId: 157915637
    
    ---
    Commit 5cf08d9cb authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Drop blockDim.y for the equivalent in_cols, and slightly improve naming (use 'pixels' instead of 'size' for height*width numbers).
    
    PiperOrigin-RevId: 157906773
    
    ---
    Commit 563f05ff6 authored by Eugene Brevdo<ebrevdo@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [tf contrib seq2seq] Expand tile_batch to handle nested structures.
    
    This allows it to properly tile the initial wrapper state when using
    BeamSearchDecoder with AttentionWrapper.  Unit tests updated to show this use.
    
    PiperOrigin-RevId: 157903115
    
    ---
    Commit 1234e2dda authored by Justine Tunney<jart@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix Plottable definition
    
    On Mac OS the build directory in the Node package conflicts with BUILD.
    
    PiperOrigin-RevId: 157899970
    
    ---
    Commit bb7a8d8e7 authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Don't use the _output_shape attribute in the op_level_cost_estimator since
    there is no guaranty that it will be present or accurate.
    
    PiperOrigin-RevId: 157898989
    
    ---
    Commit 6f4204c3d authored by Justine Tunney<jart@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix TensorBoard SHA256 in cmake
    
    PiperOrigin-RevId: 157897958
    
    ---
    Commit c9d2f432b authored by Justine Tunney<jart@google.com>
    Committed by Justine Tunney<jart@google.com>:
    Fix TensorBoard SHA256 in cmake
    
    ---
    Commit 1c70fb686 authored by Jianwei Xie<xiejw@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add training test for multi classes (n>2) linear classifier.
    
    PiperOrigin-RevId: 157896002
    
    ---
    Commit 675d36be0 authored by Yao Zhang<yaozhang@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add fused batch norm to tf.layers.
    
    PiperOrigin-RevId: 157893874
    
    ---
    Commit f37d0ea47 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Internal change -- first draft docs
    
    PiperOrigin-RevId: 157891937
    
    ---
    Commit 9b8f6113b authored by Zongheng Yang<zongheng@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    tensor_bundle: fix that the read path forgets to cache file handles.
    
    In a case where a reader is geographically far from the file, this change
    achieves a speedup of end-to-end checkpoint restore by 5.8x.
    
    PiperOrigin-RevId: 157889659
    
    ---
    Commit 0c92dada6 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Use inplace Cholesky factorization and solves to speed up and reduce memory usage in matrix_solve_ls.
    Check succes before copying outputs in cholesky_op.
    
    PiperOrigin-RevId: 157887564
    
    ---
    Commit a4caeb2ea authored by William Chargin<wchargin@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Extract the graphs dashboard to a plugin
    
    This completes the great plugin migration!
    
    The graphs plugin is somewhat different from the plugins considered so
    far. First, it exposes two kinds of data: graph data and run metadata.
    We elect to put both sources of data under the domain of the graphs
    plugin for now, because it's not clear that the run metadata would be
    useful for anything else. Second, the graph data really has no use for
    "tags": a run either has an associated graph or it does not. Thus, we
    expose an endpoint /data/plugin/graphs/runs that is different in format
    from the /tags routes exposed by other plugins (it returns just a list
    instead of a run-to-tag mapping).
    
    This change removes a bunch of tests from application_test.py. The tests
    cover the compresion behavior of the graph endpoint, but the graph
    endpoint doesn't have any special logic in the way of compression. Thus,
    the tests are, apparently, testing that werkzeug (or whatever is
    relevant here) provides good compression defaults. This isn't
    necessarily a bad idea, but it shouldn't be coupled to the graph tests.
    
    To get test data that includes run metadata, you can run this script:
    
        https://raw.githubusercontent.com/tensorflow/tensorflow/326942394e69074d50d5889218a24c9371eff259/tensorflow/examples/tutorials/mnist/mnist_with_summaries.py
    
    PiperOrigin-RevId: 157884714
    
    ---
    Commit 05a6a13f7 authored by Gunhan Gulsoy<gunan@google.com>
    Committed by gunan<gunan@google.com>:
    Make sure all writer caches are closed before deleting directories in dnn_test.
    
    ---
    Commit d0e761f8d authored by Gunhan Gulsoy<gunan@google.com>
    Committed by gunan<gunan@google.com>:
    Disable another test that uses matrix_set_diag on windows.
    
    ---
    Commit 8939b8562 authored by Derek Murray<mrry@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [tf.contrib.data] Re-implement IteratorGetNext as an AsyncOpKernel.
    
    This prevents the op from consuming an inter-op thread pool thread
    when blocked, and fixes a potential deadlock when many IteratorGetNext
    ops are blocked. Fixes #10369.
    
    PiperOrigin-RevId: 157878885
    
    ---
    Commit 9e25c68ad authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add loss_only_head to hold additional loss terms for multi_head setup
    
    PiperOrigin-RevId: 157875934
    
    ---
    Commit 7cdcd0cca authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Filter more op types that don't benefit from constant folding.
    
    PiperOrigin-RevId: 157875168
    
    ---
    Commit 366990d92 authored by Kay Zhu<kayzhu@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Fix a subtle issue in copy_insertion due the interaction between copy
    overriding logic and RecordIndicesToColocatingBuffers:
    
    - When building instructions ShapeTree to be copy overriden, it is possible
    that we create a single kCopy for two identical instructions. An example can
    be:
    
        %tuple.19 = tuple(%constant.4, %constant.1793, %constant.1793)
    
    where it is used in a while.init operand, and constant.1793 is read-only within
    the loop and also used by another while loop. The copy overriding pass will then
    create the following (logical, not finalized) tuple:
    
        %tuple.19 = tuple(%constant.4, %copy.5, %copy.5)
    
    - In the subsequent pass RecordAmbiguousOrNonDistinctIndices, to add copies to
    ensure point_to set is distinct, the duplicate %copy.5 are ignored because they
    are not yet finalized, and these indices (1 and 2 in the example) are still
    marked as to-be copied.
    
    Therefore distinctiveness is lost.
    
    This fix applies to the override building stage, to explicitly avoid creating
    shared copies for non-distinct buffers.
    
    PiperOrigin-RevId: 157872231
    
    ---
    Commit f4b8d21b8 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Change function parameters to references to avoid copying, or otherwise move from function parameters when moving reduces the amount of copying.
    
    PiperOrigin-RevId: 157867333
    
    ---
    Commit 3eee61caa authored by Drew Hintz<pushespretn@gmail.com>
    Committed by GitHub<noreply@github.com>:
    fix quotes in example code from ? to "
    ---
    Commit 4905c0eae authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove TODO - the new tolerance is okay to keep.
    
    PiperOrigin-RevId: 157861020
    
    ---
    Commit 55f6b6ff1 authored by David Soergel<soergel@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add explicit SparseTensor support to SignatureDef.
    
    PiperOrigin-RevId: 157860466
    
    ---
    Commit 79099d677 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Removes default thresholds from BinaryLogisticHead and adds predict and evaluate tests for DNNClassifier.
    
    PiperOrigin-RevId: 157856471
    
    ---
    Commit 54595f0f3 authored by Jianwei Xie<xiejw@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Adds the training test for LinearClassifier with n_classes=2.
    
    PiperOrigin-RevId: 157855473
    
    ---
    Commit cd6c02985 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add 'streaming_curve_points' metric which returns curve [ROC, PR] approximation at specified number of points.
    
    PiperOrigin-RevId: 157851535
    
    ---
    Commit 0f2db7391 authored by Peter Hawkins<phawkins@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [TF:XLA] Split union-find implementation in mark_for_compilation_pass.cc into a separate library, make it more generic.
    
    PiperOrigin-RevId: 157850985
    
    ---
    Commit d5421cf58 authored by Justin Lebar<jlebar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add additional concat test.
    
    PiperOrigin-RevId: 157844113
    
    ---
    Commit f661128db authored by Geoffrey Irving<geoffreyi@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove unused overloads of SummarizeGraphDef and EqualGraphDef
    
    PiperOrigin-RevId: 157843404
    
    ---
    Commit a56d59a84 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Set flow to a value during TensorArray creation,
    Re-enable tensor_array_ops_test in msan.
    
    PiperOrigin-RevId: 157841785
    
    ---
    Commit edcc5cc13 authored by Justine Tunney<jart@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add manual test runner for vz_sorting
    
    PiperOrigin-RevId: 157841098
    
    ---
    Commit 3f6404f20 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Assign a max height of 800px to images in the image dashboard.
    
    The user could always expand to actual dimensions if need be.
    
    PiperOrigin-RevId: 157838046
    
    ---
    Commit c6ea6972a authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove debugging LOG(INFO) from previous change.
    
    PiperOrigin-RevId: 157837305
    
    ---
    Commit 07d39f28e authored by freedom" Koan-Sin Tan<koansin.tan@gmail.com>
    Committed by Benoit Steiner<benoitsteiner@users.noreply.github.com>:
    make gcc-5 on Ubuntu 16.04 happy (#10385)
    
    gcc-5 complains of ambiguity and refuses to go when doing something
    like 'bazel build -c opt tensorflow/...'
    ---
    Commit ac66be783 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Minor cleanup: Remove unused BUILD dependencies and unnecessary code.
    
    PiperOrigin-RevId: 157837211
    
    ---
    Commit 4161ccc8e authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Adjust tolerance on dirichlet_multinomial test.
    
    PiperOrigin-RevId: 157834660
    
    ---
    Commit 43c0f52f1 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix off-by-one error in BoolVector(begin, end) constructor.
    
    PiperOrigin-RevId: 157833086
    
    ---
    Commit 419d437ba authored by Lakshay Garg<lakshay.garg.1996@gmail.com>
    Committed by Lakshay Garg<lakshay.garg.1996@gmail.com>:
    Fixed typo in code comment
    
    ---
    Commit 07710014d authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix device colocation for KMeans in case of multiple parameter servers.
    
    PiperOrigin-RevId: 157795360
    
    ---
    Commit b659bc39f authored by Justine Tunney<jart@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Simplify TensorBoard build
    
    - Remove tensorboard_typescript_genrule
    - Remove tensorboard_typescript_bundle
    - Introduce ts_web_library Skylark rule which supports seamless
      TypeScript compilation.
    - Use Closure Compiler in semi-advanced mode to compile JavaScript.
      This is done in a way that preserves <script> tag placement, which
      causes pages to load faster and avoid FOUC, thereby making it a
      better solution than the existing vulcanize.
    
    PiperOrigin-RevId: 157794795
    
    ---
    Commit 0503ce09c authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Wipe out previous shape inference result when importing a grappler item
    Run graph optimizations last: since they can be expensive it's best to filter invalid items first.
    
    PiperOrigin-RevId: 157792834
    
    ---
    Commit 9ae941c4a authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Turn reductions along an empty set of dimensions into identity nodes.
    
    PiperOrigin-RevId: 157792209
    
    ---
    Commit 69075f354 authored by Yangzihao Wang<yangzihao@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add functional support for cudnnConvolutionBiasActivationForward().
    
    PiperOrigin-RevId: 157788425
    
    ---
    Commit 7d7a40309 authored by William Chargin<wchargin@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Extract the distributions dashboard to a plugin
    
    This continues the great plugin migration. The distributions plugin was
    similar to the histograms plugin, but it also purported to allow CSV
    download like the scalars plugin. However, the existing implementation
    of this was flawed, and would always yield a 500 on current prod [1]
    (unless there were actually no data). This indicates that no one is
    actually using it---probably because there isn't a relevant button on
    the frontend, anyway!---so I just removed it.
    
    This also changes most frontend occurrences of "compressedHistograms"
    to "distributions" while we're at it.
    
    [1]: Due to the reference `value.rank_in_bps` in the handler
    `_serve_compressed_histograms`; this field does not exist and throws an
    `AttributeError`.
    
    PiperOrigin-RevId: 157787156
    
    ---
    Commit 23cdf96b8 authored by Brennan Saeta<saeta@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Re-enable session_test.py
    
    A number of CL's have split up session_test.py to be a bit smaller. As a
    result, this CL will re-enable the session_test to see if it remains flaky.
    
    PiperOrigin-RevId: 157786407
    
    ---
    Commit d741d81c5 authored by Dandelion Man?<dandelion@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Expose tf.test.StubOutForTesting in the tf testing api
    
    Also redirect TensorBoard usage to use that endpoint.
    
    This is part of my ongoing effort to have TensorBoard only
    depend on TensorFlow via its public api, so that it can
    be split into a project with a fast external build.
    
    PiperOrigin-RevId: 157784552
    
    ---
    Commit 40411cd5c authored by Dandelion Man?<dandelion@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Refactor projector plugin to only use tf public methods.
    
    Remove all reference to the PluginAsset system, which is deprecated.
    
    Part of an ongoing effort to have TensorBoard only consume the public
    TensorFlow api.
    
    PiperOrigin-RevId: 157784016
    
    ---
    Commit a65a70ea5 authored by Gunhan Gulsoy<gunan@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix pip tests under contrib/text
    
    PiperOrigin-RevId: 157783952
    
    ---
    Commit fb4bc806a authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix flakiness in GpuMultiSessionMemoryTest.
    
    PiperOrigin-RevId: 157781368
    
    ---
    Commit f7de292df authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update placeholder nodes' shapes in the GraphDef to reflect manually specified values for incomplete placeholder shapes. Previously, these overrides were only specified in the feed nodes, which improves estimates when using dynamic shapes but not when using static shapes. With this change, static shapes also benefit.
    
    PiperOrigin-RevId: 157780800
    
    ---
    Commit eebd44123 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add a frontend method for retrieving numeric alerts from the debugger plugin.
    
    This route responds with a list of alerts (occurrences of bad values) in ascending timestamp order.
    
    PiperOrigin-RevId: 157780270
    
    ---
    Commit 5bc685d7f authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] If an op has a single "large" operand, we want to fuse this op into some of its consumers, even if we can't fuse into all of them.
    
    PiperOrigin-RevId: 157779106
    
    ---
    Commit 2ee09b873 authored by Mark Heffernan<meheff@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Various improvements to ShapeTree.
    Add support for holding non-copyable types, operator==, and a
    CopySubtreeFrom method for copying a subtree from one ShapeTree to
    another.
    
    PiperOrigin-RevId: 157777636
    
    ---
    Commit 4f3ae7699 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add beam_search kernels used by BeamSearchDecoder to tensorflow.contrib.
    
    PiperOrigin-RevId: 157775011
    
    ---
    Commit 6b16c33b3 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Make audio-related logic use the audio plugin.
    
    Previously, fetching audio and related data from TensorBoard used handlers within application.py. We now remove those handlers in favor of routes offered by the audio plugin. ML Dash is updated as well.
    
    PiperOrigin-RevId: 157774953
    
    ---
    Commit 8032e1f75 authored by Geoffrey Irving<geoffreyi@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Make function instantiation use std::vector<NodeDef> instead of GraphDef
    
    It's about to turn into std::vector<NodeInfoPtr>; this change gets us partway there.
    
    RELNOTES: n/a
    PiperOrigin-RevId: 157771141
    
    ---
    Commit 2e44be35d authored by Vinu Rajashekhar<vinuraja@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Adds a protected DeleteResourceMgr(...) method in Device.
    
    PiperOrigin-RevId: 157770378
    
    ---
    Commit cc346e690 authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Strip the :x suffix when generating control inputs from input names
    
    PiperOrigin-RevId: 157770257
    
    ---
    Commit d6fe47af5 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Use tensorflow::StringPiece in literal_util.
    Use template for RepeatedField assignment.
    
    PiperOrigin-RevId: 157765477
    
    ---
    Commit 7866fa01b authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    This change significantly reduces time and resources used to load large TensorFlow graphs.
    
    For a real-world large graph (13k nodes, 20k edges), this change:
    
    * reduces all heap allocations by 19%
    * reduces retained (final) heap allocations by 2.2%
    * reduces CPU time by 11.2%
    
    In most TF graphs, the set of unique values set to Node::assigned_device_name() is quite small.  This change adds an interning table to the Graph object, which contains all of the unique values used for Node::set_assigned_device_name(), as well as a look-up table.  This is the main source of the reduction in retained heap memory; nearly all nodes are assigned to just one or two unique devices.
    
    This change removes the "string assigned_device_name_" field from the Node class, and replaces it with "int assigned_device_name_index_".  However, because you need both the index and the name table to get the actual value, the Node::assigned_device_name() accessor needs access to the parent Graph.  This requires adding a "Graph* graph_" field to the Node class.
    
    In the future, if all users of this property are converted to use Graph::assigned_device_name(Node*), then the Node::graph_ field can be deleted, and the space reclaimed.  However, doing so is out of the scope of this CL, and even with this new pointer field, the Node class is smaller than it was before, so this is still a net win.
    
    The placement algorithm in simple_placer.cc is one of the main accessors of the Node::assigned_device_name property.  This CL contains significant changes to simple_placer.cc, which directly take advantage of the fact that the property is an index into a name table, rather than treating it simply as a string.  Many temporary allocations are also removed, which is the main source of the reduction in total heap allocations.
    
    This CL also contains a few changes that remove short-lived allocations in unrelated code, such as the changes in op.cc/h, costmodel.cc, etc.  It is extremely easy in C++ to accidentally allocate memory, especially when implicit conversions and copy constructors allocate memory.
    
    All of the changes in this CL were motivated by empirical measurement, using CPU profiling and heap profiling.
    
    PiperOrigin-RevId: 157762909
    
    ---
    Commit fdffafbc1 authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add QueueDequeueUpTo to the list of dequeue ops
    
    PiperOrigin-RevId: 157760201
    
    ---
    Commit 7ad0d0698 authored by Mustafa Ispir<ispir@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add type error to start_queue_runners if given session is not a `tf.Session`. Due to semver, we suppress the error if a MonitoredSession is provided.
    
    PiperOrigin-RevId: 157748375
    
    ---
    Commit 7106f9fac authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Implemented an initial version of virtual scheduler unit test.
    
    PiperOrigin-RevId: 157746305
    
    ---
    Commit b020db0c6 authored by Andrew Harp<andrewharp@google.com>
    Committed by Andrew Harp<andrewharp@google.com>:
    revert public visibility
    
    ---
    Commit 5b05728c2 authored by Andrew Harp<andrewharp@google.com>
    Committed by Andrew Harp<andrewharp@google.com>:
    visibility workaround 3
    
    ---
    Commit 15a740ebb authored by Mustafa Ispir<ispir@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update and Move DNNLinearCombinedRegressor to estimator/canned.
    
    PiperOrigin-RevId: 157744087
    
    ---
    Commit d29bbeca3 authored by Dandelion Man?<dandelion@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix outdated code ref in TensorBoard README, add link to SO question.
    
    PiperOrigin-RevId: 157743374
    
    ---
    Commit 9fc164225 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix index_table_from_file to allow vocabulary_file be a Tensor
    
    PiperOrigin-RevId: 157740677
    
    ---
    Commit 0aa3e0194 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Internal change
    
    PiperOrigin-RevId: 157740660
    
    ---
    Commit 02ac85399 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Introduce new class Literal to replace protobuf Literal.
    
    This renames the existing Literal message to LiteralProto and introduces a new
    C++ class named Literal to replace it.
    
    The LiteralProto is only used at RPC boundaries, or when protobuf-specific
    functionality is required.  The Literal class offers a 'ToProto' function to
    generate a new LiteralProto message when necessary.
    
    Currently, all the static functions in class LiteralUtil, just forward to their
    counterparts in class Literal.  This will change in a future CL.
    
    Class Literal implements all the buffers as std::vectors.  The only exception
    is preds(), which given the std::vector<bool> representation, makes it unusable
    for the semantics we require (it's not possible to get the address of the
    underlying vector, for instance).
    
    The CL adds a BoolVector class to work around that issue.
    
    In future CLs, the std::vector representation may be changed to something more
    efficient, if needed.
    
    PiperOrigin-RevId: 157739125
    
    ---
    Commit 207203253 authored by gunan<gunan@google.com>
    Committed by GitHub<noreply@github.com>:
    Python 3.6 support on windows. (#10356)
    
    * Python 3.6 support on windows.
    
    * Fix typo in README.md
    
    * Make environment configurable for windows gpu build.
    
    ---
    Commit 2b75a9a6e authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Go: Update generated wrapper functions for TensorFlow ops.
    
    PiperOrigin-RevId: 157734029
    
    ---
    Commit f60b6bdcb authored by Mustafa Ispir<ispir@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add a warning to documentation of MonitoredSession.
    
    PiperOrigin-RevId: 157728225
    
    ---
    Commit eb10a4c49 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Preallocate vector storage when the ultimate vector size is known in advance
    
    PiperOrigin-RevId: 157724431
    
    ---
    Commit ce32228c4 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add release notes for Intel MKL integration.
    
    PiperOrigin-RevId: 157722003
    
    ---
    Commit a23255bc0 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Adds missing group OP to benchmark
    
    PiperOrigin-RevId: 157716500
    
    ---
    Commit d3e840a6c authored by Asim Shankar<ashankar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Disable writing of compressed checkpoints.
    
    Snappy compression (and decompression) was enabled after the
    1.1 release (in commit 63b2f999d3f22cfe915b89103faa1b0a1b1b7617).
    This means that checkpoints produced by the 1.2.0 release candidates
    will cause TensorFlow 1.1 (and prior) binaries to crash as they
    CHECK fail when trying to load snappy-compressed tables.
    
    To ease transition, disable writing of compressed checkpoints in
    1.2.0 for now.
    
    Reconsider this in the next release.
    
    PiperOrigin-RevId: 157675189
    
    ---
    Commit 6db400bbc authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Refactoring Python op code generation.
    
    PiperOrigin-RevId: 157675126
    
    ---
    Commit d9620cab8 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add flag to determine whether to do L1 optimizations and inline functions. Default is to do them. In tf_optimizer don't inline or do l1 optimizations.
    
    PiperOrigin-RevId: 157673614
    
    ---
    Commit 25bb504cc authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Make a plugin that serves data for the audio dashboard.
    
    Subsequent changes will make TensorBoard use this audio plugin instead of the previous handlers for audio-related data.
    
    PiperOrigin-RevId: 157673132
    
    ---
    Commit 24623653b authored by James Qin<jamesqin@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix graph text format serialization
    
    PiperOrigin-RevId: 157669530
    
    ---
    Commit 3aed1735c authored by Andrew Harp<andrewharp@google.com>
    Committed by Andrew Harp<andrewharp@google.com>:
    visibility workaround 2
    
    ---
    Commit fea90f89d authored by Andrew Harp<andrewharp@google.com>
    Committed by Andrew Harp<andrewharp@google.com>:
    visibility workaround
    
    ---
    Commit 732a6b1ae authored by Justine Tunney<jart@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Upgrade TypeScript to v2.3.4
    
    PiperOrigin-RevId: 157667511
    
    ---
    Commit 95d90ab2e authored by Luke Iwanski<luke@codeplay.com>
    Committed by Benoit Steiner<benoitsteiner@users.noreply.github.com>:
    [OpenCL] Fixes Split op (#10322)
    
    * [OpenCL] Fixes Split op
    
      Split should alway go through SYCL device
    
    * [OpenCL] Removes half from registred types
    
    ---
    Commit 963441400 authored by Luke Iwanski<luke@codeplay.com>
    Committed by Benoit Steiner<benoitsteiner@users.noreply.github.com>:
    [OpenCL] Extends softmax op to cover double (#10323)
    
    ---
    Commit a702863e8 authored by Luke Iwanski<luke@codeplay.com>
    Committed by Benoit Steiner<benoitsteiner@users.noreply.github.com>:
    [OpenCL] Extends tile ops to int16 and int32 (#10328)
    
    * [OpenCL] Extends tile ops to int16 and int32
    
    * [OpenCL] Extends tile_ops to cover bool, uint8, int16, int64
    
    ---
    Commit 75385814f authored by cxx<cxxgtxy@gmail.com>
    Committed by cxx<cxxgtxy@gmail.com>:
    Fix comments error in mnist_replica.py where only one ps is used with two works by default.
    
    ---
    Commit 23364e2c6 authored by Andrew Harp<andrewharp@google.com>
    Committed by Andrew Harp<andrewharp@google.com>:
    buildifier fix
    
    ---
    Commit e5088cb82 authored by Yao Zhang<yaozhang@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix discrepancy between measured and analytical cost graph. Use tf_cuda_library for utils.
    
    PiperOrigin-RevId: 157660745
    
    ---
    Commit 787381ca5 authored by Brennan Saeta<saeta@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Split up session_test.py -> session_clusterspec_prop_test.py
    
    session_test.py has gotten very large. Additionally, recently it has become
    flaky. In order to both (1) improve overall code health, and (2) to facilitate
    root-causing the test flakiness, this CL begins to split apart session_test
    into focused subsets.
    
    I've suffixed the scoping of the session_test in order to preserve filesystem
    sort-order grouping.
    
    PiperOrigin-RevId: 157658981
    
    ---
    Commit b09932d74 authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Added PlaceholderWithDefault to the list of known placeholder types
    Use PartialTensorShape instead of TensorShapes to better handle partially known
    shapes
    
    PiperOrigin-RevId: 157657664
    
    ---
    Commit 0462416f6 authored by Dandelion Man?<dandelion@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add make_ndarray, tensor_proto, and MetaGraphDef to tf api.
    
    Since TensorProtos are part of the TensorFlow API, it makes sense
    to also include the methods that generate and parse them.
    
    Similarly, we write out MetaGraphDef protos in the summary writer,
    so we should provide the proto as well.
    
    This is part of an ongoing effort to have TensorBoard only consume
    TensorFlow methods through the public api.
    
    PiperOrigin-RevId: 157657564
    
    ---
    Commit 458f94c12 authored by Wei Ho<weiho@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Open-source skip-gram ops
    
    PiperOrigin-RevId: 157655970
    
    ---
    Commit faac0331c authored by Justine Tunney<jart@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Introduce tensorboard_zip_file build rule
    
    This rule can depend on web_library or tensorboard_html_binary. In
    both cases it will create a .zip file containing all the transitive
    web server paths. This can be used to deploy static assets to web
    servers.
    
    A small change was also made to Vulcanize to support path overriding.
    
    PiperOrigin-RevId: 157655047
    
    ---
    Commit 7ed44f4c9 authored by Brennan Saeta<saeta@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Split up session_test.py -> session_partial_run_test.py
    
    session_test.py has gotten very large. Additionally, recently it has become
    flaky. In order to both (1) improve overall code health, and (2) to facilitate
    root-causing the test flakiness, this CL begins to split apart session_test
    into focused subsets.
    
    I've suffixed the scoping of the session_test in order to preserve filesystem
    sort-order grouping.
    
    PiperOrigin-RevId: 157651813
    
    ---
    Commit 3c7ac46ae authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Teach Executable to do its own profiling (patch 4/4).
    
    This CL removes the xla::Service stub for ExecuteOnStreamWrapper so the users call the xla::Executable version directly, and simplifies the function API to simply accept "arguments" as a parameter (with a templated type) rather than requiring the user to capture it into a lambda around the relevant Executable::ExecuteOnStream method.
    
    PiperOrigin-RevId: 157651740
    
    ---
    Commit 626f95ab9 authored by Peter Hawkins<phawkins@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [TF:XLA] Don't enforce that all nodes in an encapsulated subgraph are on the same device.
    Use the assigned device rather than the user-requested device when converting a Graph to a FunctionDef.
    
    PiperOrigin-RevId: 157648977
    
    ---
    Commit 414470329 authored by Jacques Pienaar<jpienaar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Guard stream pool with mutex.
    
    A data race can occur while populating the map.
    
    PiperOrigin-RevId: 157647183
    
    ---
    Commit ccdb30763 authored by Eugene Brevdo<ebrevdo@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Additional colocation options and bugfixes for TensorArray
    
    * colocate_with is now set properly when a TensorArray is passed through a
      while_loop
    * added a new argument, "colocate_with_first_write" (default: True; this is
      the current behavior).  If False, the TensorArray is simply placed on the
      device from the context it's constructed in, and no colocation constraints
      are added.
    
    PiperOrigin-RevId: 157643133
    
    ---
    Commit 03fc7022b authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update ops-related pbtxt files.
    
    PiperOrigin-RevId: 157642677
    
    ---
    Commit 41b87d6ce authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add a new attribute narrow_range to FakeQuant* operations.  It quantizes into range [1; 255] instead of [0; 255].
    
    PiperOrigin-RevId: 157641054
    
    ---
    Commit c048e2938 authored by Alexandre Passos<apassos@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Adds support to non-placeholder inputs in _graph_to_function_def.
    
    Specifically, supports input ops with more than one output tensor.
    
    PiperOrigin-RevId: 157640908
    
    ---
    Commit d310de4fa authored by Brennan Saeta<saeta@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Split up session_test.py -> session_list_devices_test.py
    
    session_test.py has gotten very large. Additionally, recently it has become
    flaky. In order to both (1) improve overall code health, and (2) to facilitate
    root-causing the test flakiness, this CL begins to split apart session_test
    into focused subsets.
    
    I've suffixed the scoping of the session_test in order to preserve filesystem
    sort-order grouping.
    
    PiperOrigin-RevId: 157640788
    
    ---
    Commit 8e868cf6a authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove unused arguments to call_cpp_shape_fn.
    
    PiperOrigin-RevId: 157640125
    
    ---
    Commit 9ddbf31fe authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Use unnamed namespace to effect internal linkage, replace string constructors with array-deducing helper function
    
    PiperOrigin-RevId: 157636308
    
    ---
    Commit 88ffe6276 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Increase cholesky_op_test to medium, bump shard_count 1 more.
    
    PiperOrigin-RevId: 157635774
    
    ---
    Commit bef563dc8 authored by Benjamin Kramer<kramerb@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Don't add constraints for computations we're not currently looking at.
    
    TuplePointsToAnalysis is computed globally per module, so we add all
    unconstrained buffers in that module, even if it's outside of the computation
    we're currently running on. Then we proceed to propagate default layouts to all
    those buffers and then throw the constraints away because they don't affect any
    instruction in the current computation.
    
    PiperOrigin-RevId: 157635564
    
    ---
    Commit a980aead8 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Use test_adjusted_name when making the mangled_test_name in
    run_and_gather_logs_lib.py, to avoid duplicate file names when the same test is
    run on multiple GPUs.
    
    PiperOrigin-RevId: 157630193
    
    ---
    Commit 0a84cfd58 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update ops-related pbtxt files.
    
    PiperOrigin-RevId: 157629497
    
    ---
    Commit 6882effb8 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Make single-parameter constructors explicit
    
    PiperOrigin-RevId: 157628970
    
    ---
    Commit 0b8070253 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Support negative axis for Split op
    
    PiperOrigin-RevId: 157628162
    
    ---
    Commit 289e7bf5b authored by gunan<gunan@google.com>
    Committed by GitHub<noreply@github.com>:
    Fixes and improvements to cmake windows build. (#10354)
    
    * Disable linalg ops tests on windows.
    
    * Do not print the full source code path for logs on windows.
    
    ---
    Commit bc236cfc3 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Passes classification head to LinearClassifier.
    
    PiperOrigin-RevId: 157624020
    
    ---
    Commit cebd7e246 authored by Luke Iwanski<luke@codeplay.com>
    Committed by Shanqing Cai<cais@google.com>:
    [OpenCL] Cleans debug ops (#10334)
    
    * [OpenCL] Cleans debug ops
    
    * Acts on feedback from #10334#discussion_r119452513
    
    * Acts on #10334#discussion_r119459463
    
    ---
    Commit fd6c3c4f1 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fixes flaky test in dnn_linear_combined_test.
    
    PiperOrigin-RevId: 157622951
    
    ---
    Commit c9cc388dc authored by Asim Shankar<ashankar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Avoid CHECKs in BundleReader, propagate errors instead.
    
    Motivation:
    We'd like to evolve the checkpoint format over time (e.g., enable
    different types of compression). Without this change, a TensorFlow
    version that encounters a format that it doesn't understand would CHECK fail
    with an unhelpful error message.
    
    With this, it propagates a clearer error message up, giving the user some
    hints about what could be wrong.
    
    I don't have a unittest for this - I thought about writing a bundle and
    then strategically corrupting the bytes on disk before reading it back,
    but that seems a bit much. The intention of this change is to enable
    graceful reporting of forward compatibility breakages. Ideas for an
    appropriate unittest are appreciated.
    
    PiperOrigin-RevId: 157620358
    
    ---
    Commit ee05b8b69 authored by Wei Ho<weiho@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix to remove TF op usage outside of the initializer fn (due to deferred execution of initializer fn, this prevent issues with graph mismatch).
    
    PiperOrigin-RevId: 157620177
    
    ---
    Commit e8d17ea8c authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Materialize shapes that are known at graph construction time into constants
    that can be folded
    
    PiperOrigin-RevId: 157619380
    
    ---
    Commit dc0427d48 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Directly depend on the used libraries
    
    Do not rely on transitive dependencies.
    
    PiperOrigin-RevId: 157618184
    
    ---
    Commit 964d1a509 authored by Yuan Yu<yuanbyu@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix a bug that an erroneous control edge can be introduced when loops are nested in control dependency context.
    
    PiperOrigin-RevId: 157616919
    
    ---
    Commit 2de94bbb8 authored by Eli Bendersky<eliben@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Add an option to set the "generate HLO graph" regex without a flag.
    
    Pipes the option through xla.proto ExecutionOptions, to HloModuleConfig, which
    can then be accessed throughout the compiler.
    
    PiperOrigin-RevId: 157615458
    
    ---
    Commit d3c0482e6 authored by My name is<raviqqe@gmail.com>
    Committed by gunan<gunan@google.com>:
    Fix a typo in export_output.py (#9975)
    
    ---
    Commit 0c75d9f52 authored by ddurham2<ddurham@davyandbeth.com>
    Committed by gunan<gunan@google.com>:
    Adding lost documentation to tf.abs from the old tf.complex_abs when it learned how to work on complex data. (#9954)
    
    ---
    Commit 84661fa73 authored by Benoit Steiner<bsteiner@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Propagate control dependencies during constant folding
    
    PiperOrigin-RevId: 157610040
    
    ---
    Commit a3520340e authored by gunan<gunan@google.com>
    Committed by GitHub<noreply@github.com>:
    Improve windows bazel python test suite. (#10305)
    
    * Improve windows bazel python test suite.
    
    - Create new tags, no_windows and no_windows_gpu
    - Instead of a separate maintained list, use bazel tags to exclude tests.
    - Tag all the python tests that are known to have issues in windows.
    
    * Also blacklist neon_depthwise_conv_ops_test in windows.
    
    * Only build tests in CPU windows tests.
    
    * Only build tests in GPU windows tests.
    
    * Also disable session_test on windows.
    
    * Only run py tests on windows, and only build tests that are not
    disabled.
    
    ---
    Commit a6f284ca4 authored by Jianwei Xie<xiejw@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Adds integration tests for LinearRegressor.
    
    PiperOrigin-RevId: 157604107
    
    ---
    Commit d21bf7d75 authored by Francois Chollet<fchollet@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Backport changes from Github master.
    
    PiperOrigin-RevId: 157603238
    
    ---
    Commit 43bfc138c authored by Shanqing Cai<cais@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix OSS compilation error in tfprof_main.cc
    
    PiperOrigin-RevId: 157602449
    
    ---
    Commit 904a3d075 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fixing issue with cuda compilation related to missing include (exception is only thrown when running with sandboxing on)
    
    PiperOrigin-RevId: 157602401
    
    ---
    Commit f59203c98 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Shard cholesky_op_test.
    
    PiperOrigin-RevId: 157601172
    
    ---
    Commit 3fdbb5579 authored by Amit Patankar<amitpatankar@google.com>
    Committed by Amit Patankar<amitpatankar@google.com>:
    Merging rc1 back into master.
    
    ---
    Commit be5d98a8b authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Adds integration tests for DNNClassifier.
    
    PiperOrigin-RevId: 157592010
    
    ---
    Commit a05de6cd2 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Change reporting feature importances in RandomForestEstimator to run at the end of training, instead of part of the inference graph.
    
    PiperOrigin-RevId: 157591575
    
    ---
    Commit e96f1142f authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove unnecessary casts
    
    PiperOrigin-RevId: 157591439
    
    ---
    Commit 5f8571a6b authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix missing namespace comments
    
    PiperOrigin-RevId: 157591364
    
    ---
    Commit eeb0b4067 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Go: Update generated wrapper functions for TensorFlow ops.
    
    PiperOrigin-RevId: 157573997
    
    ---
    Commit 7f9674217 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update ops-related pbtxt files.
    
    PiperOrigin-RevId: 157573723
    
    ---
    Commit 473a590c9 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Allow complex valued input for Cholesky decomposition.
    
    PiperOrigin-RevId: 157572536
    
    ---
    Commit 2d1860859 authored by Blake Hechtman<blakehechtman@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix test name in array_elementwise_ops_test.
    
    PiperOrigin-RevId: 157552402
    
    ---
    Commit a7fff05e0 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    tfprof multi-step profiling.
    
    This allows users to fill in RunMetadata across different steps.
    1. It is useful for RL model which runs a subset of graph each step.
    2. It also gets averages of multi-step stats.
    
    PiperOrigin-RevId: 157552388
    
    ---
    Commit fe589d9e7 authored by Luke Iwanski<luke@codeplay.com>
    Committed by Benoit Steiner<benoitsteiner@users.noreply.github.com>:
    [OpenCL] Implementation improvements (#9117)
    
    * OpenCL Improvements
    
    * Registers Scatter and ScatterNd Ops for SYCL
    
    * Registers Stack op for SYCL
    
    * Fixes No sycl buffer found error for debug ops
    
    * Registers MatMul and Transpose Ops to SYCL device for double
    
    * Extends analyzer_cli_test.py test to cover SYCL
    
    * Fixes Transpose Op for double when on SYCL
    
    * Bumps Eigen version to fix double precision issue on SYCL
    
    * Extends SessionDebugTestBase to cover SYCL
    
    * Register SYCL implementations for random ops
    
    * Avoid functions that might not be defined on SYCL device (#51)
    
    * Avoid functions that might not be defined on SYCL device
    
    * Simplify by using Eigen math functions
    
    * OpenCL improvements
    
     - Bumps Eigen Version
     - Refactors Ops registration
     - Introduces workaround for Const Op related to the difference between
       CUDA which uses pointers and OpenCL that uses buffers/accessors
     - Extends memory types to cover DEVICE_SYCL as well
     - Introduces  GetSYCLDevice() method that returns list of supported devices
       with GPU device having the highest priority ( doesn't include blacklisted devices )
     - ::internal::Transpose -> tensorflow::internal::Transpose in order to
       avoid compilation reported error
     - re-introduces fix for bugged string replacement causing a lot of compilation
       warnings -c -> --include
     - Adds sycl_runtime to bazels ARRAY_DEPS
     - Replicates TF_CALL_GPU_PROXY_TYPES for SYCL
    
    * [OpenCL] Fixes an issue caused by switch to aligned allocator for sycl buffer (#53)
    
    * [Build] Use gcc/g++ as a host compiler to avoid #8394 (#54)
    
    * [OpenCL] Fixes Scatter Op
    
    * Fix testSimple and testConst in stack_op_test (#3)
    
    * Fix testSimple and testConst in stack_op_test
    
    * Create a specialisation of DoParallelConcatUpdate for SyclDevice and
    register it
    
    * Guard all code in TENSORFLOW_USE_SYCL
    
    * Do not use sycl device for int32
    
    * Registration of the Sycl version is now looking like the one for the GPU
    
    * Remove added empty line
    
    * Register batch normalization kernels for OpenCL (#61)
    
    * [OpenCL] RandomGamma has no GPU friendly implementation (#57)
    
    * [OpenCL] Compatibility fixes for TensorFlow 1.1.0-rc1
    
    * [OpenCL] Implements BatchMatmul Op for SYCL
    
    * Lowercase the device name when GPU or SYCL returned
    
    * [OpenCL] kernel_estimator_test.py assertEqual-> assertAlmostEqual due to floating point representation on the device
    
    * [Eigen] Version bump
    
    * GPU device name string manipulation is not needed anymore
    
    * [OpenCL] Adds SYCL to device backwards compatibility
    
    * [OpenCL] Extends core_rnn_test.py to run for SYCL device
    
    * [OpenCL] Minor optimizations for build script
    
    * [OpenCL] Enables skip folder list in build script
    
    * [OpenCL] Fixes ApplyAdamOp for Sycl device
    
    * [OpenCL] SYCL device improvements
    
    * [OpenCL] Fixes debug_ops's SEGFAULT for SYCL device
    
    * [Build] Adds hexagon to skipped folders list
    
    * [OpenCL] Removes EnterLameDuckMode from SYCL device and allocator
    
    * [OpenCL] Registers Unique Op for SYCL device
    
    * [OpenCL][Temporary] Disables tests for SYCL target due to features not being implemented yet
    
      Tests affected:
        - tensorflow/contrib/memory_stats/python/kernel_tests/memory_stats_ops_test.py
        - tensorflow/contrib/rnn/python/kernel_tests/core_rnn_test.py
        - tensorflow/python/kernel_tests/conv_ops_test.py
        - tensorflow/python/kernel_tests/depthwise_conv_op_test.py
        - tensorflow/python/kernel_tests/pooling_ops_3d_test.py
        - tensorflow/python/kernel_tests/pooling_ops_test.py
        - tensorflow/python/kernel_tests/scatter_nd_ops_test.py
        - tensorflow/python/training/adam_test.py
        - tensorflow/python/training/localhost_cluster_performance_test.py
        - tensorflow/python/training/training_ops_test.py
    
    * [OpenCL][Temporary] Disables failing tests for SYCL in order to establish regression baseline
    
      Tests affected:
        - tensorflow/python/debug/cli/analyzer_cli_test.py
        - tensorflow/python/debug/lib/session_debug_testlib.py
        - tensorflow/python/debug/lib/stepper_test.py
        - tensorflow/python/kernel_tests/unstack_op_test.py
        - tensorflow/python/ops/image_ops_test.py
    
    * [OpenCL] Take options.config.device_count() into consideration
    
    * [OpenCL] Fixes compilation warning
    
    * [OpenCL] device:SYCL:0 -> sycl:0
    
    * [OpenCL] Removes unwanted flags in building script
    
    Removes flags given to computecpp that enable SIMD instructions
    Removes duplicate flags
    
    * bool -> const bool
    
    * [OpenCL] sycl in test_util.gpu_device_name() -> is_sycl_enabled()
    
    * [OpenCL][Temporary] Disables failing tests for SYCL in order to establish regression baseline
    
      Test affected:
        - tensorflow/contrib/stateless/python/kernel_tests/stateless_random_ops_test.py
    
    * Imports test_util from tensorflow.python.framework
    
    * [OpenCL] Fixes formatting in Python code
    
    * [OpenCL] Extends session_test.py to cover SYCL device
    
    * [OpenCL] Cleans singleton class
    
    * [OpenCL] Keeping CUDA happy
    
    * [OpenCL][Temporary] Disables failing tests for SYCL in order to establish regression baseline
    
      Test affected:
       - tensorflow/contrib/rnn/python/kernel_tests/core_rnn_cell_test.py
       - tensorflow/contrib/seq2seq/python/kernel_tests/beam_search_ops_test.py
    
    * Added support for building with SYCL on ARM.
    
    * Acts on the review feedback from:
     - #9117#discussion_r113608975
     - #9117#discussion_r113609173
    
    * [OpenCL] Fixes scatter_nd_op_test
    
    * Fixes auto-merge mistake
    
    * [OpenCL] struct SyclDevice -> class SyclDevice
    
    * Revert "[OpenCL] struct SyclDevice -> class SyclDevice"
    
    This reverts commit addd43348c374a5379f67bb1e5ad084715722fc2.
    
    * [OpenCL] Reverting refactoring commit.
    
      As requested in the review #9117#issuecomment-298454466
      This change set will be re-introduced in smaller chunks.
    
    * Revert "[OpenCL] device:SYCL:0 -> sycl:0"
    
    This reverts commit cf16e60340b62d16c3764d71b716fe03d35f87a9.
    
    * Revert "[OpenCL] Adds SYCL to device backwards compatibility"
    
    This reverts commit b8401b5164199b7a169be1c1d8dea5001195c390.
    
    * Acts on the feedback from #9117#discussion_r115036905
    
    * control_flow_ops_py_test.py expects device name to be lower cased
    
    * Acts on the feedback from #9117#discussion_r115037222
    
    * Removes debug print
    
    * Removes not needed partial specialisation
    
    * [OpenCL] Registers ScatterNdFunctor for SYCL device
    
    * [OpenCL] Make it compile
    
    * [OpenCL] Follow gpu_device changes
    
    * [OpenCL] Adds cxx_builtin_include_directory for python lib
    
      Fixes bazels missing undeclared inclusions that appeared after
      merge with TensorFlow upstream
    
    * [OpenCL] Fixes Constant Op
    
    * [OpenCL] gXX-4.8 -> gXX
    
    * [OpenCL] Removes -D_GLIBCXX_USE_CXX11_ABI=0 as it breaks default compiler setup for Ubuntu 16.04
    
    * Revert "[OpenCL] kernel_estimator_test.py assertEqual-> assertAlmostEqual due to floating point representation on the device"
    
    This reverts commit 06c50c0a485f40c30a436f02c3fa7794e370c49d.
    
    * [OpenCL] CPU allocator is a singleton we should not delete it
    
    ---
    Commit 7aac2395c authored by Blake Hechtman<blakehechtman@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Merge a copies of copies.
    
    PiperOrigin-RevId: 157549434
    
    ---
    Commit 37d9d5f0e authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add some routines for managing summaries to slim.
    
    PiperOrigin-RevId: 157541902
    
    ---
    Commit d58cd2962 authored by Justine Tunney<jart@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix weblas license mirror URL
    
    PiperOrigin-RevId: 157537115
    
    ---
    Commit 5c13ee13b authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Make images-related logic use the images plugin.
    
    Previously, fetching images and related data from TensorBoard used handlers within application.py. We now remove those handlers in favor of routes offered by the images plugin. ML Dash is updated as well.
    
    PiperOrigin-RevId: 157536471
    
    ---
    Commit 60394a3d1 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Reduce size of the no-winograd tests, but still large enough that
    ShouldIncludeWinogradNonfusedAlgo returns true.
    
    PiperOrigin-RevId: 157535386
    
    ---
    Commit 9501c4104 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Replace protobuf CopyFrom with assignment
    
    PiperOrigin-RevId: 157534272
    
    ---
    Commit 96698f7fd authored by Eugene Brevdo<ebrevdo@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [tf contrib seq2seq] Improve BeamSearchDecoder's ability to handle unknown shapes.
    
    Updated unit tests to contain inputs of unknown shape (at graph build time).
    Found an issue in the gather helper that stops it from properly propagating
    the batch size of the output shape.  This caused problems with tf.while_loop.
    Fixed.
    
    PiperOrigin-RevId: 157533937
    
    ---
    Commit 5c73d0102 authored by Neal Wu<wun@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Batch norm docs fix applied to _fused_batch_norm as well
    
    PiperOrigin-RevId: 157530527
    
    ---
    Commit abd4aa49a authored by Jonathan Hseu<jhseu@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix docs for tf.abs() and tf.pow().
    
    PiperOrigin-RevId: 157528475
    
    ---
    Commit dd5ad6917 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Declarations of operators to support batch norm in xla
    
    PiperOrigin-RevId: 157527596
    
    ---
    Commit bbeaa1307 authored by Jianwei Xie<xiejw@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix the expand_dim for label and weight for classifier heads.
    
    PiperOrigin-RevId: 157524909
    
    ---
    Commit 346021ab4 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Cleanup: Use C++ casts, remove redundant casts, use CHECK_OK
    
    PiperOrigin-RevId: 157522142
    
    ---
    Commit e405b0f6b authored by Francois Chollet<fchollet@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Refactoring of layer name autogeneration, to remove a graph serialization warning.
    
    PiperOrigin-RevId: 157520123
    
    ---
    Commit 5784e1e35 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add HasOutputProperties to check for pruned ops; Return
    device name instead of casting it to a short name (GPU:0/CPU:0); VLOG(2) when printing op device placement since it is a lot of output.
    
    PiperOrigin-RevId: 157519077
    
    ---
    Commit 2994444bf authored by Peter Hawkins<phawkins@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Issue a more user-friendly error message if a variable's initializer is from inside a control-flow scope, such as tf.cond() or tf.while_loop().
    
    Fixes #8604.
    
    PiperOrigin-RevId: 157516279
    
    ---
    Commit da2daf068 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove unused using declarations
    
    PiperOrigin-RevId: 157513772
    
    ---
    Commit 8b2e8b566 authored by Derek Murray<derek.murray@gmail.com>
    Committed by gunan<gunan@google.com>:
    Exclude Python test files from CMake PIP package. (#10302)
    
    * Exclude *_test.py files from the CMake-built PIP package.
    
    * Add stray _test.py file to the PIP package.
    
    * Nit. Convert tabs to spaces in tf_python.cmake
    
    ---
    Commit 2249a4ea8 authored by Dan Ringwalt<ringwalt@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix control reaching the end of ProjectiveGenerator.
    
    PiperOrigin-RevId: 157510013
    
    ---
    Commit 040e2e20f authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove unneeded check for has properties in grappler.
    
    PiperOrigin-RevId: 157507665
    
    ---
    Commit 684006955 authored by Yun Peng<pcloudy@google.com>
    Committed by gunan<gunan@google.com>:
    Windows: Remove session_test from bazel_test_lib.sh (#10274)
    
    It was disabled in 49b17146d2e4f04192d16ed67574142de167f3a1
    ---
    Commit 890a0a407 authored by Gunhan Gulsoy<gunan@google.com>
    Committed by Gunhan Gulsoy<gunan@google.com>:
    Upgrade TF ci build and docker files to use bazel 0.5.0
    
    ---
    Commit 46db634e5 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Only run the no-winograd tests once each.
    Only run the no-winograd tests on GPU; this also fixes
    timeouts in asan and msan.
    
    PiperOrigin-RevId: 157505317
    
    ---
    Commit a6cd4e735 authored by Dandelion Man?<dandelion@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove all TB build references that circumvent TF's public API.
    
    This doesn't actually remove all the code references, lots of code references continue to work despite the BUILD references being removed. I think this is because depending on the public api transitively makes all of TensorFlow's guts available too.
    
    PiperOrigin-RevId: 157502987
    
    ---
    Commit dcc3cdce8 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove redundant get() calls and string conversions
    
    PiperOrigin-RevId: 157497932
    
    ---
    Commit af2b9d875 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix the trace inputs functionality of the graph explorer.
    
    After migrating to d3 v4, the graph can no longer directly index into d3.Selections to obtain elements. Instead, we must use the nodes method of d3.Selection to generate an array of selected elements.
    
    PiperOrigin-RevId: 157493509
    
    ---
    Commit 5cf484584 authored by Jacques Pienaar<jpienaar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Small test that performs A*B+A and A*B+B.
    
    PiperOrigin-RevId: 157492992
    
    ---
    Commit b2355913b authored by Androbin<robin.richtsfeld@gmail.com>
    Committed by drpngx<drpngx@users.noreply.github.com>:
    remove some invalid entries (#10294)
    
    I noticed that some entries don't exist (anymore).
    This seems to be some kind of a consistency issue.
    
    More specifically:
    `tensorflow/contrib/ios_examples/camera/data`
    `tensorflow/contrib/session_bundle/testdata/saved_model_half_plus_two`
    `tensorflow/contrib/session_bundle/testdata/saved_model_half_plus_two/variables`
    
    This is the continuation of PR #10264
    ---
    Commit 367ec84f8 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add SampleEmbeddingHelper to do sampling at inference time
    
    PiperOrigin-RevId: 157487623
    
    ---
    Commit a3ba225d5 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add BatchMatMul execution cost prediction
    
    PiperOrigin-RevId: 157487507
    
    ---
    Commit 34a29fc3b authored by Eric Liu<ioeric@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [TF:XLA] preserve metadata when replacing HLO instructions.
    
    The motivation is to add metadata for HLO instructions that are created to replace existing HLO instructions during optimizations. The assumption is that the old instruction and the new instruction would perform the same function, and that they would be correlated to the same TF op. This might not always be correct since HLO optimizations can cross TF op boundaries. But still this seems to be better than nothing.
    
    Note that this still doesn't fully resolve missing OpMetadata after HLO optimizations; new instructions might be added without using ReplaceInstruction.
    
    PiperOrigin-RevId: 157484394
    
    ---
    Commit 092a7b6e6 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Disable keras lstm test in tsan.
    
    PiperOrigin-RevId: 157484268
    
    ---
    Commit 7280dafca authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Use "empty" member function to test for emptiness
    
    PiperOrigin-RevId: 157483181
    
    ---
    Commit 6c3b15915 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Expands integration tests in dnn_test.
    
    PiperOrigin-RevId: 157476608
    
    ---
    Commit 727193b1f authored by Androbin<robin.richtsfeld@gmail.com>
    Committed by drpngx<drpngx@users.noreply.github.com>:
    add missing import for `signal` package (#10264)
    
    * add missing import for `signal` package
    
    * add missing dependency for `signal` package
    
    * Update tf_python.cmake
    
    ---
    Commit 21461213d authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove unused BUILD dependencies
    
    PiperOrigin-RevId: 157473460
    
    ---
    Commit 4788ca2be authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix handling of Infinity/NaN in line chart domain
    
    Test Plan:
      - Use the script listed below to generate data that has enough
        infinities for these values to not be treated as outliers.
      - Load the data into TensorBoard (`--logdir /tmp/infbug`) and look at
        the scalars plot; also look at the console.
      - Before this change, the chart is completely blank, and there is a
        console warning: "QuantitativeScales cannot take NaN or Infinity as
        a domain value. Ignoring."
      - After this change, there is no console output, and the chart appears
        as intended: a reasonable domain is shown, and the infinities just
        shoot off the chart.
    
    Generating script:
    ```py
    import tensorflow as tf
    
    LOGDIR = '/tmp/infbug'
    STEPS = 134
    
    def main():
      x = tf.Variable(3.1415)
      y = x.assign_add(x)
      tf.summary.scalar('y', y)
      summ = tf.summary.merge_all()
    
      sess = tf.Session()
      writer = tf.summary.FileWriter(LOGDIR)
      writer.add_graph(sess.graph)
      sess.run(tf.global_variables_initializer())
      for step in xrange(STEPS):
        writer.add_summary(sess.run(summ), step)
      writer.close()
    
    if __name__ == '__main__':
      main()
    ```
    
    PiperOrigin-RevId: 157472340
    
    ---
    Commit 49476a62c authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Remove unused namespace aliases
    
    PiperOrigin-RevId: 157468609
    
    ---
    Commit d83074847 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Use "nullptr" for null pointer values
    
    PiperOrigin-RevId: 157468186
    
    ---
    Commit b73fea6e2 authored by Tim Harley<tharley@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Refactor `tf.Operation.traceback` implementation in to methods of tf.Graph.
    
    Adds an `_extract_frame_info` method to allow derived classes to extend the
    information available in each op traceback, if desired. The default result of
    `tf.Operation.traceback` is unchanged.
    
    Also fixes a poorly scoped `pylint disable=line-too-long`, so adds the necessary
    enable/disable blocks to silence pylint for the offending docstrings.
    
    PiperOrigin-RevId: 157466174
    
    ---
    Commit f7ca8db7d authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [XLA] Improve shape inference error messages for DynamicSlice/DynamicUpdateSlice.
    
    PiperOrigin-RevId: 157461335
    
    ---
    Commit 8c2a079ec authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Adding a slot / accumulator warmstart initializer that overrides the provided partitioner at call time with one passed at construction time.  This is intended to be used for slot Variables (such as accumulators) associated with Optimizers, since these Variables are created in a fashion that relies on replicating the exact shape of the associated primary variables (see slot_creator).
    
    PiperOrigin-RevId: 157453498
    
    ---
    Commit 73d10599f authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Default CUDNN_HOME to CUDA_TOOLKIT_TARGET_DIR. The cuDNN distro is most naturally installed in the same directory as the CUDA SDK, so try to find it there if the user doesn't specify any other directory.
    
    PiperOrigin-RevId: 157436253
    
    ---
    Commit eb7cf9331 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Go: Update generated wrapper functions for TensorFlow ops.
    
    PiperOrigin-RevId: 157429266
    
    ---
    Commit 346dcc0a4 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update ops-related pbtxt files.
    
    PiperOrigin-RevId: 157429078
    
    ---
    Commit 3d5ede131 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update documentation for sparse_matmul op to reflect gradient calculation.
    
    PiperOrigin-RevId: 157428135
    
    ---
    Commit 822d64f0c authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix embedding_lookup() bug where normalization did not work with ids of rank != 1.
    
    PiperOrigin-RevId: 157422220
    
    ---
    Commit 8cad6b824 authored by Jianwei Xie<xiejw@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Improve the error message for live set memory check.
    
    PiperOrigin-RevId: 157415647
    
    ---
    Commit 34dcd5b49 authored by Eugene Brevdo<ebrevdo@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    [tf contrib seq2seq] Bugfixes to BeamSearchDecoder
    
    Implementation by Cinjon Resnick.  He can't push this since he's traveling.
    I just copied the fix and added some small syntax tweaks to make the unit
    tests pass.  More comprehensive unit tests will come in the near future.
    
    Fixes at least part of #9904.
    
    BeamSearchDecoder:
    1. Fix the bug where we don't pass the next cell state through.
    2. Gather the cell state (and attention if that's a part of the model
       as an AttentionWrapper on the cell) according to the next_beam_ids.
    PiperOrigin-RevId: 157415564
    
    ---
    Commit f7ae1461c authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix oversampling in the GPU version of multinomial due to an error in generating
    gumbel noise.  -log(-log(U)) gives infinity if U draws a hard 0.  Adds a tiny
    offset to U (2e-30) to avoid log(U) = -inf.
    
    The CPU sampling algorithm depends on the order of the logits which is
    undesirable and can also oversample the first logit if it is smaller than the
    smallest random float larger than 0 (~1e-7).  Switching to double precision
    internally mitigates these problems, although it doesn't fix them.  Slowdown
    is ~35% in the worst case.
    
    Also adds various tests that we would like the sampling to pass.
    
    CPU Benchmark before:
    
    32 10000 1 0.060 0.069 0.87
    32 10000 4 0.229 0.074 3.10
    32 10000 32 2.180 0.059 37.09
    32 100000 1 0.430 0.480 0.90
    32 100000 4 2.322 0.449 5.17
    32 100000 32 31.508 0.471 66.96
    128 10000 1 0.168 0.235 0.71
    128 10000 4 0.965 0.246 3.93
    128 10000 32 7.989 0.225 35.51
    128 100000 1 1.681 1.539 1.09
    128 100000 4 9.012 1.57 35.73
    128 100000 32 126.222 1.626 77.60
    
    CPU Benchmark after:
    
    32 10000 1 0.054 0.112 0.48
    32 10000 4 0.206 0.093 2.21
    32 10000 32 1.826 0.091 20.12
    32 100000 1 0.292 0.636 0.46
    32 100000 4 2.086 0.606 3.44
    32 100000 32 28.496 0.633 45.03
    128 10000 1 0.125 0.266 0.47
    128 10000 4 0.759 0.258 2.94
    128 10000 32 7.362 0.254 29.03
    128 100000 1 1.550 2.18 10.71
    128 100000 4 8.712 2.22 23.92
    128 100000 32 122.585 2.213 55.39
    
    PiperOrigin-RevId: 157414849
    
    ---
    Commit 62cf561f1 authored by Jianwei Xie<xiejw@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add numpy_input_fn integration for LinearRegressor and fix the expand_dim for label and weight.
    
    PiperOrigin-RevId: 157405237
    
    ---
    Commit 40c7e0dd7 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Go: Update generated wrapper functions for TensorFlow ops.
    
    PiperOrigin-RevId: 157402364
    
    ---
    Commit 2726c00ce authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update ops-related pbtxt files.
    
    PiperOrigin-RevId: 157402063
    
    ---
    Commit e9d2fba8f authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix comment describing ignore_longer_outputs_than_inputs.
    
    PiperOrigin-RevId: 157400110
    
    ---
    Commit 5f097217f authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    An initial step of eliminating all implicit broadcast at the HLO level.
    Guard the shape inference for binary ops behind a flag.
    
    PiperOrigin-RevId: 157373647
    
    ---
    Commit e78e5ec8a authored by Yangzihao Wang<yangzihao@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Set winograd nofused flag to be true by default.
    
    Disable winograd nonfused conv for certain input params to avoid a known bug in cuDNNv5 and cuDNNv6.
    
    PiperOrigin-RevId: 157352847
    
    ---
    Commit 3f9b69a50 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    In the CUDA path of depthwise_conv2d, add a fast variant for forward convolution when the input images are smaller than 16x16.
    
    PiperOrigin-RevId: 157347823
    
    ---
    Commit 848123e61 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix incorrect condition to instantiate depthwise_ops introduced in commit 15d9f00fa. The change should have excluded depthwise_conv2d for doubles on windows debug builds, but it excluded it for all windows and all debug builds.
    
    PiperOrigin-RevId: 157345929
    
    ---
    Commit 060d67b34 authored by Taehoon Lee<taehoonlee@snu.ac.kr>
    Committed by Taehoon Lee<taehoonlee@snu.ac.kr>:
    Fix typos
    
    ---
    Commit 409419bcc authored by Mark Daoust<markdaoust@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    add closing code quotes
    
    PiperOrigin-RevId: 157339360
    
    ---
    Commit d20d0a623 authored by Jonathan Hseu<jhseu@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Fix the contrib estimator_test by updating the global step in all the appropriate spots.
    
    PiperOrigin-RevId: 157328239
    
    ---
    Commit d1144d3a9 authored by Juang, Yi-Lin<b02901026@ntu.edu.tw>
    Committed by Juang, Yi-Lin<b02901026@ntu.edu.tw>:
    Fix typos
    
    ---
    Commit fa8bb43b1 authored by lanhin<lanhin1@gmail.com>
    Committed by lanhin<lanhin1@gmail.com>:
    Fixed a comment typo in GraphView:InitializeNode(), executor.cc.
    
    ---
    Commit 9f13ae93f authored by Asim Shankar<ashankar@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Java: Update Maven release to 1.2.0-rc1
    
    PiperOrigin-RevId: 157294719
    
    ---
    Commit c8256769c authored by Gunhan Gulsoy<gunan@google.com>
    Committed by Gunhan Gulsoy<gunan@google.com>:
    Address comments and sanity check failures.
    
    ---
    Commit 344225a60 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Update ops-related pbtxt files.
    
    PiperOrigin-RevId: 157292254
    
    ---
    Commit eb2f6d041 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    VLOG(2) instead of VLOG(1) for detailed op printouts.
    
    PiperOrigin-RevId: 157291238
    
    ---
    Commit b4466279a authored by Shanqing Cai<cais@google.com>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    tfdbg: add runtime shape and dtype info to DebugNumericSummary
    
    PiperOrigin-RevId: 157291215
    
    ---
    Commit 4fb2425f8 authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    Add GraphOptimizer to Grappler item builder to do L1 optimizations and
    inlining.
    
    Op Counts Comparison (BNMT)
    Counts: Profile vs Grappler
    Op: Add, 968 vs 965
    Op: AddN, 2228 vs 2228
    Op: ApplyGradientDescent, 84 vs 84
    Op: BatchMatMul, 998 vs 998
    Op: Identity, 142 vs 105
    Op: MatMul, 63 vs 63
    Op: Mul, 10318 vs 10306
    Op: OneHot, 1 vs 1
    Op: Reshape, 8421 vs 8422
    Op: Select, 488 vs 488
    Op: Shape, 8132 vs 8131
    Op: Sigmoid, 942 vs 942
    Op: Softmax, 19 vs 19
    Op: StridedSlice, 58 vs 74
    Op: Sub, 1398 vs 1394
    Op: Tanh, 333 vs 333
    Op: Tile, 21 vs 21
    Op: Transpose, 39 vs 39
    PiperOrigin-RevId: 157288420
    
    ---
    Commit 8918fa9ef authored by A. Unique TensorFlower<gardener@tensorflow.org>
    Committed by TensorFlower Gardener<gardener@tensorflow.org>:
    BEGIN_PUBLIC
    Automated g4 rollback of changelist 157272843
    
    PiperOrigin-RevId: 158534336

commit 23cdf96b85177e657585da52651d89c5e6620e8d
Author: Brennan Saeta <saeta@google.com>
Date:   Thu Jun 1 17:29:27 2017 -0700

    Re-enable session_test.py
    
    A number of CL's have split up session_test.py to be a bit smaller. As a
    result, this CL will re-enable the session_test to see if it remains flaky.
    
    PiperOrigin-RevId: 157786407

commit 787381ca528ff737d614c96ef4c3603a76405061
Author: Brennan Saeta <saeta@google.com>
Date:   Wed May 31 17:37:51 2017 -0700

    Split up session_test.py -> session_clusterspec_prop_test.py
    
    session_test.py has gotten very large. Additionally, recently it has become
    flaky. In order to both (1) improve overall code health, and (2) to facilitate
    root-causing the test flakiness, this CL begins to split apart session_test
    into focused subsets.
    
    I've suffixed the scoping of the session_test in order to preserve filesystem
    sort-order grouping.
    
    PiperOrigin-RevId: 157658981

commit 7ed44f4c92c1553c0cefb607ce8a17b7d85f326f
Author: Brennan Saeta <saeta@google.com>
Date:   Wed May 31 16:30:17 2017 -0700

    Split up session_test.py -> session_partial_run_test.py
    
    session_test.py has gotten very large. Additionally, recently it has become
    flaky. In order to both (1) improve overall code health, and (2) to facilitate
    root-causing the test flakiness, this CL begins to split apart session_test
    into focused subsets.
    
    I've suffixed the scoping of the session_test in order to preserve filesystem
    sort-order grouping.
    
    PiperOrigin-RevId: 157651813

commit d310de4fac93c42caf7135038429362161045c6b
Author: Brennan Saeta <saeta@google.com>
Date:   Wed May 31 15:05:07 2017 -0700

    Split up session_test.py -> session_list_devices_test.py
    
    session_test.py has gotten very large. Additionally, recently it has become
    flaky. In order to both (1) improve overall code health, and (2) to facilitate
    root-causing the test flakiness, this CL begins to split apart session_test
    into focused subsets.
    
    I've suffixed the scoping of the session_test in order to preserve filesystem
    sort-order grouping.
    
    PiperOrigin-RevId: 157640788

commit fd6c3c4f1b24812424a2c880726da87bdb0b8f86
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed May 31 13:00:07 2017 -0700

    Fixes flaky test in dnn_linear_combined_test.
    
    PiperOrigin-RevId: 157622951

commit 3c49bfae6879100cfaeaa86e72abdaf71773bc39
Merge: ddb33e2 c825676
Author: Shanqing Cai <cais@google.com>
Date:   Sat May 27 08:49:04 2017 -0400

    Merge pull request #10231 from gunan/disable_flake
    
    Disable flaky tests that have been breaking nightly builds.

commit 49b17146d2e4f04192d16ed67574142de167f3a1
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Fri May 26 17:43:45 2017 -0700

    Disable flaky session_test.
    
    PiperOrigin-RevId: 157282438

commit 672f976cb4d2c55e2826be0e188ff7db1680defb
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Fri May 26 15:09:19 2017 -0700

    Disable flaky tests that have been breaking nightly builds.

commit ca0d25c2d7f7dea6f35e3dea20c8a755fd58c637
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu May 25 18:14:39 2017 -0700

    Disable flaky timeout test.
    
    PiperOrigin-RevId: 157178069

commit 16dcb11f50c444f2718875c3efdd6d76e1217d9a
Merge: a7157f5 80ba35a
Author: Amit Patankar <amitpatankar@google.com>
Date:   Wed May 17 21:18:17 2017 -0700

    Merge pull request #9992 from av8ramit/disable_tests
    
    Disabling flaky tests

commit 8d62e6aa6c667e4be0d8076b3ce63202115b1051
Author: Amit Patankar <amitpatankar@google.com>
Date:   Wed May 17 20:00:30 2017 -0700

    Disabling flaky tests to get rc0 out the window.

commit eef5ba595d201c7caa104437fc29353063cc0cfd
Author: Peter Hawkins <phawkins@google.com>
Date:   Mon May 15 11:08:13 2017 -0700

    Mark flaky test as flaky.
    
    PiperOrigin-RevId: 156076909

commit ebd6de64299a5484265455d8e0f469fad91a0927
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Mon May 8 12:18:14 2017 -0700

    Fix flaky test batch_sequences_with_states
    
    PiperOrigin-RevId: 155410358

commit 34eb5f87279176269632f330cf0418310e3f0eca
Author: Justine Tunney <jart@google.com>
Date:   Thu Apr 13 14:04:22 2017 -0800

    Make SleepForMicroseconds test less flaky
    Change: 153111659

commit 9e7bf403817a3acd4e8d865b041f37609564076e
Author: drpngx <drpngx@users.noreply.github.com>
Date:   Mon Apr 10 13:55:56 2017 -0700

    Branch 152703253 (#9112)
    
    * Improve py_func error handling.
    
    Automatically translate some python errors into corresponding TF errors at runtime.
    Change: 152156821
    
    * Update interaction with libpng so that we use the public API instead of
    knowledge of the internal libpng data structures.
    Change: 152167754
    
    * TensorBoard plugins now contain their own name/route prefix.
    Change: 152167807
    
    * Passes trainable flag to separable_conv2d biases.
    Change: 152170239
    
    * Saving resource variables with a caching device.
    Change: 152171539
    
    * Drop loss from estimator_spec.eval_metric_ops, as required by core Estimator.
    Change: 152179924
    
    * sample_stats.percentile DOCFIX.
    Change: 152182295
    
    * Added a memory optimizer to grappler.
    Change: 152184170
    
    * Change default behavior of the tf runs selector:
    
    - If there are fewer than 41 runs, enable them all by default
    - If there are 41 runs or more, disable them all by default
    
    This is in response to user complaints that having it enable only the first ten runs by default was confusing, because it was not obvious to users that some runs had been disabled.
    However, it still solves the initial user complaint that having very many runs simultaneously enabled would lag the UI.
    
    I also changed the "toggle all runs" button to try to turn everything off before turning everything on.
    Also, I improved the logic for detecting when the runs selection is back in the default state, so that we can avoid generating long URI strings wherever possible.
    Change: 152188948
    
    * Autogenerated Change: Change TensorBoard TAG to 52
    Change: 152189000
    
    * Remove warning that only happening with config cuda.
    Change: 152189205
    
    * Make resource variable shared name consistent with non-resource variables.
    
    Remove colocation constraint from resource variable cached value with the
    variable itself.
    Change: 152192203
    
    * Add a way to specify the optimization order; refactor and add constant folding to meta optimizer.
    Change: 152193646
    
    * Backport fixes and improvements from external Keras.
    Change: 152198296
    
    * Merge changes from github.
    Change: 152200430
    
    * Go: Update generated wrapper functions for TensorFlow ops.
    Change: 152200754
    
    * Update ops-related pbtxt files.
    Change: 152203174
    
    * Make ImportGraphDef() work with functions.
    
    In addition to modify graph_constructor.cc, this patch adds some other
    functionality to enable importing fucntions:
    * Ability to add FunctionDefLibraries to Graphs and
      FunctionLibraryDefinitions (in addition to existing functions)
    * FunctionDefsEqual() utility function
    Change: 152205258
    
    * Expand contrib test to more than just test targets.
    Change: 152206822
    
    * Preserve graph version during optimization
    Change: 152213262
    
    * Exclude enter and exit nodes from shape refiner's constant folding.
    Change: 152213637
    
    * Allow reshape_mover and algebraic_simplifier to make multiple mutations, by avoiding the short-circuit
    std::any_of.
    Change: 152232810
    
    * Fix dynamic_rnn transpose bug (can input/output non-3d tensors).
    
    Also a few cleanups to RNN code.
    Change: 152267628
    
    * Fix flaky tests
    Change: 152272801
    
    * Add an auto parallelization grappler optimization pass.
    Change: 152276787
    
    * Change json.decode.JSONDecodeError to ValueError.  JSONDecodeError seems to be
    the exception used in the simplejson module, not the json module.
    Change: 152278012
    
    * Internal change.
    Change: 152281471
    
    * [XLA] Force buffer sharing of separate while instructions.
    Change: 152288540
    
    * replica_device_setter should work for resource variables
    Change: 152289915
    
    * Fix ./configure script
    1. Add %workspace% in .bazelrc file when using import statement
    2. Write action_env into bazelrc file for required environment variables for OpenCL support
    Change: 152290700
    
    * Pointing a number of Tensorboard graph visualization-related help links to the new locations for the correspondent API documentation.
    Change: 152293459
    
    * Restore most of pull request #8606
    
    Pull request #8606 added str(Label(...)) for most dependencies in
    tensorflow.bzl, allowing most functions to be used from repositories which
    include TensorFlow as a submodule.  Unfortunately, it broke when pulled into
    Google and was removed in cl/152200430.  This CL restores the change, except
    for two Android-only functions; these were the only problematic bits.
    Change: 152297413
    
    * Removed dead code in Estimator.
    Change: 152297597
    
    * Assert rank is at least equal to new_rank for `_sparse_inner_flatten`.
    Change: 152303319
    
    * Extend quantization ranges to include 0.0f.
    Change: 152304380
    
    * Remove Keras config file saving.
    Change: 152306552
    
    * API backwards compatibility tests.
    Change: 152310869
    
    * [TF:XLA] Add a test for an R3 -> R4 broadcast.
    Change: 152313967
    
    * Fix the problem that no enough placeholders for persistent tensor
    batch delete
    
    The deleter_key is always a device_name, hence there is only one
    of it. Hence, we cannot delete >1 handles at one time.
    
    In the fix, it creates delete placeholder on demand, the max
    number of placeholders is _DEAD_HANDLES_THRESHOLD.
    Change: 152322770
    
    * [XLA] Add several reduction tests.
    Change: 152323510
    
    * Added the memory optimizer to the meta optimizer.
    Change: 152323689
    
    * Started a set of utilities to categorize op types
    Change: 152329057
    
    * Add AudioSpectrogram op to TensorFlow for audio feature generation
    Change: 152332221
    
    * Update ops-related pbtxt files.
    Change: 152332812
    
    * Automated rollback of change 152332221
    Change: 152333917
    
    * Call Py_CLEAR on dead fields during TF_RESOURCE-to-ndarray conversion
    Change: 152338333
    
    * [TF contrib seq2seq] Initial, incomplete implementation of beam search decoder.
    
    **DOES NOT WORK, pushed for collaboration only**
    Change: 152343927
    
    * [XLA] Change HloPassPipeline to disallow Add* calls after Run.
    Change: 152345578
    
    * Automated rollback of change 152332812
    Change: 152349057
    
    * Remove all 64/32 bit compiler warnings from core/ops.
    Change: 152353506
    
    * libtensorflow.so: Don't export private symbols.
    
    With this change, libtensorflow.so will only export
    functions defined in c_api.h. This also results in
    a decreased binary size of libtensorflow.so.
    
    On Linux the decrease was from roughly 150MB to 67MB.
    On OS X it was from roughly 101MB to 82MB.
    
    Also fixes #8923
    Change: 152366053
    
    * Add Elu ops in XLA.
    Change: 152383201
    
    * Fixed test. ('broadcast_dims' has size 1)
    Change: 152383633
    
    * Add more detailed error message for rank assertion in _sparse_inner_flatten.
    Change: 152397909
    
    * tensor_bundle: propagrates errors related to directory creation.
    Change: 152401909
    
    * matrix_adjoint added to contrib/linalg/linear_operator_util
    Change: 152404828
    
    * Add an is_active method to plugins
    
    This method determines whether a plugin is active. A plugin may be inactive if say it lacks data. This new is_active method allows us to add a route to TensorBoard noting which plugins are active. The frontend could then avoid querying routes of inactive plugins.
    Change: 152406232
    
    * Replace a gather op for shapes by a stack op so dilated convolutions can be
    placed on GPU even with strict placing (before the gather went to CPU).
    Change: 152411159
    
    * [TF:XLA] Implement BatchToSpace, BatchToSpaceND, SpaceToBatch, SpaceToBatchND.
    Fix crashes in core implementations of the same operators for zero-sized blocks.
    Change: 152416903
    
    * Estimator saves relative paths in checkpoint.
    Change: 152420211
    
    * Fix layers_test exception regex matching.
    Change: 152422855
    
    * Unhide bijectors. Correct TransformedDistribution docstring.
    Change: 152424418
    
    * Choosing a saner default for min_eval_frequency in the constructor for Experiment for the GCS file system, because the default of 1 causes performance problems.
    Change: 152439984
    
    * Inherit use_resource from scope for partitioned variables.
    Change: 152442103
    
    * Support quantized reshape in hexagon runtime
    Change: 152445539
    
    * tfdbg CLI: add command list_source (ls) + UI fixes and improvements
    
    The new list_source (shorthand: ls) command lists Python source files responsible for constructing the nodes and tensors encountered in the run() call.
    
    It divides the source files into two categories and list them separately.
    1) files that are not part of the TensorFlow Python library, and
    2) files that are a part of it.
    
    The list contains information about how many nodes, tensors and dumps of tensors the files is responsible for. The file paths contain clickable links to the existing print_source/ps command.
    
    The list_source/ls command supports filtering by file-path and node-name regex patterns.
    
    UI fixes:
    * Fixed inconsistent black vs. transparent background color that made the layout look messy on some terminal types. Now using the transparent color for default font color consistently.
    * In the print_source command output, add clickable links to expand source lines and graph elements.
    Change: 152446002
    
    * tfcompile: Be a little more verbose about missing required flags.
    
    Fixes #9014
    Change: 152446338
    
    * Disable failing test cases in pooling_ops_test.
    Change: 152447322
    
    * Register more types for tf.image_crop_and_resize(). Resolves #9020.
    Change: 152448160
    
    * Automated rollback of change 152439984
    Change: 152450929
    
    * Add a route to TensorBoard for fetching plugin names
    
    Specifically, we add a /data/plugins_listing route to the TensorBoard application. This route responds with an object mapping the name of each initialized plugin to whether it is active.
    
    This route could help the frontend avoid issuing requests to inactive plugins.
    
    Ordered the listing of routes within application.py so there is a little more organization.
    
    Refactored the test for application to use a fake plugin.
    Change: 152451390
    
    * Added the ability to retrieve the amount of usable gpu memory
    Change: 152453470
    
    * Allow to set session ConfigProto in RunConfig and use it in Estimator.
    Change: 152454548
    
    * Colocate ResourceVariable reads with their handles.
    Change: 152455939
    
    * tfdbg: update doc for new command list_source/ls
    Change: 152456128
    
    * Make rnn directions slightly easier to follow.
    Change: 152456296
    
    * Internal change
    Change: 152458104
    
    * Adds batch renormalization.
    
    NOTE: if you use renormalization, you might want to use faster moving average updates, i.e. lower `decay` values.
    Change: 152458872
    
    * When using ImportGraphDef with a passed in ShapeRefiner, use the
    producer version of the GraphDef when importing; the ShapeRefiner
    may be initialized with a different graph_def_version, so we need
    to be able to override it.
    
    The test failed without the change to graph_constructor and passes with it.
    The test uses a legacy graph that is supported (reduction shape).
    Change: 152459169
    
    * Allow any iterable for `export_strategies` arg.
    Change: 152461826
    
    * Log steps/sec every 100 steps in MonitoredSession, as before.
    Change: 152465320
    
    * Fixes documentation to note that the in case of ties the identity of the return value of ArgMin and ArgMaxis not guaranteed .
    Change: 152465346
    
    * Automated rollback of change 152465346
    Change: 152465844
    
    * Fix shape inference fn on _ParallelConcatStart.
    Change: 152466076
    
    * Fix getting started guide
    
    Explain numerical differences in loss
    fix one example to print
    Change: 152466119
    
    * Remove superfluous mode argument.
    Change: 152467334
    
    * Add a tool that converts HLO computations to tensorflow GraphDef which can be visualized on Tensorboard.
    
    This CL defines basic tensorflow::OpDef for each HLO instruction/node. More attributes (e.g. shapes, colors) will be added in the future.
    Change: 152477918
    
    * [TF:XLA] Increase shard count of //third_party/tensorflow/compiler/tests:spacetobatch_test to reduce flakiness when built under ASAN.
    Change: 152496244
    
    * Make projector plugin backend read assets saved via the PluginAssets API.
    
    At the same time, keep backwards compatibility with the old way of looking up assets.
    Change: 152504793
    
    * Move MNIST pointers to mirror hosted by the CVDF on Google Cloud.
    Fixes: #9031
    Change: 152504901
    
    * Merge changes from github.
    Change: 152508170
    
    * Update API after changing default step couter frequency before.
    Change: 152517535
    
    * Move a few random op helper functions to header files
    
    1. shape_inference::RandomShape
    2. OpKernel::MakeShape(Tensor, TensorShape*)
    Change: 152522156
    
    * addresses the divide by zero bug
    Change: 152522488
    
    * Clarify doc on tf.assign.
    Change: 152523909
    
    * Sparse adam for resource variables.
    Change: 152525327
    
    * Automated rollback of change 152310869
    Change: 152528732
    
    * Add an env_var tf_sync_on_finish_bool that block until device has finished all queued operations in a step if true.
    Change: 152533676
    
    * Add more node attributes for HloInstruction on Tensorboard e.g. shape and layout etc.
    Change: 152534472
    
    * Add tf.complex64 GPU support to tf.gather.
    
    Also add ldg specializations for std::complex.
    Change: 152537848
    
    * Formatting changes
    Change: 152544842
    
    * Upgrade TensorBoard TypeScript to 2.2.1
    
    See also: #8326
    Change: 152545950
    
    * TEST:  Getting reasonable test sizes on linalg library, removing need for
    sharding.
    Change: 152546409
    
    * Disabling _testSourceUtilModuleReturnsTrue as its causing opensource issues.
    Change: 152548721
    
    * Fix race due to unsafe buffer forwarding in maxpooling second order gradients added in #6664.
    Re-enable previously flaky tests.
    Clean up a few minor things in maxpooling_op_gpu.cu.cc
    Change: 152550050
    
    * LinearOperator:  adjoint_arg kwarg added to all operators.  Now,
    operator.apply(x, adjoint_arg=True) means that the adjoint of 'x' is taken
    before application of operator.  Sometimes this is done more efficiently than
    simply taking adjoint.
    Change: 152560471
    
    * Adds weighted_average_loss metric key.
    Change: 152560999
    
    * Documentation: Fix bug in manual device placement example
    Change: 152563392
    
    * Change for internal compatibility.
    
    * Use std::vector for storage instead of map.
    Do the sorting inplace and return the same vector to avoid any copies.
    On larger streams it is about 50% faster.
    Change: 152576112
    
    * Add tf.add_n GPU support for complex64/complex128.
    
    Also adds a unit test for tf.add_n.
    Change: 152577190
    
    * - Adds support for nested types in tf.case and tf.cond.
    - Adds a "strict" mode which disables silent unpacking of singleton lists.
    - Adds shape inference to tf.case.
    - Adds a lot of unit tests.
    Change: 152581097
    
    * [XLA] Add support for folding transpose into convolution
    Change: 152581336
    
    * Add a smoke test to ensure that the doc generator runs.
    Change: 152592164
    
    * Add tensorboard to the _do_not_descend_map of the PublicAPIVisitor.
    Change: 152592268
    
    * Add auto parallelization to meta optimizer. Enable MetaOptimizer if any one of the optimizers is on.
    Change: 152598517
    
    * Update ops-related pbtxt files.
    Change: 152629248
    
    * Prevent the renorm_weight from being updated too early.
    Change: 152631776
    
    * Automated rollback of change 152528732
    Change: 152652473
    
    * Construct TensorBoard dashboards in a JS list
    
    Previously, adding a dashboard to TensorBoard involved changing logic in several places.
    
    As part of this effort, added constructors to dashboards. Tweaked logic in various dashboards to preserve original behavior. For instance, the graph dashboard can only perform fitting after the dashboard is attached to the DOM.
    Change: 152658532
    
    * Make CheckpointSaverListener visible next to CheckpointSaverHook.
    Change: 152662945
    
    * tfdbg CLI: minor bug fixes
    
    1: The calculation of the scroll command in the scroll bar didn't take into account that the y-coordinate of the scroll block is in the ScrollBar coordinate system, while the mouse click y-coordinate is in the screen coordinate system.
    
    2: The y position of the ScrollBar was off by one.
    
    3: The command box is not re-created after mouse-triggered commands, leading to strange-looking cursor position.
    Change: 152684294
    
    * Remove obsolete use of validate_indices from embedding_ops.py
    
    validate_indices is ignored, so it shouldn't appear in new code.
    Change: 152691948
    
    * Preparation of using GMock matchers in XLA tests.
    Change: 152691970
    
    * Replace RuntimeException by RuntimeError in coordinator documentation.
    Change: 152697758
    
    * Move the TensorBoard debugger plugin to be internal.
    
    This feature is currently not open-source anyway.
    Change: 152700267
    
    * Add a single-machine tf.learn Estimator implementation for the WALS solver.
    Change: 152700915
    
    * Add tf.contrib.training.python_input -- making it easy to feed data into
    TensorFlow from python coroutines.
    Change: 152701623
    
    * Show that QuantizeToFloat consistently introduces a small error. The
    error is equal to
      range_min - round(range_min / range_scale) * range_scale
    Change: 152702015
    
    * Internal Changes
    Change: 152703253
    
    * Remove tensorflow/tensorboard/plugins/debugger, as part of merge resolution.

commit 52dcb2590bb9274262656c958c105cb5e5cc1300
Author: Rohan Jain <rohan100jain@gmail.com>
Date:   Fri Apr 7 18:04:26 2017 -0700

    Branch 152550050 (#9059)
    
    * Improve py_func error handling.
    
    Automatically translate some python errors into corresponding TF errors at runtime.
    Change: 152156821
    
    * Update interaction with libpng so that we use the public API instead of
    knowledge of the internal libpng data structures.
    Change: 152167754
    
    * TensorBoard plugins now contain their own name/route prefix.
    Change: 152167807
    
    * Passes trainable flag to separable_conv2d biases.
    Change: 152170239
    
    * Saving resource variables with a caching device.
    Change: 152171539
    
    * Drop loss from estimator_spec.eval_metric_ops, as required by core Estimator.
    Change: 152179924
    
    * sample_stats.percentile DOCFIX.
    Change: 152182295
    
    * Added a memory optimizer to grappler.
    Change: 152184170
    
    * Change default behavior of the tf runs selector:
    
    - If there are fewer than 41 runs, enable them all by default
    - If there are 41 runs or more, disable them all by default
    
    This is in response to user complaints that having it enable only the first ten runs by default was confusing, because it was not obvious to users that some runs had been disabled.
    However, it still solves the initial user complaint that having very many runs simultaneously enabled would lag the UI.
    
    I also changed the "toggle all runs" button to try to turn everything off before turning everything on.
    Also, I improved the logic for detecting when the runs selection is back in the default state, so that we can avoid generating long URI strings wherever possible.
    Change: 152188948
    
    * Autogenerated Change: Change TensorBoard TAG to 52
    Change: 152189000
    
    * Remove warning that only happening with config cuda.
    Change: 152189205
    
    * Make resource variable shared name consistent with non-resource variables.
    
    Remove colocation constraint from resource variable cached value with the
    variable itself.
    Change: 152192203
    
    * Add a way to specify the optimization order; refactor and add constant folding to meta optimizer.
    Change: 152193646
    
    * Backport fixes and improvements from external Keras.
    Change: 152198296
    
    * Merge changes from github.
    Change: 152200430
    
    * Go: Update generated wrapper functions for TensorFlow ops.
    Change: 152200754
    
    * Update ops-related pbtxt files.
    Change: 152203174
    
    * Make ImportGraphDef() work with functions.
    
    In addition to modify graph_constructor.cc, this patch adds some other
    functionality to enable importing fucntions:
    * Ability to add FunctionDefLibraries to Graphs and
      FunctionLibraryDefinitions (in addition to existing functions)
    * FunctionDefsEqual() utility function
    Change: 152205258
    
    * Expand contrib test to more than just test targets.
    Change: 152206822
    
    * Preserve graph version during optimization
    Change: 152213262
    
    * Exclude enter and exit nodes from shape refiner's constant folding.
    Change: 152213637
    
    * Allow reshape_mover and algebraic_simplifier to make multiple mutations, by avoiding the short-circuit
    std::any_of.
    Change: 152232810
    
    * Fix dynamic_rnn transpose bug (can input/output non-3d tensors).
    
    Also a few cleanups to RNN code.
    Change: 152267628
    
    * Fix flaky tests
    Change: 152272801
    
    * Add an auto parallelization grappler optimization pass.
    Change: 152276787
    
    * Change json.decode.JSONDecodeError to ValueError.  JSONDecodeError seems to be
    the exception used in the simplejson module, not the json module.
    Change: 152278012
    
    * Internal change.
    Change: 152281471
    
    * [XLA] Force buffer sharing of separate while instructions.
    Change: 152288540
    
    * replica_device_setter should work for resource variables
    Change: 152289915
    
    * Fix ./configure script
    1. Add %workspace% in .bazelrc file when using import statement
    2. Write action_env into bazelrc file for required environment variables for OpenCL support
    Change: 152290700
    
    * Pointing a number of Tensorboard graph visualization-related help links to the new locations for the correspondent API documentation.
    Change: 152293459
    
    * Restore most of pull request #8606
    
    Pull request #8606 added str(Label(...)) for most dependencies in
    tensorflow.bzl, allowing most functions to be used from repositories which
    include TensorFlow as a submodule.  Unfortunately, it broke when pulled into
    Google and was removed in cl/152200430.  This CL restores the change, except
    for two Android-only functions; these were the only problematic bits.
    Change: 152297413
    
    * Removed dead code in Estimator.
    Change: 152297597
    
    * Assert rank is at least equal to new_rank for `_sparse_inner_flatten`.
    Change: 152303319
    
    * Extend quantization ranges to include 0.0f.
    Change: 152304380
    
    * Remove Keras config file saving.
    Change: 152306552
    
    * API backwards compatibility tests.
    Change: 152310869
    
    * [TF:XLA] Add a test for an R3 -> R4 broadcast.
    Change: 152313967
    
    * Fix the problem that no enough placeholders for persistent tensor
    batch delete
    
    The deleter_key is always a device_name, hence there is only one
    of it. Hence, we cannot delete >1 handles at one time.
    
    In the fix, it creates delete placeholder on demand, the max
    number of placeholders is _DEAD_HANDLES_THRESHOLD.
    Change: 152322770
    
    * [XLA] Add several reduction tests.
    Change: 152323510
    
    * Added the memory optimizer to the meta optimizer.
    Change: 152323689
    
    * Started a set of utilities to categorize op types
    Change: 152329057
    
    * Add AudioSpectrogram op to TensorFlow for audio feature generation
    Change: 152332221
    
    * Update ops-related pbtxt files.
    Change: 152332812
    
    * Automated rollback of change 152332221
    Change: 152333917
    
    * Call Py_CLEAR on dead fields during TF_RESOURCE-to-ndarray conversion
    Change: 152338333
    
    * [TF contrib seq2seq] Initial, incomplete implementation of beam search decoder.
    
    **DOES NOT WORK, pushed for collaboration only**
    Change: 152343927
    
    * [XLA] Change HloPassPipeline to disallow Add* calls after Run.
    Change: 152345578
    
    * Automated rollback of change 152332812
    Change: 152349057
    
    * Remove all 64/32 bit compiler warnings from core/ops.
    Change: 152353506
    
    * libtensorflow.so: Don't export private symbols.
    
    With this change, libtensorflow.so will only export
    functions defined in c_api.h. This also results in
    a decreased binary size of libtensorflow.so.
    
    On Linux the decrease was from roughly 150MB to 67MB.
    On OS X it was from roughly 101MB to 82MB.
    
    Also fixes #8923
    Change: 152366053
    
    * Add Elu ops in XLA.
    Change: 152383201
    
    * Fixed test. ('broadcast_dims' has size 1)
    Change: 152383633
    
    * Add more detailed error message for rank assertion in _sparse_inner_flatten.
    Change: 152397909
    
    * tensor_bundle: propagrates errors related to directory creation.
    Change: 152401909
    
    * matrix_adjoint added to contrib/linalg/linear_operator_util
    Change: 152404828
    
    * Add an is_active method to plugins
    
    This method determines whether a plugin is active. A plugin may be inactive if say it lacks data. This new is_active method allows us to add a route to TensorBoard noting which plugins are active. The frontend could then avoid querying routes of inactive plugins.
    Change: 152406232
    
    * Replace a gather op for shapes by a stack op so dilated convolutions can be
    placed on GPU even with strict placing (before the gather went to CPU).
    Change: 152411159
    
    * [TF:XLA] Implement BatchToSpace, BatchToSpaceND, SpaceToBatch, SpaceToBatchND.
    Fix crashes in core implementations of the same operators for zero-sized blocks.
    Change: 152416903
    
    * Estimator saves relative paths in checkpoint.
    Change: 152420211
    
    * Fix layers_test exception regex matching.
    Change: 152422855
    
    * Unhide bijectors. Correct TransformedDistribution docstring.
    Change: 152424418
    
    * Choosing a saner default for min_eval_frequency in the constructor for Experiment for the GCS file system, because the default of 1 causes performance problems.
    Change: 152439984
    
    * Inherit use_resource from scope for partitioned variables.
    Change: 152442103
    
    * Support quantized reshape in hexagon runtime
    Change: 152445539
    
    * tfdbg CLI: add command list_source (ls) + UI fixes and improvements
    
    The new list_source (shorthand: ls) command lists Python source files responsible for constructing the nodes and tensors encountered in the run() call.
    
    It divides the source files into two categories and list them separately.
    1) files that are not part of the TensorFlow Python library, and
    2) files that are a part of it.
    
    The list contains information about how many nodes, tensors and dumps of tensors the files is responsible for. The file paths contain clickable links to the existing print_source/ps command.
    
    The list_source/ls command supports filtering by file-path and node-name regex patterns.
    
    UI fixes:
    * Fixed inconsistent black vs. transparent background color that made the layout look messy on some terminal types. Now using the transparent color for default font color consistently.
    * In the print_source command output, add clickable links to expand source lines and graph elements.
    Change: 152446002
    
    * tfcompile: Be a little more verbose about missing required flags.
    
    Fixes #9014
    Change: 152446338
    
    * Disable failing test cases in pooling_ops_test.
    Change: 152447322
    
    * Register more types for tf.image_crop_and_resize(). Resolves #9020.
    Change: 152448160
    
    * Automated rollback of change 152439984
    Change: 152450929
    
    * Add a route to TensorBoard for fetching plugin names
    
    Specifically, we add a /data/plugins_listing route to the TensorBoard application. This route responds with an object mapping the name of each initialized plugin to whether it is active.
    
    This route could help the frontend avoid issuing requests to inactive plugins.
    
    Ordered the listing of routes within application.py so there is a little more organization.
    
    Refactored the test for application to use a fake plugin.
    Change: 152451390
    
    * Added the ability to retrieve the amount of usable gpu memory
    Change: 152453470
    
    * Allow to set session ConfigProto in RunConfig and use it in Estimator.
    Change: 152454548
    
    * Colocate ResourceVariable reads with their handles.
    Change: 152455939
    
    * tfdbg: update doc for new command list_source/ls
    Change: 152456128
    
    * Make rnn directions slightly easier to follow.
    Change: 152456296
    
    * Internal change
    Change: 152458104
    
    * Adds batch renormalization.
    
    NOTE: if you use renormalization, you might want to use faster moving average updates, i.e. lower `decay` values.
    Change: 152458872
    
    * When using ImportGraphDef with a passed in ShapeRefiner, use the
    producer version of the GraphDef when importing; the ShapeRefiner
    may be initialized with a different graph_def_version, so we need
    to be able to override it.
    
    The test failed without the change to graph_constructor and passes with it.
    The test uses a legacy graph that is supported (reduction shape).
    Change: 152459169
    
    * Allow any iterable for `export_strategies` arg.
    Change: 152461826
    
    * Log steps/sec every 100 steps in MonitoredSession, as before.
    Change: 152465320
    
    * Fixes documentation to note that the in case of ties the identity of the return value of ArgMin and ArgMaxis not guaranteed .
    Change: 152465346
    
    * Automated rollback of change 152465346
    Change: 152465844
    
    * Fix shape inference fn on _ParallelConcatStart.
    Change: 152466076
    
    * Fix getting started guide
    
    Explain numerical differences in loss
    fix one example to print
    Change: 152466119
    
    * Remove superfluous mode argument.
    Change: 152467334
    
    * Add a tool that converts HLO computations to tensorflow GraphDef which can be visualized on Tensorboard.
    
    This CL defines basic tensorflow::OpDef for each HLO instruction/node. More attributes (e.g. shapes, colors) will be added in the future.
    Change: 152477918
    
    * [TF:XLA] Increase shard count of //third_party/tensorflow/compiler/tests:spacetobatch_test to reduce flakiness when built under ASAN.
    Change: 152496244
    
    * Make projector plugin backend read assets saved via the PluginAssets API.
    
    At the same time, keep backwards compatibility with the old way of looking up assets.
    Change: 152504793
    
    * Move MNIST pointers to mirror hosted by the CVDF on Google Cloud.
    Fixes: #9031
    Change: 152504901
    
    * Merge changes from github.
    Change: 152508170
    
    * Update API after changing default step couter frequency before.
    Change: 152517535
    
    * Move a few random op helper functions to header files
    
    1. shape_inference::RandomShape
    2. OpKernel::MakeShape(Tensor, TensorShape*)
    Change: 152522156
    
    * addresses the divide by zero bug
    Change: 152522488
    
    * Clarify doc on tf.assign.
    Change: 152523909
    
    * Sparse adam for resource variables.
    Change: 152525327
    
    * Automated rollback of change 152310869
    Change: 152528732
    
    * Add an env_var tf_sync_on_finish_bool that block until device has finished all queued operations in a step if true.
    Change: 152533676
    
    * Add more node attributes for HloInstruction on Tensorboard e.g. shape and layout etc.
    Change: 152534472
    
    * Add tf.complex64 GPU support to tf.gather.
    
    Also add ldg specializations for std::complex.
    Change: 152537848
    
    * Formatting changes
    Change: 152544842
    
    * Upgrade TensorBoard TypeScript to 2.2.1
    
    See also: #8326
    Change: 152545950
    
    * TEST:  Getting reasonable test sizes on linalg library, removing need for
    sharding.
    Change: 152546409
    
    * Disabling _testSourceUtilModuleReturnsTrue as its causing opensource issues.
    Change: 152548721
    
    * Fix race due to unsafe buffer forwarding in maxpooling second order gradients added in #6664.
    Re-enable previously flaky tests.
    Clean up a few minor things in maxpooling_op_gpu.cu.cc
    Change: 152550050

commit ef2f8891ad409e41f4f9b8e9cfd86b519adb6da6
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Fri Apr 7 14:17:57 2017 -0800

    Fix race due to unsafe buffer forwarding in maxpooling second order gradients added in #6664.
    Re-enable previously flaky tests.
    Clean up a few minor things in maxpooling_op_gpu.cu.cc
    Change: 152550050

commit 97c447c0fc0c0c85473287b2828460cbab3f8128
Author: Kiril Gorovoy <kgorovoy@google.com>
Date:   Wed Apr 5 09:19:54 2017 -0800

    Fix flaky tests
    Change: 152272801

commit bca9716c517f05277497da16a358286098a1070d
Author: Peter Hawkins <phawkins@google.com>
Date:   Wed Mar 29 20:22:13 2017 -0800

    [TF:XLA:GPU] Fix flaky convolution tests by increasing test tolerance.
    Change: 151662713

commit 699f9d4ed3b85bb801ce6111732396b6244746fc
Author: Ian Langmore <langmore@google.com>
Date:   Tue Mar 28 07:41:29 2017 -0800

    TESTFIX:  Test for dirichlet multinomial was flaky (once every 15 days).
    Everything is seeded, so not sure why.  Perhaps an occasional low value of
    alpha caused covariance to be near zero, and this caused a failure because
    relative tolerance near zero events should be poor, and then we figure maybe a
    fail happens due to different float precision on different machines.  This
    attempted fix is to increase alpha.
    Change: 151453406

commit 064cbdab9cc9db1be05f5f71995703e685a0458a
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Wed Mar 22 20:56:16 2017 -0800

    Disable flaky conv_ops_3d_test
    Change: 150968369

commit 176833807d68f3fac8f35b912d67b378235746a0
Author: Jianwei Xie <xiejw@google.com>
Date:   Wed Mar 22 13:24:41 2017 -0800

    Fix and re-enable the flaky test in ExperimentTest.
    Change: 150927460

commit 554e76808cd52dd3942d2fc6d51f1e8bae756467
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Tue Mar 21 21:46:04 2017 -0800

    Disable flaky pooling_ops_3d_test.
    Change: 150846197

commit 11ef7c025fe147c368da8b16b336ceca5a2e3ffb
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Sat Mar 18 00:44:02 2017 -0800

    Disable flaky tensorboard/backend:application_test
    Change: 150523210

commit a02f6037dc3ee7ccb01e2daf935a47ed0f774449
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Thu Mar 16 10:25:54 2017 -0800

    Disable flaky grappler:utils_test
    Change: 150344647

commit 60aa9d48b409f62de1310a522f3303bc349f6284
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Thu Mar 16 10:03:25 2017 -0800

    Disable debug_gateway_test as it is flaky also on linux.
    Change: 150341207

commit 91d502ad1f752838371c0f5059c1b2dce5f6e074
Author: Martin Wicke <wicke@google.com>
Date:   Wed Mar 15 23:17:55 2017 -0800

    Fix flaky experiment_test.
    Change: 150289601

commit d2bf01f51781611294babe1dee38e2e56de70809
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Wed Mar 15 12:52:38 2017 -0800

    Disable more flaky test cases in input_test.
    Change: 150237287

commit 2dbadb252844b72fb0ed4dedb5061f80c60f161b
Author: Jonathan Hseu <jhseu@google.com>
Date:   Mon Mar 13 14:42:34 2017 -0800

    Disable test_save_secs_calls_listeners_periodically because it's pretty flaky.
    Change: 150001327

commit 9dc61279f2bf529f187d0ba00e7feaa6f89e6ac0
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Mon Mar 13 13:39:37 2017 -0800

    Disable flaky tests in tensorflow/python:input_test
    Change: 149992144

commit c1af2f81dea1bd2ec9814f63cfdaf016872e7e29
Author: Peter Hawkins <phawkins@google.com>
Date:   Mon Mar 13 06:54:20 2017 -0800

    [TF:XLA] Increase the absolute error threshold for convolution tests on GPU to fix flaky 3D convolution test.
    Change: 149939991

commit 95bb18c2fadb3391030f312a0e261173fac6b123
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Fri Mar 3 16:13:56 2017 -0800

    Disable flaky pandas_io_test
    Change: 149165553

commit 936e5937220f18591a04c3baa91ad0f5aaacb171
Author: Jianwei Xie <xiejw@google.com>
Date:   Fri Mar 3 09:10:25 2017 -0800

    Does pandas import check in each caller file directly to avoid flaky tests.
    Change: 149118694

commit a846396e562801c63119a5b163e25abe229207ed
Author: John Bates <jtbates@google.com>
Date:   Mon Feb 27 16:03:40 2017 -0800

    state_saving_rnn_estimator_test.py is no longer flaky.
    Change: 148707426

commit dfd0e626e97e68fde8226265c18ac1ad6696e1ae
Author: Alexandre Passos <apassos@google.com>
Date:   Thu Feb 16 10:13:42 2017 -0800

    Temporarily disable feeder_test because it's flaky.
    Change: 147734454

commit 3e87038e9e1436e1b4cb593f08f3c5d59b7f06b9
Author: Shanqing Cai <cais@google.com>
Date:   Sat Feb 11 23:11:36 2017 -0800

    tfdbg core: temporarily disable flaky test on GPU
    
    RunSimpleNetworkConcurrentlyWithDifferentDebugTensorWatches in debug_gateway_test has been flaky on GPU at a rate of ~0.5%. This CL restrict this test method to CPU only until the underlying root cause of the flakiness is addressed.
    Change: 147269341

commit da579869e8ad26b0a2d5c0b2fcba05d926a0c367
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Tue Feb 7 20:29:13 2017 -0800

    Bump the size of flaky core_rnn_test.

commit de13986f0a6ba7e986f43ada069a55153e6130ca
Author: David Soergel <soergel@google.com>
Date:   Tue Jan 31 21:49:26 2017 -0800

    Make timestamp-based test less flaky by increasing delay
    Change: 146204375

commit 45208ae00457d92ae4bb5889a35597a155074457
Author: Derek Murray <mrry@google.com>
Date:   Fri Jan 20 11:10:24 2017 -0800

    Avoid opening multiple servers in the same test where possible.
    
    This reduces flaky failures in //tensorflow/python:server_lib_test, which
    appear to be aggrevated by shared state in the gRPC layer.
    Change: 145104957

commit fdb4213357d10f66d5cffd229976c8042e8f9af7
Author: Jonathan Hseu <jhseu@google.com>
Date:   Wed Dec 21 09:05:18 2016 -0800

    Fix flaky SparseMatMul test. Test uses uninitialized variables, which can occasionally be NaN.
    Change: 142669425

commit f7048fc88b44102e745def51a8b2610c4aacb139
Author: Joshua V. Dillon <jvdillon@google.com>
Date:   Wed Dec 21 02:05:41 2016 -0800

    Fix Student's T flaky tests.
    Change: 142643418

commit 23f4b63640a2cc9e009dc4b2ebe7ece37795415e
Author: Benoit Steiner <benoit.steiner.goog@gmail.com>
Date:   Sun Dec 18 13:48:15 2016 -0800

    Made sure that the copy from gpu to cpu completes before processding further. This solves a race condition that made some test flaky

commit 3347811389a34b0f1776f23a781ff59c4a26aa4f
Author: Benoit Steiner <benoit.steiner.goog@gmail.com>
Date:   Sun Dec 18 13:48:15 2016 -0800

    Made sure that the copy from gpu to cpu completes before processding further. This solves a race condition that made some test flaky

commit 153d57cea49181d4aca4b684ed681a6e060763e0
Author: Derek Murray <mrry@google.com>
Date:   Wed Dec 14 17:05:05 2016 -0800

    Disable flaky test case in grpc_session_test.
    Change: 142084021

commit d4f0c52f2485cf0c4370b9832397fe70fae63f3c
Author: Pete Warden <petewarden@google.com>
Date:   Fri Dec 9 11:34:28 2016 -0800

    Fix for flaky dequantize test
    Change: 141580230

commit 2800a6a1939570ea72f15d39c06447e1c25c9e39
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Wed Dec 7 17:23:28 2016 -0800

    Disable all tests depending on *half_plus_two* genrules.
    
    This is a measure to stabilize flaky GPU builds.

commit 57004b1e3a15fccdc2a41273595d9f2a6f94e22f
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Mon Dec 5 16:52:08 2016 -0800

    Set resent_v1_test and resnet_v2_test to "large" since they seem to have flaky
    timeouts since last week.
    Change: 141119294

commit ecae26fb5cb32a1703ecb3862410878e35242945
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Mon Nov 21 16:59:06 2016 -0800

    Fix SubProcess Communicate() for macOS.
    
    On macOS, poll(2) may return POLLNVAL for a valid file descriptor that was
    closed on its remote side (by the other process) before this process calls
    poll() the first time.  Treat this case as an error.
    
    Re-enable the SubProcess tests, one of which (StdinChildExit) appeared
    flaky on macOS depending on the timing of the child process exiting and
    the parent process first calling poll().
    Change: 139850066

commit dca48e8b5adbb328c09a43b7d19300b52680d7ac
Merge: f970edb e207741
Author: Derek Murray <derek.murray@gmail.com>
Date:   Fri Nov 18 12:00:15 2016 -0800

    Merge pull request #5698 from mrry/flakylockingfix
    
    [Windows/CMake] Avoid file locking race in protoc.

commit e207741f6b9ef68b69f10920b0471af4b99d8f8b
Author: Derek Murray <mrry@google.com>
Date:   Fri Nov 18 10:55:03 2016 -0800

    [Windows/CMake] Avoid file locking race in protoc.
    
    In particular, we avoid regenerating the C++ protobuf implementations
    for `tensorflow/core` proto files, because this can trigger a flaky
    race when run on Windows.
    
    Another reminder of why hermetic builds are delightful, I suppose :).

commit 7226679e51f73abaa19048d6c4c1fcb88a7869de
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Fri Nov 18 08:45:43 2016 -0800

    Mark test as flaky.
    Change: 139585378

commit edbddbd13edd7dc03389e09e7e6c56d48acf8d29
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu Nov 17 17:09:16 2016 -0800

    Fix flaky test for orthogonal initializer.
    Change: 139527110

commit def0c7f943de70675aad7adf88b43dbac2486b60
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Mon Oct 31 21:36:16 2016 -0800

    Disable flaky test_save_secs_saves_periodically.
    Change: 137788894

commit bf6270be2de71ca9570f3223cf3541759be62684
Author: Jonathan Hseu <jhseu@google.com>
Date:   Mon Sep 26 15:58:30 2016 -0800

    Fix python/kernel_tests/io_ops_test timeout by using the test temp directory.
    
    Also fixed the other locations in which we used tempfile in tests.
    
    It would otherwise try to match everything under /tmp, which results in a
    timeout and flaky tests.
    Change: 134345468

commit a112b988d0976493adab04b9cb2af771882a4904
Author: Jonathan Hseu <jhseu@google.com>
Date:   Mon Sep 26 15:58:30 2016 -0800

    Fix python/kernel_tests/io_ops_test timeout by using the test temp directory.
    
    Also fixed the other locations in which we used tempfile in tests.
    
    It would otherwise try to match everything under /tmp, which results in a
    timeout and flaky tests.
    Change: 134345468

commit c406bd7bbe23781c8984227404395b1f87ee2602
Author: Martin Wicke <martin.wicke@gmail.com>
Date:   Fri Sep 23 10:38:54 2016 -0700

    Make division_past_test medium (#4556)
    
    It's flaky with 60s timeout.

commit 63263dff15cf4e18469bc1ffcada7f3c58b53f21
Author: Eugene Brevdo <ebrevdo@google.com>
Date:   Tue Sep 20 13:54:47 2016 -0800

    Enable pass-through of flaky tag to tf_py_test and friends.
    Change: 133758126

commit a0d929df36ca7d6f72184371f6c3d6d877dded3e
Author: Martin Wicke <martin.wicke@gmail.com>
Date:   Tue Sep 20 14:45:36 2016 -0700

    Disable flaky rendezvous_test (#4491)

commit cb9d147e9c788cc60ebb255fd26971719c7e2db2
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu Sep 15 15:25:23 2016 -0800

    Modify a flaky test in dnn_sampled_softmax_classifier_test.py
    Change: 133323098

commit 09573e330870c2e00ee5119a93bf0a87ae0d08bf
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Tue Sep 13 15:48:37 2016 -0800

    Shard tensorflow_dataframe_test to make it less flaky.
    Change: 133066016

commit 0f95ea0d8dde9f944ca702bbc5d5010cc9c0a9fa
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu Sep 1 09:48:57 2016 -0800

    Fix flaky random_gamma_test.
    First, increased tolerance for zeros so that 1000 runs passed (max observed for double was 23 zeros out of 10k, desired was 8.4).
    Then, set a fixed seed.
    Change: 131966086

commit 76885d41e22448ea9825c7f632bb1855ce0ce1ec
Author: Olivia Nordquist <nolivia@google.com>
Date:   Wed Aug 31 15:00:58 2016 -0800

    contrib layers test is flaky, turning off for now
    Change: 131884536

commit 14146362d565b8e9fb1e26b234e988c8e4e8917e
Author: Olivia Nordquist <nolivia@google.com>
Date:   Wed Aug 31 14:07:09 2016 -0800

    nonlinear test is flaky in asan: turning off for now
    Change: 131878086

commit 80acdaf4975b6572aa8dacd0e10997e17d370f69
Author: Dan Smilkov <smilkov@google.com>
Date:   Wed Aug 31 09:24:10 2016 -0800

    Replace new_git_repository with new_http_archive in Bazel rules.
    
    new_git_repository is flaky when cloning big repos (e.g. threejs which will be added soon). Also downloading a compressed archive is faster than git clone and uses less disk space since http_archive doesn't download the whole history of the repo.
    Change: 131844039

commit 2b90022e65f52d7803865f691dd13c742c58dc14
Author: Shanqing Cai <cais@google.com>
Date:   Thu Aug 25 19:52:12 2016 -0800

    Temporarily disable flaky extract_image_patches_grad_test internally
    Change: 131364069

commit b6eb3dd766cc821beaff7cbb1dee3e814f54dbff
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu Aug 18 15:16:22 2016 -0800

    Fixing the flaky contrib/learn:export_test.
    Change: 130695007

commit a7b2a2918ea312ee0b601b6d6716d0a02fad5e06
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Wed Aug 17 08:02:28 2016 -0800

    Makes rnn_test less flaky.
    Change: 130525150

commit 46fdbf92cfa8666a089007f1a2bf13f376591737
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Tue Aug 16 19:33:47 2016 -0800

    Fixes flaky supervisor_test by removing possible conflicts between simultaneous
    runs accessing variable with same name.
    Change: 130479600

commit d686398858c724b6751b7a0e68bc36b8b000e7a8
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Sun Aug 14 22:46:05 2016 -0800

    Replaces flaky multithreaded tests (testReadyForLocalInitOp and
    testReadyForLocalInitOpRestoreFromCheckpoint) with single-thread test.
    Change: 130254907

commit 5eacd03f085f881b4c3c287e73d80b18bdc91b6e
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Fri Aug 12 17:00:00 2016 -0800

    Add manual tag to flaky rnn_test
    Change: 130160598

commit 15bcda45ba29260551b6c765a0dd187ce3ba27f1
Author: Rohan Jain <rohanj@google.com>
Date:   Wed Aug 10 16:40:39 2016 -0800

    Disabling //third_party/tensorflow/python:saver_large_partitioned_variable_test on tsan as its flaky there.
    Change: 129934234

commit 4da15d22151f406575a3f3ee1e8fa0e4ebee43ff
Author: Wei Ho <weiho@google.com>
Date:   Wed Aug 10 14:20:54 2016 -0800

    Fix flaky testSklearnCompatibility() by increasing train steps
    Change: 129918998

commit 7b2cc1c90b450aac5d28262744c4a0044368a495
Author: Suharsh Sivakumar <suharshs@google.com>
Date:   Fri Jul 15 11:06:16 2016 -0800

    Initialize random seed in TensorflowTestCase Setup to reduce flakiness in unittests.
    
    This uncovered:
    - a few flaky tests, that started failing deterministically :). Their fixes are included
      in this CL.
    - random_shuffle_queue with a shared_name always fails if a user provides a graph-level
      random seed. This is because the op_level seed returned from random_seed.get_seed
      changes per graph operation. The fix for this is also included in this CL.
    
    While I was here, also added a test for random_seed, since the logic in there has
    become a bit complicated.
    Change: 127564438

commit f564209aa9b9555d76fafe4091710deba6ed50b1
Author: Vijay Vasudevan <vrv@google.com>
Date:   Tue Jul 12 09:09:44 2016 -0800

    Disable flaky tests
    Change: 127212113

commit 1e8a65c6fcdae14823e433476d34aa13cb2b1134
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Fri Jul 8 12:21:25 2016 -0800

    Fix flaky test
    Change: 126940987

commit f3ceebf3a013697bdf90c9d10f3c1faf2408fbe4
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Wed Jul 6 13:44:36 2016 -0800

    Disable flaky kmeans_test
    Change: 126739978

commit 4616f17e72effe6bc9b372ff02f8dbfe536c2c12
Author: Shanqing Cai <cais@google.com>
Date:   Wed Jul 6 09:43:35 2016 -0800

    Disable flaky contrib/learn:export_test with the manual tag
    Change: 126713223

commit 6c49cc365d6b67e82be035ee14d17206019405b4
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Fri Jun 24 07:35:38 2016 -0800

    Remove a flaky test from the automated build.
    Change: 125783336

commit 331e724d1fec7737cee3172064210ebb26136711
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Fri Jun 24 05:29:25 2016 -0800

    Fix a flaky test by computing half-precision gamma samples with float precision intermediate calculations.
    Change: 125776264

commit 7d2da3bc75f4a84c195fbc77d58c5bd1e5bdda52
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Thu Jun 23 10:53:44 2016 -0800

    Disable a flaky test.
    Change: 125701630

commit c4eaa0e9b5409a67b53bbe50e5e593ad8c0f7f1e
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Tue Jun 14 13:47:20 2016 -0800

    Blacklist flaky learn/tests/nonlinear_test.py from running in PIP
    tests.
    Also fix a typo for another blacklisted test.
    Change: 124884425

commit bbf29e491d0e1c40dbe820767505706e69c88dfa
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Mon Jun 13 20:17:51 2016 -0800

    Blacklist flaky early_stopping_test from pip install tests.
    
    Also remove a line from the exclusion list duplicated file_system_test.
    Change: 124802050

commit f34e3976228e0c15d979786823c83a780eebb212
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Fri Jun 10 23:39:51 2016 -0800

    Disable flaky test from automated tests
    Change: 124629567

commit 81da60af3ac4f561333c7e2e1892fea0b3951ff4
Author: Josh Levenberg <josh11b@tensorflow.org>
Date:   Thu Jun 9 14:45:06 2016 -0800

    Disable flaky rnn_test.
    Change: 124506468

commit 1830087f7ae9c80d2cb6d6ca0f5ed1806d30a522
Author: Josh Levenberg <josh11b@tensorflow.org>
Date:   Thu Jun 9 09:39:23 2016 -0800

    Disable flaky //tensorflow/contrib/learn:graph_io_test.
    Change: 124472535

commit 41ebb7b5bd33ee5d3f4ccdc30ba06616f86aa877
Author: Josh Levenberg <josh11b@tensorflow.org>
Date:   Wed Jun 8 19:59:36 2016 -0800

    Disable flaky test
    //tensorflow/core:common_runtime_gpu_gpu_allocator_retry_test
    Change: 124424675

commit b83b6d97805ce030de4af07d117609d88da2d93a
Author: Josh Levenberg <josh11b@tensorflow.org>
Date:   Wed Jun 8 17:01:05 2016 -0800

    Disable flaky test //tensorflow/contrib/learn:nonlinear_test
    Change: 124415641

commit 9528574ac8e89579a20c5d12e163a73fa814e8aa
Author: Josh Levenberg <josh11b@tensorflow.org>
Date:   Tue Jun 7 15:52:39 2016 -0800

    Disable flaky test.
    Change: 124302149

commit 88c72e1ba60ed4a46232c92a2222a760807b1f54
Author: Illia Polosukhin <ilblackdragon@gmail.com>
Date:   Fri Jun 3 10:46:19 2016 -0800

    Fix the flaky test in nonlinear_test.
    Change: 123989954

commit b531939b601da333243f10988a8ddccaf35c4811
Author: A. Unique TensorFlower <nobody@tensorflow.org>
Date:   Fri May 27 10:46:25 2016 -0800

    Fix flaky layer_test.
    Change: 123439909

commit f037135f5e51559e766ee471f4888807a257a1fd
Author: Dan Smilkov <dsmilkov@gmail.com>
Date:   Tue Apr 26 12:33:16 2016 -0800

    Fix flaky test failure in firefox where asking for bounding box of an svg element that has been detached from the dom produces NS_ERROR_FAILURE
    Change: 120846455

commit 9e4f8f61af7ae11ac5eb1d19be6b3baa42dae04d
Author: Dan Smilkov <dsmilkov@gmail.com>
Date:   Mon Apr 25 08:54:21 2016 -0800

    When the user switches tabs quickly, the zoom events contain NaNs that are now ignored. Also fix the minimap issue when the user tries zooming in before the scene is ready.
    
    This should also fix the flaky test.
    Change: 120716688

commit 972d7327896a193b32c1a08eeb6c328e9ec95ea4
Author: Vijay Vasudevan <vrv@google.com>
Date:   Tue Mar 29 16:07:40 2016 -0800

    TensorFlow: disable a flaky test in gpu_allocator_retry_test
    Change: 118522346

commit 701792e4d4ecc1597b2f66fc3e63b38b3482c1bf
Author: Geoffrey Irving <geoffreyi@google.com>
Date:   Tue Mar 22 14:44:21 2016 -0800

    Fix tf.complex_abs gradient test to not be flaky
    Change: 117872871

commit b3da7b11f978f105af0952dd0b1f0fdd92484ded
Author: Geoffrey Irving <geoffreyi@google.com>
Date:   Tue Mar 22 14:00:24 2016 -0800

    slice_op_test.py needs size = "medium"
    
    Otherwise it is flaky.
    Change: 117868217

commit a0d21ec39cc3f18781d2d37798aa328e12f92844
Author: Derek Murray <mrry@google.com>
Date:   Tue Mar 15 15:59:05 2016 -0800

    Disable //third_party/tensorflow/core/distributed_runtime:master_test.
    
    This test is flaky. We need a more robust solution for starting
    multiple processes and connecting them; `PickUnusedPortOrDie()` is not
    robust to multiple concurrent tests on the same host. A possible
    approach would be to add a portserver, or add a handshake between the
    parent test process and the server processes.
    Change: 117293607

commit d21baffdf3d1ef7ea9d36f6b4c6499efc8ba165f
Author: Derek Murray <mrry@google.com>
Date:   Wed Mar 9 15:44:58 2016 -0800

    Remove the C++ "grpc_server_lib_test".
    
    This test has been flaky, and the functionality is better tested by
    the Python server_lib_test.
    Change: 116811917

commit 155cb0ff84e9ece3bee0f06eb3bf5f92d5ca15ac
Author: Vijay Vasudevan <vrv@google.com>
Date:   Fri Feb 5 14:07:58 2016 -0800

    TensorFlow: make gpu_allocator_retry_test tagged with 'nomac',
    since it is flaky and unneeded on the mac platform.
    Change: 113983903

commit 158121a94aebb1d49ed6f496691a704029d0d453
Author: Illia Polosukhin <ilblackdragon@gmail.com>
Date:   Wed Dec 23 00:10:39 2015 -0800

    Disable pylint's cyclic-import as it is required for estimator introspection. Bumped version of TF in travis install script to 0.6. Set random seed in test_multioutput as it was flaky

commit 2c3738db9c4df83adc1aff29f5cb0e9735dd5eac
Author: Vijay Vasudevan <vrv@google.com>
Date:   Tue Dec 8 14:55:13 2015 -0800

    TensorFlow: Upstream changes to git.
    
    Change 109730179
    	Add support for selecting partition strategy in tf.nn.embedding_lookup and related ops, and allow unequally-sized shards to be used as input.
    Change 109729548
    	TensorFlow: add RELEASE.md notes for 0.6.0.
    Change 109728185
    	Make seq2seq_test non-flaky by setting python and numpy random seed.
    Change 109725913
    	Refactor slot creation in optimizers and moving averages to separate file
    Change 109718024
    	TensorFlow: reduce runtime of seq2seq_test from ~30s to ~18s.
    Change 109712251
    	More performance improvement for convnet on GPU.
    	+ Switch forward convolution format to NCHW.
    	+ Allocate scratch space for forward- and backward- convolutions.
    	+ Users can use "TF_CUDNN_WORKSPACE_LIMIT_IN_MB" to configure the scratch space
    	limit. The default limit in 1GB.
    Change 109710898
    	Added extract_sub_graph utility function
    
    Base CL: 109731609
